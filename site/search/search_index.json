{
    "docs": [
        {
            "location": "/", 
            "text": "Bienvenid@s\n\n\nEl presente espacio recopila teor\u00eda y ejercicios pr\u00e1cticos sobre temas relacionados con la implementaci\u00f3n de redes y servicios utilizando, siempre que sea posible, software de c\u00f3digo abierto. Los contenidos intentan cubrir los objetivos propuestos en el dise\u00f1o curricular de la materia \nInstalaci\u00f3n, mantenimiento y reparaci\u00f3n de redes inform\u00e1ticas\n correspondiente al s\u00e9ptimo a\u00f1o de estudios de la escuela secundaria t\u00e9cnica, con orientaci\u00f3n \nT\u00e9cnico en Inform\u00e1tica Profesional y Personal\n, en Buenos Aires, Argentina. \n\n\nSoftware a emplear\n\n\nLas clases se dictar\u00e1n en un laboratorio virtual local ubicado en el instituto. No obstante, es posible obtener las herramientas de software que se utilizar\u00e1n a lo largo de la cursada: \n\n\n\n\nUbuntu Desktop 16.04 LTS - 32 bits\n\n\nUbuntu Desktop 16.04 LTS - 64 bits\n\n\nUbuntu Server 16.04 LTS - 32 bits\n\n\nUbuntu Server 16.04 LTS - 64 bits\n\n\n\n\n\n\nAtenci\u00f3n\n\n\nSitio en construcci\u00f3n", 
            "title": "Inicio"
        }, 
        {
            "location": "/#bienvenids", 
            "text": "El presente espacio recopila teor\u00eda y ejercicios pr\u00e1cticos sobre temas relacionados con la implementaci\u00f3n de redes y servicios utilizando, siempre que sea posible, software de c\u00f3digo abierto. Los contenidos intentan cubrir los objetivos propuestos en el dise\u00f1o curricular de la materia  Instalaci\u00f3n, mantenimiento y reparaci\u00f3n de redes inform\u00e1ticas  correspondiente al s\u00e9ptimo a\u00f1o de estudios de la escuela secundaria t\u00e9cnica, con orientaci\u00f3n  T\u00e9cnico en Inform\u00e1tica Profesional y Personal , en Buenos Aires, Argentina.", 
            "title": "Bienvenid@s"
        }, 
        {
            "location": "/#software-a-emplear", 
            "text": "Las clases se dictar\u00e1n en un laboratorio virtual local ubicado en el instituto. No obstante, es posible obtener las herramientas de software que se utilizar\u00e1n a lo largo de la cursada:    Ubuntu Desktop 16.04 LTS - 32 bits  Ubuntu Desktop 16.04 LTS - 64 bits  Ubuntu Server 16.04 LTS - 32 bits  Ubuntu Server 16.04 LTS - 64 bits    Atenci\u00f3n  Sitio en construcci\u00f3n", 
            "title": "Software a emplear"
        }, 
        {
            "location": "/ssh/authKey/", 
            "text": "La autenticaci\u00f3n de llave p\u00fablica permite el inicio de sesi\u00f3n de un usuario en el servidor remoto mediante el empleo de archivos de clave, lo que aumente considerablemente la seguridad del servidor. \n\n\nA continuacipon se describen una serie de pasos que nos permitir\u00e1n iniciar sesi\u00f3n en un servidor remoto sin utilizar contrase\u00f1a. En su lugar emplearemos uno par de archivos encriptados conocidos como llave (o clave) privada y llave (o clave) p\u00fablica. \n\n\n\n\nGlosario\n\n\nEn el presente tutorial, \nm\u00e1quina local\n hace referencia a nuestra computadora y \nservidor\n al servidor remoto. \n\n\n\n\nGenerando llaves\n\n\nA continuaci\u00f3n se describe el procedimiento para generar un par de claves (p\u00fablica y privada) para conectarse a un servidor GNU/Linux sin necesidad de ingresar usuario y contrase\u00f1a. \n\n\nEn Microsoft Windows\n\n\nEn primer lugar, tendremos que descargar el programa PuttyGen: \n\n\n\n\nPuttygen - 32 bits\n\n\nPuttygen - 64 bits\n\n\n\n\nAbrimos el programa y veremos una interfaz similar a la siguiente: \n\n\n\n\nHacemos clic en el bot\u00f3n \nGenerate\n y acto seguido agitamos el cursor en el \u00e1rea blanca de la ventana del programa: \n\n\n\n\nPor \u00faltimo, debermos guardar la \nclave p\u00fablica\n haciendo clic sobre el bot\u00f3n \nSave public key\n y la \nclave privada\n haciendo clic sobre el bot\u00f3n \nSave private key\n\n\n\n\nEn GNU/Linux\n\n\nLogueados\n con nuestro usuario normal en la \nm\u00e1quina local\n, ejecutamos: \n\n\nssh-\nkeygen\n\n\n\n\n\n\nAunque podemos ingresar otros valores, si presionamos la tecla \nEnter\n estaremos aceptando los valores por defecto para los nombres de las llaves y su ubicaci\u00f3n, a saber: \n\n\n\n\n\n\n\n\nRecurso\n\n\nTipo\n\n\nDescripci\u00f3n\n\n\n\n\n\n\n\n\n\n\n/home/usuario/.ssh\n\n\nDirectorio (oculto)\n\n\nUbicaci\u00f3n por defecto de los archivos de clave\n\n\n\n\n\n\nid_rsa\n\n\nArchivo\n\n\nLlave privada\n\n\n\n\n\n\nid_rsa.pub\n\n\nArchivo\n\n\nLlave p\u00fablica\n\n\n\n\n\n\n\n\nA continuaci\u00f3n, se nos pedir\u00e1 el \ningreso de una frase de contrase\u00f1a o \npassphrase\n para asegurar las llaves. Podemos ingresar la contrase\u00f1a o dejarla en blanco presionando la tecla \nEnter\n. \n\n\n\n\nTip\n\n\nSi dejamos la contrase\u00f1a en blanco podremos usar la llave sin introducir contrase\u00f1a. Si ingresamos una contrase\u00f1a necesitaremos ambas (la llave privada y la contrase\u00f1a) para iniciar sesi\u00f3n. Asegurar las llaves con contrase\u00f1a es m\u00e1s seguro, pero ambos m\u00e9todos tienen sus usos y son m\u00e1s seguros que la autenticaci\u00f3n de contrase\u00f1a b\u00e1sica.\n\n\n\n\nCopiando la llave p\u00fablica\n\n\nTendremos que copiar la clave p\u00fablica en el servidor agreg\u00e1ndola al archivo \n/home/usuario/.ssh/authorized_keys\n del usuario remoto. (donde deber\u00e1 reemplazar \nusuario\n por el usuario remoto). \n\n\nM\u00e9todo manual\n\n\nTendremos que iniciar sesi\u00f3n en el servidor con el usuario al que queremos permitir acceso mediante el uso de clave asim\u00e9trica. Ejecutamos los siguintes comandos (uno por vez):\n\n\ncd\n\ncd .ssh\n\nvim\n authorized_keys\n\n\n\n\n\nUna vez abierto el archivo \nauthorized_keys\n tendremos que copiar dentro de \u00e9l, el contenido de la clave p\u00fablica generada en el punto anterior, vereficando que el formato de la misma sea el similar al siguiente:\n\n\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCB007n/ww+ouN4gSLKssMxXnBOvf9LGt4L\nojG6rs6hPB09j9R/T17/x4lhJA0F3FR1rP6kYBRsWj2aThGw6HXLm9/5zytK6Ztg3RPKK+4k\nYjh6541NYsnEAZuXz0jTTyAUfrtU3Z5E003C4oxOj6H0rfIF1kKI9MAQLMdpGW1GYEIgS9Ez\nSdfd8AcCIicTDWbqLAcU4UpkaX8KyGlLwsNuuGztobF8m72ALC/nLF6JLtPofwFBlgc+myiv\nO7TCUSBdLQlgMVOFq1I2uPWQOkOWQAHukEOmfjy2jctxSDBQ220ymjaNsHT4kgtZg2AYYgPq\ndAv8JggJICUvax2T9va5 usuario@dominio_o_direccion_ip_servidor\n\n\n\n\n\nM\u00e9todo por comandos\n\n\nPara que podamos iniciar sesi\u00f3n en el servidor remoto, ejecutamos en la \nm\u00e1quina local\n: \n\n\nssh-copy-\nid\n usuario_remoto@ip_del_servidor_remoto\n\n\n\n\n\nSe nos pedir\u00e1 la contrase\u00f1a del usuario remoto. \n\n\nAhora se puede usar la llave privada correspondiente para iniciar sesi\u00f3n en el servidor.\n\n\nDeshabilitando el inicio de sesi\u00f3n por contrase\u00f1a en el servidor\n\n\nAhora que nuestro usuario puede usar las llaves SSH para iniciar sesi\u00f3n en el servidor remoto, podemos aumentar la seguridad del mismo desactivando la autenticaci\u00f3n por contrase\u00f1a.\n\n\n\n\nImportante\n\n\nAl desactivar la autenticaci\u00f3n por contrase\u00f1a tendremos que esta seguros que previamente hemos configurado la llave p\u00fablica para nuestro usuario, de lo contrario, bloquearemos el ingreso de nuestro usuario al servidor.\n\n\n\n\nAl desactivar el uso de la contrase\u00f1a estaremos restringiendo el acceso SSH al servidor remoto \u00fanicamente a la autenticaci\u00f3n de llave p\u00fablica. Es decir, la \u00fanica manera de iniciar sesi\u00f3n en el servidor remoto sera teniendo la llave privada en combinaci\u00f3n con llave p\u00fablica que se instal\u00f3.\n\n\nPara ello, abrimos el archivo de configuraci\u00f3n de SSH: \n\n\nsudo\n nano \n/etc/ssh/sshd_config\n\n\n\n\n\n\nBuscamos la l\u00ednea que contiene la palabra \nPasswordAuthentication\n y, descomentamos la l\u00ednea en caso que est\u00e9 comentada (borrando el caracter # al comienzo de la l\u00ednea). Luego cambiamos su valor a \"no\". Deber\u00eda verse as\u00ed despu\u00e9s de haber realizado el cambio:\n\n\nPasswordAuthentication\n no\n\n\n\n\n\nPara hacer efectivos los cambios, reiniciamos el servidor SSH: \n\n\nsudo systemctl reload sshd\n\n\n\n\n\nO bien: \n\n\nsudo service sshd reload\n\n\n\n\n\n\n\n\u00a1Listo!\n\n\nEl inicio de sesi\u00f3n empleando contrase\u00f1a est\u00e1 deshabilitado. A partir de ahora, el servidor s\u00f3lo es accesible mediante la autenticaci\u00f3n de llave SSH.", 
            "title": "Autenticaci\u00f3n de llave p\u00fablica"
        }, 
        {
            "location": "/ssh/authKey/#generando-llaves", 
            "text": "A continuaci\u00f3n se describe el procedimiento para generar un par de claves (p\u00fablica y privada) para conectarse a un servidor GNU/Linux sin necesidad de ingresar usuario y contrase\u00f1a.", 
            "title": "Generando llaves"
        }, 
        {
            "location": "/ssh/authKey/#en-microsoft-windows", 
            "text": "En primer lugar, tendremos que descargar el programa PuttyGen:    Puttygen - 32 bits  Puttygen - 64 bits   Abrimos el programa y veremos una interfaz similar a la siguiente:    Hacemos clic en el bot\u00f3n  Generate  y acto seguido agitamos el cursor en el \u00e1rea blanca de la ventana del programa:    Por \u00faltimo, debermos guardar la  clave p\u00fablica  haciendo clic sobre el bot\u00f3n  Save public key  y la  clave privada  haciendo clic sobre el bot\u00f3n  Save private key", 
            "title": "En Microsoft Windows"
        }, 
        {
            "location": "/ssh/authKey/#en-gnulinux", 
            "text": "Logueados  con nuestro usuario normal en la  m\u00e1quina local , ejecutamos:   ssh- keygen   Aunque podemos ingresar otros valores, si presionamos la tecla  Enter  estaremos aceptando los valores por defecto para los nombres de las llaves y su ubicaci\u00f3n, a saber:      Recurso  Tipo  Descripci\u00f3n      /home/usuario/.ssh  Directorio (oculto)  Ubicaci\u00f3n por defecto de los archivos de clave    id_rsa  Archivo  Llave privada    id_rsa.pub  Archivo  Llave p\u00fablica     A continuaci\u00f3n, se nos pedir\u00e1 el  ingreso de una frase de contrase\u00f1a o  passphrase  para asegurar las llaves. Podemos ingresar la contrase\u00f1a o dejarla en blanco presionando la tecla  Enter .    Tip  Si dejamos la contrase\u00f1a en blanco podremos usar la llave sin introducir contrase\u00f1a. Si ingresamos una contrase\u00f1a necesitaremos ambas (la llave privada y la contrase\u00f1a) para iniciar sesi\u00f3n. Asegurar las llaves con contrase\u00f1a es m\u00e1s seguro, pero ambos m\u00e9todos tienen sus usos y son m\u00e1s seguros que la autenticaci\u00f3n de contrase\u00f1a b\u00e1sica.", 
            "title": "En GNU/Linux"
        }, 
        {
            "location": "/ssh/authKey/#copiando-la-llave-publica", 
            "text": "Tendremos que copiar la clave p\u00fablica en el servidor agreg\u00e1ndola al archivo  /home/usuario/.ssh/authorized_keys  del usuario remoto. (donde deber\u00e1 reemplazar  usuario  por el usuario remoto).", 
            "title": "Copiando la llave p\u00fablica"
        }, 
        {
            "location": "/ssh/authKey/#metodo-manual", 
            "text": "Tendremos que iniciar sesi\u00f3n en el servidor con el usuario al que queremos permitir acceso mediante el uso de clave asim\u00e9trica. Ejecutamos los siguintes comandos (uno por vez):  cd \ncd .ssh vim  authorized_keys  Una vez abierto el archivo  authorized_keys  tendremos que copiar dentro de \u00e9l, el contenido de la clave p\u00fablica generada en el punto anterior, vereficando que el formato de la misma sea el similar al siguiente:  ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCB007n/ww+ouN4gSLKssMxXnBOvf9LGt4L\nojG6rs6hPB09j9R/T17/x4lhJA0F3FR1rP6kYBRsWj2aThGw6HXLm9/5zytK6Ztg3RPKK+4k\nYjh6541NYsnEAZuXz0jTTyAUfrtU3Z5E003C4oxOj6H0rfIF1kKI9MAQLMdpGW1GYEIgS9Ez\nSdfd8AcCIicTDWbqLAcU4UpkaX8KyGlLwsNuuGztobF8m72ALC/nLF6JLtPofwFBlgc+myiv\nO7TCUSBdLQlgMVOFq1I2uPWQOkOWQAHukEOmfjy2jctxSDBQ220ymjaNsHT4kgtZg2AYYgPq\ndAv8JggJICUvax2T9va5 usuario@dominio_o_direccion_ip_servidor", 
            "title": "M\u00e9todo manual"
        }, 
        {
            "location": "/ssh/authKey/#metodo-por-comandos", 
            "text": "Para que podamos iniciar sesi\u00f3n en el servidor remoto, ejecutamos en la  m\u00e1quina local :   ssh-copy- id  usuario_remoto@ip_del_servidor_remoto  Se nos pedir\u00e1 la contrase\u00f1a del usuario remoto.   Ahora se puede usar la llave privada correspondiente para iniciar sesi\u00f3n en el servidor.", 
            "title": "M\u00e9todo por comandos"
        }, 
        {
            "location": "/ssh/authKey/#deshabilitando-el-inicio-de-sesion-por-contrasena-en-el-servidor", 
            "text": "Ahora que nuestro usuario puede usar las llaves SSH para iniciar sesi\u00f3n en el servidor remoto, podemos aumentar la seguridad del mismo desactivando la autenticaci\u00f3n por contrase\u00f1a.   Importante  Al desactivar la autenticaci\u00f3n por contrase\u00f1a tendremos que esta seguros que previamente hemos configurado la llave p\u00fablica para nuestro usuario, de lo contrario, bloquearemos el ingreso de nuestro usuario al servidor.   Al desactivar el uso de la contrase\u00f1a estaremos restringiendo el acceso SSH al servidor remoto \u00fanicamente a la autenticaci\u00f3n de llave p\u00fablica. Es decir, la \u00fanica manera de iniciar sesi\u00f3n en el servidor remoto sera teniendo la llave privada en combinaci\u00f3n con llave p\u00fablica que se instal\u00f3.  Para ello, abrimos el archivo de configuraci\u00f3n de SSH:   sudo  nano  /etc/ssh/sshd_config   Buscamos la l\u00ednea que contiene la palabra  PasswordAuthentication  y, descomentamos la l\u00ednea en caso que est\u00e9 comentada (borrando el caracter # al comienzo de la l\u00ednea). Luego cambiamos su valor a \"no\". Deber\u00eda verse as\u00ed despu\u00e9s de haber realizado el cambio:  PasswordAuthentication  no  Para hacer efectivos los cambios, reiniciamos el servidor SSH:   sudo systemctl reload sshd  O bien:   sudo service sshd reload   \u00a1Listo!  El inicio de sesi\u00f3n empleando contrase\u00f1a est\u00e1 deshabilitado. A partir de ahora, el servidor s\u00f3lo es accesible mediante la autenticaci\u00f3n de llave SSH.", 
            "title": "Deshabilitando el inicio de sesi\u00f3n por contrase\u00f1a en el servidor"
        }, 
        {
            "location": "/dns/archivoHosts/", 
            "text": "El archivo \nhosts\n existe en todos los sistemas operativos. Si bien se puede emplear para la resoluci\u00f3n de nombres de dominio en una red local, en redes medianas actualmente es reemplazado por el servicio de DNS. \n\n\n\n\nWikipedia\n\n\nEl archivo \nhosts\n de un ordenador es usado por el sistema operativo para guardar la \ncorrespondencia entre dominios de Internet y direcciones IP\n. Este es uno de los diferentes m\u00e9todos que usa el sistema operativo para resolver nombres de dominios. \n\n\nAntiguamente cuando no hab\u00eda servidores DNS que resolvieran los dominios, el archivo hosts era el \u00fanico encargado de hacerlo, pero dej\u00f3 de utilizarse cuando Internet empez\u00f3 a crecer en nombres de dominio, pasando a usar servidores de resoluci\u00f3n de DNS. \n\n\nEn muchos sistemas operativos este m\u00e9todo es usado preferentemente respecto a otros como el DNS. En la actualidad tambi\u00e9n es usado para bloquear contenidos de Internet como la publicidad web.\n\n\n\n\nUbicaci\u00f3n del archivo \nhosts\n\n\nEl archivo \nhosts\n es un archivo de texto plano que puede ser editado por el administrador del equipo y su ubicaci\u00f3n depende del sistema operativo:\n\n\n\n\n\n\n\n\nSistema operativo\n\n\nUbicaci\u00f3n del archivo \nhosts\n\n\n\n\n\n\n\n\n\n\nMicrosoft Windows\n\n\nC:\\Windows\\System32\\drivers\\etc\\hosts\n\n\n\n\n\n\nUnix - GNU/Linux - BSD\n\n\n/etc/hosts\n\n\n\n\n\n\nMac OS - iPhone OS\n\n\n/private/etc/hosts\n\n\n\n\n\n\nAndroid\n\n\n/system/etc/hosts\n\n\n\n\n\n\n\n\nEntonces, si deseamos abrir el archivo en \nGNU/Linux\n, ejecutamos:\n\n\nsudo vim /etc/hosts\n\n\n\n\n\nSi en cambio, deseamos abrir el archivo en \nMicrosoft Windows\n, haremos clic derecho sobre el archivo \nhosts\n (ver ubicaci\u00f3n en la tabla) y seleccionamos del men\u00fa contextual la opci\u00f3n \"Abrir como Administrador\". \n\n\nModificando el archivo \nhosts\n\n\n\n\nContenido del archivo \nhosts\n\n\nSi importar el sistema operativo, la sintaxis del archivo \nhosts\n ser\u00e1 la siguiente: \n\n\nip.del.equipo  nombre_De_Dominio\n  \n\n\n\n\nSi tomamos como ejemplo el dominio ficticio \nmisitio.lan\n y suponiendo que la direcci\u00f3n IP del equipo servidor es \n192.168.0.33\n:\n\n\n192\n.168.0.33  www.miisito.lan  misitio.lan  http://misitio.lan\n\n\n\n\n\nSi configuramos correctamente el archivo \nhosts\n de nuestro sistema, podremos acceder al/los dominio/s especificados. \n\n\n\n\nResoluci\u00f3n de dominios empleando el archivo \nhosts\n\n\nSi en una red local, decidimos resolver los nombres de dominio vali\u00e9ndonos del archivo \nhosts\n tendremos que copiar el mismo archivo \nhosts\n en cada uno de los equipos que compongan la red.", 
            "title": "El archivo hosts"
        }, 
        {
            "location": "/dns/archivoHosts/#ubicacion-del-archivo-hosts", 
            "text": "El archivo  hosts  es un archivo de texto plano que puede ser editado por el administrador del equipo y su ubicaci\u00f3n depende del sistema operativo:     Sistema operativo  Ubicaci\u00f3n del archivo  hosts      Microsoft Windows  C:\\Windows\\System32\\drivers\\etc\\hosts    Unix - GNU/Linux - BSD  /etc/hosts    Mac OS - iPhone OS  /private/etc/hosts    Android  /system/etc/hosts     Entonces, si deseamos abrir el archivo en  GNU/Linux , ejecutamos:  sudo vim /etc/hosts  Si en cambio, deseamos abrir el archivo en  Microsoft Windows , haremos clic derecho sobre el archivo  hosts  (ver ubicaci\u00f3n en la tabla) y seleccionamos del men\u00fa contextual la opci\u00f3n \"Abrir como Administrador\".", 
            "title": "Ubicaci\u00f3n del archivo hosts"
        }, 
        {
            "location": "/dns/archivoHosts/#modificando-el-archivo-hosts", 
            "text": "Contenido del archivo  hosts  Si importar el sistema operativo, la sintaxis del archivo  hosts  ser\u00e1 la siguiente:   ip.del.equipo  nombre_De_Dominio      Si tomamos como ejemplo el dominio ficticio  misitio.lan  y suponiendo que la direcci\u00f3n IP del equipo servidor es  192.168.0.33 :  192 .168.0.33  www.miisito.lan  misitio.lan  http://misitio.lan  Si configuramos correctamente el archivo  hosts  de nuestro sistema, podremos acceder al/los dominio/s especificados.    Resoluci\u00f3n de dominios empleando el archivo  hosts  Si en una red local, decidimos resolver los nombres de dominio vali\u00e9ndonos del archivo  hosts  tendremos que copiar el mismo archivo  hosts  en cada uno de los equipos que compongan la red.", 
            "title": "Modificando el archivo hosts"
        }, 
        {
            "location": "/dns/", 
            "text": "El \nDNS\n (por sus siglas en ingl\u00e9s \nDomain Name System\n) o \nsistema de nombres de dominio\n es un sistema de nomenclatura jer\u00e1rquico descentralizado para dispositivos conectados a redes IP como Internet o una red privada.\n\n\n\n\n\n\nUso del DNS\nEl servicio DNS se emplea fundamentalmente en la resoluci\u00f3n de nombres, es decir, determinar cu\u00e1l es la direcci\u00f3n IP que corresponde a un nombre de dominio determinado y viceversa. \n\n\n\n\n\n\nTipos de nombres de dominio DNS\n\n\n\n\n\n\nRoot Domain\n o \nDominio ra\u00edz\n es un dominio que se indica mediante un punto \n(.)\n y se encuentra en la ra\u00edz o el nivel m\u00e1s alto de la jerarqu\u00eda de dominios. \n\n\n\n\n\n\nTop Level Domains\n (TLD)\n o \ndominios de nivel superior\n son aquellos que no pertenecen a otro dominio. \nExisten varios tipos\n, entre los m\u00e1s importantes tenemos a: \n\n\n\n\n\n\nccTLD\n (del ingl\u00e9s, \ncountry code top level domain\n) o \ndominio de nivel superior geogr\u00e1fico\n, son dominios reservados para pa\u00edses o territorios independientes. Por ejemplo: \n.ar\n (Argentina), \n.es\n (Espa\u00f1a), \n.uy\n (Uruguay), etc.\n\n\n\n\n\n\ngTLD\n (del ingl\u00e9s \ngeneral top level domain\n) o \ndominio de nivel superior gen\u00e9rico\n, que mantiene la IANA (del ingl\u00e9s, \nInternet Assigned Numbers Authoruty\n). Por ejemplo: \n.com\n (comercial), \n.gob\n (gubernamental), \n.edu\n (educaci\u00f3n), etc.  \n\n\n\n\n\n\n\n\n\n\nDomain Name\n o \nnombre de dominio\n es un nombre f\u00e1cil de recordar asociado a una direcci\u00f3n IP. Se trata de un nombre \u00fanico que se muestra despu\u00e9s del signo \n@\n en las direcciones de correo electr\u00f3nico y despu\u00e9s de \nwww.\n en las direcciones web. Tambi\u00e9n puede entenderse como una sucesi\u00f3n de nombres concatenados por puntos, como por ejemplo: \ndominio.com.ar\n, \ncom.ar\n y \nar\n\n\n\n\n\n\nHost Name\n o \nnombre de host\n es una sola \"palabra\" que puede incluir letras, n\u00fameros y guiones. Por ejemplo: \nwww\n, \nblog\n y \nguia-educativa\n. En ocasiones, coincide con el nombre del equipo. \n\n\n\n\n\n\nSubdomain\n o \nsubdominio\n forma parte de un dominio m\u00e1s grande. Por ejemplo, \nitel.edu.ar\n es un subdominio de \nedu.ar\n, que a su vez lo es del TLD \nar\n\n\n\n\n\n\nFully Qualified Host Name\n (FQHN)\n o \nnombre completo de un host\n, est\u00e1 formado por el \nhostname\n, seguido de un punto y su correspondiente \nnombre de dominio\n. Por ejemplo, dada la computadora llamada \npc1\n y el nombre de dominio \nalgo.com.\n, el FQDN ser\u00e1 \npc1.algo.com.\n; a su vez, un FQDN asociado a \npc1\n podr\u00eda ser \nbiblioteca.pc1.algo.com.\n. \n\n\n\n\n\n\n\n\nPunto final\nEn los sistemas de nombre de dominio de zonas, y m\u00e1s especialmente en los FQDN, los nombres de dominio se especificar\u00e1n con un punto \n(.)\n \nal final del nombre\n, aunque se puede omitir. Dicho punto indica el dominio ra\u00edz. \n\n\n\n\n\n\nArquitectura del DNS\n\n\nEl sistema DNS funciona principalmente en base al protocolo UDP. Los requerimientos se realizan a trav\u00e9s del puerto 53.\n\n\n\n\n\n\nCliente DNS\n: est\u00e1 instalado en el cliente (es decir, nosotros) y realiza peticiones de resoluci\u00f3n de nombres a los servidores DNS.\n\n\n\n\n\n\nServidor DNS\n: son los que contestan las peticiones y resuelven los nombres mediante un sistema estructurado en \u00e1rbol. Las direcciones DNS que ponemos en la configuraci\u00f3n de la conexi\u00f3n, son las direcciones de los Servidores DNS.\n\n\n\n\n\n\n\n\nEl sistema est\u00e1 estructurado en forma de \u201c\u00e1rbol\u201c. Cada nodo del \u00e1rbol est\u00e1 compuesto por un grupo de servidores que se encargan de resolver un conjunto de dominios (zona de autoridad). \n\n\nUn servidor puede delegar en otro (u otros) la autoridad sobre alguna de sus sub-zonas (esto es, alg\u00fan subdominio de la zona sobre la que \u00e9l tiene autoridad). Un subdominio puede verse como una especializaci\u00f3n de un dominio de nivel anterior. \n\n\nTerminolog\u00eda\n\n\nAntes de proseguir, es necesario introducir algunos t\u00e9rminos b\u00e1sicos para evitar confusiones y ambig\u00fcedades. \n\n\n\n\nZona de autoridad\n es una parte del espacio de nombre de dominios sobre la que es responsable un servidor DNS, que puede tener autoridad sobre varias zonas. En otras palabras, son bases de datos, distribuidas en servidores DNS especiales, en las que se almacenan los registros actualizados de cada dominio en el mundo. Estas zonas son autoritativas, en el sentido de que contienen la informaci\u00f3n oficial, reconocida y ver\u00eddica de cada dominio.\n\n\n\n\n\n\nServidores ra\u00edz\nLos \nroot servers\n o \nservidores ra\u00edz\n tienen autoridad sobre el dominio ra\u00edz \n(.)\n, \u00e9stos rara vez cambian, siendo actualmente 13.\n\n\n\n\n\n\n\n\nFuncionamiento del DNS\n\n\nLa operaci\u00f3n del \nresolver\n se inicia cuando recibe un nombre y debe traducirlo. Para comenzar el proceso de traducci\u00f3n el resolver debe conocer uno o m\u00e1s servidores de nombres a quienes enviarles la consulta. Esta informaci\u00f3n se configura en cada m\u00e1quina, colocando la direcci\u00f3n IP del servidor (por supuesto, no es posible usar el nombre en este lugar). La traducci\u00f3n completa se le pide al servidor local.\n\n\n\n\nPara resolver una consulta, un servidor de nombres debe conocer a lo menos a los servidores ra\u00edz. De ese modo, si nunca ha o\u00eddo hablar de ninguno de los dominios del nombre, puede preguntarle a un servidor ra\u00edz. Por lo menos, el servidor ra\u00edz tiene que conocer la lista de servidores del dominio de primer nivel del nombre (o sabe que no existe). Si sabe m\u00e1s que eso (por ejemplo, si es secundario del dominio de primer nivel) responde lo m\u00e1s posible. Las respuestas son de dos tipos: una lista de servidores de nombres que saben m\u00e1s que \u00e9l (servidores del dominio o del sub-dominio) o una lista de direcciones IP que corresponden a la m\u00e1quina buscada. \n\n\n\n\n\n\nUna aplicaci\u00f3n (cliente) necesita resolver un FQHN y env\u00eda un requerimiento al servidor de nombres configurado en el sistema. Este servidor de nombres, normalmente, es el provisto por el ISP. En nuestro caso, ser\u00e1 el servidor de nombres local que instalaremos y configuraremos. Este servidor local se conoce tambi\u00e9n como \nresolver\n.\n\n\n\n\n\n\nEl servidor de nombres consulta a uno de los servidores ra\u00edz (cuya direcci\u00f3n IP debe conocer previamente).\n\n\n\n\n\n\nEl servidor ra\u00edz devuelve el nombre del servidor a quien se le ha delegado la sub-zona.\n\n\n\n\n\n\nEl servidor inicial interroga al nuevo servidor.\n\n\n\n\n\n\nEl nuevo servidor que posee autoridad sobre la zona interrogada devuelve el nombre del servidor que posee el dominio buscado\n\n\n\n\n\n\nEl servidor DNS iniciar interroga al nuevo servidor con autoridad sobre la zona en cuesti\u00f3n\n\n\n\n\n\n\nEl nuevo servidor resuelve el nombre correspondiente, si este existe.\n\n\n\n\n\n\nEl servidor inicial informa al cliente el nombre resuelto.\n\n\n\n\n\n\nTipos de servidores DNS\n\n\nEstos son los tipos de servidores de acuerdo a su funci\u00f3n:\n\n\n\n\nPrimarios o maestros\n: guardan los datos de un espacio de nombres en sus ficheros.\n\n\nSecundarios o esclavos\n: obtienen los datos de los servidores primarios a trav\u00e9s de una transferencia de zona.\n\n\nLocales o cach\u00e9\n: funcionan con el mismo software, pero no contienen la base de datos para la resoluci\u00f3n de nombres. Cuando se les realiza una consulta, estos a su vez consultan a los servidores DNS correspondientes, almacenando la respuesta en su base de datos para agilizar la repetici\u00f3n de estas peticiones en el futuro continuo o libre.\n\n\n\n\nBase de conocimiento\n\n\n\n\nhttps://es.wikipedia.org/wiki/Sistema_de_nombres_de_dominio\n\n\nhttp://es.tldp.org/Manuales-LuCAS/GARL2/garl2/x-087-2-resolv.howdnsworks.html\n\n\nhttps://blog.smaldone.com.ar/2006/12/05/como-funciona-el-dns\n\n\nhttps://geekytheory.com/como-funciona-el-dns\n\n\nhttps://users.dcc.uchile.cl/~jpiquer/Internet/DNS/node3.html\n\n\nhttps://www.xatakamovil.com/conectividad/como-funciona-internet-dns\n\n\nhttps://servidordebian.org/es/stretch/intranet/dns/start\n\n\nhttps://www.osmosislatina.com/dns/zonas.htm\n\n\nhttps://support.google.com/a/answer/2573637\n\n\nhttps://support.google.com/a/answer/48090?hl=es\n\n\nhttps://technet.microsoft.com/es-ar/library/dd197446(v=ws.10).aspx\n\n\nhttps://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_domain_name\n\n\nhttp://www.ite.educacion.es/formacion/materiales/85/cd/linux/m2/servidor_dns.html\n\n\nhttp://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-rg-es-4/s1-bind-zone.html\n\n\nhttp://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-rg-es-4/s1-bind-namedconf.html\n\n\nhttp://hp.fciencias.unam.mx/~amem/dns/dns-3.html\n\n\nhttp://www.shenron.es/es/node/26\n\n\nhttps://www.osmosislatina.com/dns/zonas.htm\n\n\nftp://ftp.isc.org/isc/bind9/9.10.3-P4/doc/arm/Bv9ARM.html\n\n\nhttps://blog.ichasco.com/servidor-dns-master-slave-bind9/\n\n\nhttps://juncotic.com/dig-opciones-interesantes-para-consultas-dns/", 
            "title": "\u00bfQu\u00e9 es el DNS?"
        }, 
        {
            "location": "/dns/#tipos-de-nombres-de-dominio-dns", 
            "text": "Root Domain  o  Dominio ra\u00edz  es un dominio que se indica mediante un punto  (.)  y se encuentra en la ra\u00edz o el nivel m\u00e1s alto de la jerarqu\u00eda de dominios.     Top Level Domains  (TLD)  o  dominios de nivel superior  son aquellos que no pertenecen a otro dominio.  Existen varios tipos , entre los m\u00e1s importantes tenemos a:     ccTLD  (del ingl\u00e9s,  country code top level domain ) o  dominio de nivel superior geogr\u00e1fico , son dominios reservados para pa\u00edses o territorios independientes. Por ejemplo:  .ar  (Argentina),  .es  (Espa\u00f1a),  .uy  (Uruguay), etc.    gTLD  (del ingl\u00e9s  general top level domain ) o  dominio de nivel superior gen\u00e9rico , que mantiene la IANA (del ingl\u00e9s,  Internet Assigned Numbers Authoruty ). Por ejemplo:  .com  (comercial),  .gob  (gubernamental),  .edu  (educaci\u00f3n), etc.        Domain Name  o  nombre de dominio  es un nombre f\u00e1cil de recordar asociado a una direcci\u00f3n IP. Se trata de un nombre \u00fanico que se muestra despu\u00e9s del signo  @  en las direcciones de correo electr\u00f3nico y despu\u00e9s de  www.  en las direcciones web. Tambi\u00e9n puede entenderse como una sucesi\u00f3n de nombres concatenados por puntos, como por ejemplo:  dominio.com.ar ,  com.ar  y  ar    Host Name  o  nombre de host  es una sola \"palabra\" que puede incluir letras, n\u00fameros y guiones. Por ejemplo:  www ,  blog  y  guia-educativa . En ocasiones, coincide con el nombre del equipo.     Subdomain  o  subdominio  forma parte de un dominio m\u00e1s grande. Por ejemplo,  itel.edu.ar  es un subdominio de  edu.ar , que a su vez lo es del TLD  ar    Fully Qualified Host Name  (FQHN)  o  nombre completo de un host , est\u00e1 formado por el  hostname , seguido de un punto y su correspondiente  nombre de dominio . Por ejemplo, dada la computadora llamada  pc1  y el nombre de dominio  algo.com. , el FQDN ser\u00e1  pc1.algo.com. ; a su vez, un FQDN asociado a  pc1  podr\u00eda ser  biblioteca.pc1.algo.com. .      Punto final En los sistemas de nombre de dominio de zonas, y m\u00e1s especialmente en los FQDN, los nombres de dominio se especificar\u00e1n con un punto  (.)   al final del nombre , aunque se puede omitir. Dicho punto indica el dominio ra\u00edz.", 
            "title": "Tipos de nombres de dominio DNS"
        }, 
        {
            "location": "/dns/#arquitectura-del-dns", 
            "text": "El sistema DNS funciona principalmente en base al protocolo UDP. Los requerimientos se realizan a trav\u00e9s del puerto 53.    Cliente DNS : est\u00e1 instalado en el cliente (es decir, nosotros) y realiza peticiones de resoluci\u00f3n de nombres a los servidores DNS.    Servidor DNS : son los que contestan las peticiones y resuelven los nombres mediante un sistema estructurado en \u00e1rbol. Las direcciones DNS que ponemos en la configuraci\u00f3n de la conexi\u00f3n, son las direcciones de los Servidores DNS.     El sistema est\u00e1 estructurado en forma de \u201c\u00e1rbol\u201c. Cada nodo del \u00e1rbol est\u00e1 compuesto por un grupo de servidores que se encargan de resolver un conjunto de dominios (zona de autoridad).   Un servidor puede delegar en otro (u otros) la autoridad sobre alguna de sus sub-zonas (esto es, alg\u00fan subdominio de la zona sobre la que \u00e9l tiene autoridad). Un subdominio puede verse como una especializaci\u00f3n de un dominio de nivel anterior.", 
            "title": "Arquitectura del DNS"
        }, 
        {
            "location": "/dns/#terminologia", 
            "text": "Antes de proseguir, es necesario introducir algunos t\u00e9rminos b\u00e1sicos para evitar confusiones y ambig\u00fcedades.    Zona de autoridad  es una parte del espacio de nombre de dominios sobre la que es responsable un servidor DNS, que puede tener autoridad sobre varias zonas. En otras palabras, son bases de datos, distribuidas en servidores DNS especiales, en las que se almacenan los registros actualizados de cada dominio en el mundo. Estas zonas son autoritativas, en el sentido de que contienen la informaci\u00f3n oficial, reconocida y ver\u00eddica de cada dominio.    Servidores ra\u00edz Los  root servers  o  servidores ra\u00edz  tienen autoridad sobre el dominio ra\u00edz  (.) , \u00e9stos rara vez cambian, siendo actualmente 13.", 
            "title": "Terminolog\u00eda"
        }, 
        {
            "location": "/dns/#funcionamiento-del-dns", 
            "text": "La operaci\u00f3n del  resolver  se inicia cuando recibe un nombre y debe traducirlo. Para comenzar el proceso de traducci\u00f3n el resolver debe conocer uno o m\u00e1s servidores de nombres a quienes enviarles la consulta. Esta informaci\u00f3n se configura en cada m\u00e1quina, colocando la direcci\u00f3n IP del servidor (por supuesto, no es posible usar el nombre en este lugar). La traducci\u00f3n completa se le pide al servidor local.   Para resolver una consulta, un servidor de nombres debe conocer a lo menos a los servidores ra\u00edz. De ese modo, si nunca ha o\u00eddo hablar de ninguno de los dominios del nombre, puede preguntarle a un servidor ra\u00edz. Por lo menos, el servidor ra\u00edz tiene que conocer la lista de servidores del dominio de primer nivel del nombre (o sabe que no existe). Si sabe m\u00e1s que eso (por ejemplo, si es secundario del dominio de primer nivel) responde lo m\u00e1s posible. Las respuestas son de dos tipos: una lista de servidores de nombres que saben m\u00e1s que \u00e9l (servidores del dominio o del sub-dominio) o una lista de direcciones IP que corresponden a la m\u00e1quina buscada.     Una aplicaci\u00f3n (cliente) necesita resolver un FQHN y env\u00eda un requerimiento al servidor de nombres configurado en el sistema. Este servidor de nombres, normalmente, es el provisto por el ISP. En nuestro caso, ser\u00e1 el servidor de nombres local que instalaremos y configuraremos. Este servidor local se conoce tambi\u00e9n como  resolver .    El servidor de nombres consulta a uno de los servidores ra\u00edz (cuya direcci\u00f3n IP debe conocer previamente).    El servidor ra\u00edz devuelve el nombre del servidor a quien se le ha delegado la sub-zona.    El servidor inicial interroga al nuevo servidor.    El nuevo servidor que posee autoridad sobre la zona interrogada devuelve el nombre del servidor que posee el dominio buscado    El servidor DNS iniciar interroga al nuevo servidor con autoridad sobre la zona en cuesti\u00f3n    El nuevo servidor resuelve el nombre correspondiente, si este existe.    El servidor inicial informa al cliente el nombre resuelto.", 
            "title": "Funcionamiento del DNS"
        }, 
        {
            "location": "/dns/#tipos-de-servidores-dns", 
            "text": "Estos son los tipos de servidores de acuerdo a su funci\u00f3n:   Primarios o maestros : guardan los datos de un espacio de nombres en sus ficheros.  Secundarios o esclavos : obtienen los datos de los servidores primarios a trav\u00e9s de una transferencia de zona.  Locales o cach\u00e9 : funcionan con el mismo software, pero no contienen la base de datos para la resoluci\u00f3n de nombres. Cuando se les realiza una consulta, estos a su vez consultan a los servidores DNS correspondientes, almacenando la respuesta en su base de datos para agilizar la repetici\u00f3n de estas peticiones en el futuro continuo o libre.", 
            "title": "Tipos de servidores DNS"
        }, 
        {
            "location": "/dns/#base-de-conocimiento", 
            "text": "https://es.wikipedia.org/wiki/Sistema_de_nombres_de_dominio  http://es.tldp.org/Manuales-LuCAS/GARL2/garl2/x-087-2-resolv.howdnsworks.html  https://blog.smaldone.com.ar/2006/12/05/como-funciona-el-dns  https://geekytheory.com/como-funciona-el-dns  https://users.dcc.uchile.cl/~jpiquer/Internet/DNS/node3.html  https://www.xatakamovil.com/conectividad/como-funciona-internet-dns  https://servidordebian.org/es/stretch/intranet/dns/start  https://www.osmosislatina.com/dns/zonas.htm  https://support.google.com/a/answer/2573637  https://support.google.com/a/answer/48090?hl=es  https://technet.microsoft.com/es-ar/library/dd197446(v=ws.10).aspx  https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_domain_name  http://www.ite.educacion.es/formacion/materiales/85/cd/linux/m2/servidor_dns.html  http://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-rg-es-4/s1-bind-zone.html  http://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-rg-es-4/s1-bind-namedconf.html  http://hp.fciencias.unam.mx/~amem/dns/dns-3.html  http://www.shenron.es/es/node/26  https://www.osmosislatina.com/dns/zonas.htm  ftp://ftp.isc.org/isc/bind9/9.10.3-P4/doc/arm/Bv9ARM.html  https://blog.ichasco.com/servidor-dns-master-slave-bind9/  https://juncotic.com/dig-opciones-interesantes-para-consultas-dns/", 
            "title": "Base de conocimiento"
        }, 
        {
            "location": "/dns/bind/", 
            "text": "BIND\n \nBerkeley Internet Name Domain\n, anteriormente conocido como \nBerkeley Internet Name Daemon\n es el \nservidor de DNS m\u00e1s com\u00fanmente usado en Internet\n especialmente en sistemas Unix, en los cuales es un \nest\u00e1ndar de facto\n. \n\n\nEste servidor de nombres es patrocinado por la \nInternet Systems Consortium\n.\n\n\n\n\nBIND fue creado originalmente por cuatro estudiantes de grado en la \nUniversity of California, Berkeley\n.\n\n\nComponentes\n\n\nBIND tiene \ntres\n componentes:\n\n\n\n\nEl primero es llamado \nnamed\n o \nname-dee\n, es un demonio que ejecuta el lado servidor del DNS.\n\n\nEl segundo componente es llamado \nresolver library\n o biblioteca de resoluci\u00f3n, encargada de realizar peticiones a servidores DNS para intentar traducir un nombre a una direcci\u00f3n IP. El archivo de configuraci\u00f3n para este componente es \nresolv.conf\n.\n\n\nEl tercer y \u00faltimo componente de BIND proporciona herramientas para probar el funcionamiento del servidor DNS. Entre estas herramientas se encuentran comandos como \ndig\n, que se\nver\u00e1 m\u00e1s adelante.\n\n\n\n\nBibliograf\u00eda complementaria\n\n\nSe listan dos libros de consulta para ampliar los t\u00f3picos abordados en la presente documentaci\u00f3n: \n\n\n\n\nDNS and Bind, Ed. O'Reilly\n\n\nDNS and BIND on IPv6, Ed. O'Reilly\n\n\nDNS \n BIND Cookbook, Ed. O'Reilly\n\n\nPro DNS and Bind 10, Ed. Apress\n \n(source code)\n\n\nBIND 9 Administrator Reference Manual, Internet Software Consortium", 
            "title": "Introducci\u00f3n"
        }, 
        {
            "location": "/dns/bind/#componentes", 
            "text": "BIND tiene  tres  componentes:   El primero es llamado  named  o  name-dee , es un demonio que ejecuta el lado servidor del DNS.  El segundo componente es llamado  resolver library  o biblioteca de resoluci\u00f3n, encargada de realizar peticiones a servidores DNS para intentar traducir un nombre a una direcci\u00f3n IP. El archivo de configuraci\u00f3n para este componente es  resolv.conf .  El tercer y \u00faltimo componente de BIND proporciona herramientas para probar el funcionamiento del servidor DNS. Entre estas herramientas se encuentran comandos como  dig , que se\nver\u00e1 m\u00e1s adelante.", 
            "title": "Componentes"
        }, 
        {
            "location": "/dns/bind/#bibliografia-complementaria", 
            "text": "Se listan dos libros de consulta para ampliar los t\u00f3picos abordados en la presente documentaci\u00f3n:    DNS and Bind, Ed. O'Reilly  DNS and BIND on IPv6, Ed. O'Reilly  DNS   BIND Cookbook, Ed. O'Reilly  Pro DNS and Bind 10, Ed. Apress   (source code)  BIND 9 Administrator Reference Manual, Internet Software Consortium", 
            "title": "Bibliograf\u00eda complementaria"
        }, 
        {
            "location": "/dns/instalacion/", 
            "text": "Para instalar este paquete, lo haremos con \napt\n, loguados como administradores: \n\n\nsudo apt-get install bind9 bind9-doc dnsutils\n\n\n\n\n\nDe esta forma instalar\u00edamos los programas necesarios para disponer de un completo servidor DNS con \nbind\n. Tan solo ser\u00e1 necesario configurarlo y ponerlo en marcha. \n\n\nIniciando el servidor\n\n\nPara iniciar el servidor simplemente ejecutamos en una terminal:\n\n\nsudo service bind9 start\n\n\n\n\n\nY para verificar que el servicio est\u00e9 corriendo (presionamos la letra \nq\n para salir: \n\n\nsudo service bind9 status\n\n\n\n\n\nO bien, si queremos verificar que el demonio \nnamed\n est\u00e9 escuchando en el puerto 53\n\n\nsudo netstat -puntl \n|\n grep named\n\n\n\n\n\nDe esta forma instalar\u00edamos los programas necesarios para disponer de un completo servidor DNS con \nbind\n. Tan solo ser\u00e1 necesario configurarlo y ponerlo en marcha. \n\n\nPrincipales archivos de configuraci\u00f3n\n\n\nUna vez realizada la instalaci\u00f3n, encontraremos los archivos de configuraci\u00f3n en el directorio \n/etc/bind/\n. A continuaci\u00f3n, listamos los mismos con una breve explicaci\u00f3n de su funci\u00f3n: \n\n\n\n\nnamed.conf\n: Archivo principal de configuraci\u00f3n\n\n\nnamed.conf.options\n: Opciones gen\u00e9ricas\n\n\nnamed.conf.local\n: Especificaci\u00f3n particular de este servidor DNS\n\n\ndb.127\n: Especificaci\u00f3n direcci\u00f3n de retorno\n\n\ndb.root\n: DNS de nivel superior\n\n\nOtros archivos: db.0, db.255, db.empty, db.local, rndc.conf, rndc.key, zones.rfc1918", 
            "title": "Instalaci\u00f3n"
        }, 
        {
            "location": "/dns/instalacion/#iniciando-el-servidor", 
            "text": "Para iniciar el servidor simplemente ejecutamos en una terminal:  sudo service bind9 start  Y para verificar que el servicio est\u00e9 corriendo (presionamos la letra  q  para salir:   sudo service bind9 status  O bien, si queremos verificar que el demonio  named  est\u00e9 escuchando en el puerto 53  sudo netstat -puntl  |  grep named  De esta forma instalar\u00edamos los programas necesarios para disponer de un completo servidor DNS con  bind . Tan solo ser\u00e1 necesario configurarlo y ponerlo en marcha.", 
            "title": "Iniciando el servidor"
        }, 
        {
            "location": "/dns/instalacion/#principales-archivos-de-configuracion", 
            "text": "Una vez realizada la instalaci\u00f3n, encontraremos los archivos de configuraci\u00f3n en el directorio  /etc/bind/ . A continuaci\u00f3n, listamos los mismos con una breve explicaci\u00f3n de su funci\u00f3n:    named.conf : Archivo principal de configuraci\u00f3n  named.conf.options : Opciones gen\u00e9ricas  named.conf.local : Especificaci\u00f3n particular de este servidor DNS  db.127 : Especificaci\u00f3n direcci\u00f3n de retorno  db.root : DNS de nivel superior  Otros archivos: db.0, db.255, db.empty, db.local, rndc.conf, rndc.key, zones.rfc1918", 
            "title": "Principales archivos de configuraci\u00f3n"
        }, 
        {
            "location": "/dns/cache/", 
            "text": "La configuraci\u00f3n generada durante la instalaci\u00f3n es perfectamente funcional, no requiere modificaciones. \n\n\nNo obstante, vamos a definir a cu\u00e1les servidores consultar\u00e1 el nuestro para pedir ayuda en la resoluci\u00f3n de nombres, si no es posible hacer esto localmente (forwarders). \n\n\nComo forwarders podemos elegir entre dos opciones: \n\n\n\n\n\n\nUtilizar los servidores \nDNS de nuestro ISP\n o proveedor de acceso a Internet.\n\n\n\n\n\n\nUtilizar alguno de los servidores \nDNS p\u00fablicos\n\n\n\n\n\n\n\n\nServidores DNS p\u00fablicos\n\n\n\n\nComodo\n: \n8.26.56.26 - 8.20.247.20\n\n\nFoolDNS\n: \n87.118.111.215 - 213.187.11.62\n\n\nGoogle\n: \n8.8.8.8 - 8.8.4.4\n\n\nOpenDNS\n: \n208.67.222.222 - 208.67.220.220\n\n\nOpenNIC\n: \n66.70.211.246 - 128.52.130.209\n\n\nYandex\n: \n77.88.8.8 - 77.88.8.1\n\n\n\n\n\n\nEstos servicios prometen suministrar no s\u00f3lo resoluciones m\u00e1s r\u00e1pidas, sino tambi\u00e9n diversos servicios adicionales de seguridad, como filtros de direcciones maliciosos y otros m\u00e1s.\n\n\nEjemplo de archivo de configuraci\u00f3n\n\n\nLa configuraci\u00f3n del servidor DNS cach\u00e9 se encuentra en el archivo \n/etc/bind/named.conf.options\n\n\nAntes de comenzar, siempre conviene realizar una copia de seguridad del arvhivo en cuesti\u00f3n: \n\n\ncd\n /etc/bind \n\\\n\nsudo cp named.conf.options named.conf.options.original\n\n\n\n\n\nPosteriormente, creamos un nuevo archivo para su edici\u00f3n: \n\n\nsudo vim named.conf.options\n\n\n\n\n\nY agregamos el siguiente contenido, el cual deber\u00e1s adaptar seg\u00fan necesidad: \n\n\noptions\n {\n\n  \n#########################\n\n  \n### Directorio chach\u00e9 ###\n\n  \n#########################\n\n\n  \ndirectory\n \n/var/cache/bind\n;\n\n  \n####################\n\n  \n### Reenviadores ###\n\n  \n####################\n\n\n  \nforwarders\n {\n    \n# Servidores DNS p\u00fablicos de Google\n\n    \n8\n.\n8\n.\n8\n.\n8;\n\n    \n8\n.\n8\n.\n4\n.\n4;\n\n    \n# Servidor DNS provisto por nuestro ISP (generalmente, el router)\n\n    \n192\n.\n168\n.\n0\n.\n1;\n\n  \n};\n\n\n  \n#############################\n\n  \n### Opciones de seguridad ###\n\n  \n#############################\n\n\n  \n# Creando una lista de control de acceso (acl)  \n\n  \nacl\n \npermitidos\n {\n      \n192\n.\n168\n.\n0\n.\n0/24;\n\n      \nlocalhost;\n\n      \nlocalnets;\n\n  \n};\n\n\n  \n# Hosts que tienen permiso para escuchar peticiones por el puerto 53\n\n  \n# Cambiar 192.168.0.xxx por la direcci\u00f3n IP de nuestro servidor DNS\n\n  \nlisten-\non\n port \n53\n { \n      \n127\n.\n0\n.\n0\n.\n1;\n \n      \n192\n.\n168\n.\n0\n.\nxxx;\n \n# IP de tu servidor DNS\n\n  \n};\n\n\n  \n# Hosts que tienen permiso para escuchar peticiones IPv6\n\n  \nlisten-on-\nv6\n { \nnone\n; };\n\n  \n# Hosts que tienen permiso para realizar consultas\n\n  \nallow-\nquery\n { permitidos; };\n\n  \n# Hosts que tienen permiso para realizar consultas recursivas\n\n  \nallow-\nrecursion\n { permitidos; };\n\n  \n# Permitiendo transferencia de zona a servidor DNS esclavo\n\n  \nallow-\ntransfer\n { \nnone\n; };\n\n  \n# Permitiendo validaci\u00f3n DNSSEC\n\n  \ndnssec-\nvalidation\n auto;\n\n  \n# Respuesta NXDOMAIN seg\u00fan RFC1035 (yes en servidores antiguos) \n\n  \nauth-\nnxdomain\n no;\n\n\n};\n\n\n\n\n\n\n\n\nComentarios\n\n\nLa siguiente son etiquetas de comentarios v\u00e1lidas:\n\n\n\n\n\n\n//\n \u00f3 \n#\n Para realizar comentarios de una sola l\u00ednea, al comienzo de la misma. \n\n\n\n\n\n\n/* texto */\n Para realizar comentarios multil\u00ednea, colocando texto entre estas etiquetas. \n\n\n\n\n\n\n\n\nDonde: \n\n\n\n\n\n\nDirectorio cach\u00e9\n: es la carpeta en la cual el servidor DNS guardar\u00e1 las consultas realizadas. \n\n\n\n\n\n\nForwarders\n: son los servidores DNS a los cu\u00e1les consultar\u00e1 nuestro servidor DNS en caso de no ser capaz de resolver un nombre de dominio. En el ejemplo, se usan los servidores DNS p\u00fablicos de \nGoogle\n y, para tener otra opci\u00f3n, tambi\u00e9n se a\u00f1ade la IP del \nrouter\n, puesto que generalmente, es la direcci\u00f3n IP  ofrecida por nuestro proveedor de internet para la resoluci\u00f3n de nombres de dominio. \n\n\n\n\n\n\nListas de control de acceso\n: de manera conveniente se crea una lista de las direcciones IP que podr\u00e1n realizar consultas a nuestro servidor DNS. En el ejemplo, se cre\u00f3 una lista llamada \npermitidos\n, la cual incluye todas las direcciones IP de la red \n192.168.0.0/24\n, la direcci\u00f3n local o \nlocalhost\n y todas las direcciones IP vinculadas con todas las interfaces de red del servidor, con la palabra reservada \nlocalnets\n. Todos los otros pedidos \nser\u00e1n ignorados\n, para evitar eventuales utilizaciones abusivas de nuestro servidor DNS por parte de terceros\n\n\n\n\n\n\n\n\nOpciones de permisi\u00f3n\n\n\nAdem\u00e1s de emplear el nombre de una \nacl\n creada (en nuestro ejemplo, \npermitidos\n), los valores que podemos utilizar a la hora de establecer los permisos para los distintos \nhosts\n son: \n\n\n\n\nnone\n: ninguno\n\n\nany\n: todos\n\n\n\n\n\n\nVerificando la configuraci\u00f3n\n\n\nPara cerciorase que los cambios realizados en el paso anterior fueron los correctos, ejecutamos el comando: \n\n\nsudo named-checkconf\n\n\n\n\n\nY reiniciamos el servicio:\n\n\nsudo service bind9 restart", 
            "title": "DNS cach\u00e9"
        }, 
        {
            "location": "/dns/cache/#ejemplo-de-archivo-de-configuracion", 
            "text": "La configuraci\u00f3n del servidor DNS cach\u00e9 se encuentra en el archivo  /etc/bind/named.conf.options  Antes de comenzar, siempre conviene realizar una copia de seguridad del arvhivo en cuesti\u00f3n:   cd  /etc/bind  \\ \nsudo cp named.conf.options named.conf.options.original  Posteriormente, creamos un nuevo archivo para su edici\u00f3n:   sudo vim named.conf.options  Y agregamos el siguiente contenido, el cual deber\u00e1s adaptar seg\u00fan necesidad:   options  {\n\n   ######################### \n   ### Directorio chach\u00e9 ### \n   ######################### \n\n   directory   /var/cache/bind ;\n\n   #################### \n   ### Reenviadores ### \n   #################### \n\n   forwarders  {\n     # Servidores DNS p\u00fablicos de Google \n     8 . 8 . 8 . 8; \n     8 . 8 . 4 . 4; \n     # Servidor DNS provisto por nuestro ISP (generalmente, el router) \n     192 . 168 . 0 . 1; \n   }; \n\n   ############################# \n   ### Opciones de seguridad ### \n   ############################# \n\n   # Creando una lista de control de acceso (acl)   \n   acl   permitidos  {\n       192 . 168 . 0 . 0/24; \n       localhost; \n       localnets; \n   }; \n\n   # Hosts que tienen permiso para escuchar peticiones por el puerto 53 \n   # Cambiar 192.168.0.xxx por la direcci\u00f3n IP de nuestro servidor DNS \n   listen- on  port  53  { \n       127 . 0 . 0 . 1;  \n       192 . 168 . 0 . xxx;   # IP de tu servidor DNS \n   }; \n\n   # Hosts que tienen permiso para escuchar peticiones IPv6 \n   listen-on- v6  {  none ; };\n\n   # Hosts que tienen permiso para realizar consultas \n   allow- query  { permitidos; };\n\n   # Hosts que tienen permiso para realizar consultas recursivas \n   allow- recursion  { permitidos; };\n\n   # Permitiendo transferencia de zona a servidor DNS esclavo \n   allow- transfer  {  none ; };\n\n   # Permitiendo validaci\u00f3n DNSSEC \n   dnssec- validation  auto;\n\n   # Respuesta NXDOMAIN seg\u00fan RFC1035 (yes en servidores antiguos)  \n   auth- nxdomain  no; };    Comentarios  La siguiente son etiquetas de comentarios v\u00e1lidas:    //  \u00f3  #  Para realizar comentarios de una sola l\u00ednea, al comienzo de la misma.     /* texto */  Para realizar comentarios multil\u00ednea, colocando texto entre estas etiquetas.      Donde:     Directorio cach\u00e9 : es la carpeta en la cual el servidor DNS guardar\u00e1 las consultas realizadas.     Forwarders : son los servidores DNS a los cu\u00e1les consultar\u00e1 nuestro servidor DNS en caso de no ser capaz de resolver un nombre de dominio. En el ejemplo, se usan los servidores DNS p\u00fablicos de  Google  y, para tener otra opci\u00f3n, tambi\u00e9n se a\u00f1ade la IP del  router , puesto que generalmente, es la direcci\u00f3n IP  ofrecida por nuestro proveedor de internet para la resoluci\u00f3n de nombres de dominio.     Listas de control de acceso : de manera conveniente se crea una lista de las direcciones IP que podr\u00e1n realizar consultas a nuestro servidor DNS. En el ejemplo, se cre\u00f3 una lista llamada  permitidos , la cual incluye todas las direcciones IP de la red  192.168.0.0/24 , la direcci\u00f3n local o  localhost  y todas las direcciones IP vinculadas con todas las interfaces de red del servidor, con la palabra reservada  localnets . Todos los otros pedidos  ser\u00e1n ignorados , para evitar eventuales utilizaciones abusivas de nuestro servidor DNS por parte de terceros     Opciones de permisi\u00f3n  Adem\u00e1s de emplear el nombre de una  acl  creada (en nuestro ejemplo,  permitidos ), los valores que podemos utilizar a la hora de establecer los permisos para los distintos  hosts  son:    none : ninguno  any : todos", 
            "title": "Ejemplo de archivo de configuraci\u00f3n"
        }, 
        {
            "location": "/dns/cache/#verificando-la-configuracion", 
            "text": "Para cerciorase que los cambios realizados en el paso anterior fueron los correctos, ejecutamos el comando:   sudo named-checkconf  Y reiniciamos el servicio:  sudo service bind9 restart", 
            "title": "Verificando la configuraci\u00f3n"
        }, 
        {
            "location": "/dns/zonas/", 
            "text": "Aunque se pueda atribuir nombres a los diversos sistemas de una red, estos no consiguen reconocerse entre s\u00ed sin un sistema de resoluci\u00f3n de nombres. Para que un sistema consiga localizar la direcci\u00f3n IP asociada al nombre de otro sistema, es necesario que \u00e9ste est\u00e9 registrado en un servidor DNS, para permitir la resoluci\u00f3n de nombres.\nAtenci\u00f3n\n\n\n\n\nImportante\nAntes de instalar el servidor DNS, la \nCache DNS\n debe estar previamente configurada y verificada.\n\n\n\n\n\n\nCreando y declarando archivos de zonas\n\n\nLa resoluci\u00f3n de nombres traduce nombres de sistemas en sus direcciones IP y viceversa. As\u00ed, la configuraci\u00f3n consiste, b\u00e1sicamente en la creaci\u00f3n de 2 archivos de zona:\n\n\n\n\nArchivo de zona de resoluci\u00f3n directa\n: contiene la informaci\u00f3n necesaria para convertir nombres de dominio en direcciones IP. En nuestro ejemplo, el archivo se llama \ndb.itel.lan\n \n\n\nArchivo de zona de resoluci\u00f3n inversa\n contiene la informaci\u00f3n necesaria para convertir direcciones IP en el respectivo nombre de sistema. En el ejemplo, el archivo se llama \ndb.0.168.192\n\n\n\n\nEntonces, creamos los archivos: \n\n\ncd\n \n/etc/bind\n \n sudo touch db.itel.lan db.0.168.192\n\n\n\n\n\nLuego, abrimos el archivo \n/etc/bind/named.conf.local\n:\n\n\nsudo vim /etc/bind/named.conf.local\n\n\n\n\n\nY declaramos los archivos de zona creados en el paso anterior: \n\n\n// Zona de resoluci\u00f3n directa\n\n    zone \nitel.lan\n \n{\n\n        \ntype\n master\n;\n\n        file \n/etc/bind/db.itel.lan\n;\n\n    \n}\n;\n\n\n// Zona de resoluci\u00f3n inversa\n\n    zone \n0.168.192.in-addr.arpa\n \n{\n\n        \ntype\n master\n;\n\n        file \n/etc/bind/db.0.168.192\n;\n\n    \n}\n;\n\n\n\n\n\n\nPor \u00faltimo, verificamos que el archivo de configuraci\u00f3n no contenga errores:\n\n\nsudo named-checkconf\n\n\n\n\n\nContenido de los archivos de zona\n\n\nLos Archivos de zona contienen informaci\u00f3n sobre un espacio de nombres particular. \n\n\nCada archivo de zona contiene \ndirectivas\n y \nregistros de recursos\n. Las directivas le dicen al servidor de nombres que realice tareas o aplique configuraciones especiales a la zona. Los registros de recursos define los par\u00e1metros de la zona y asignan identidades a hosts individuales. Las directivas son opcionales, pero los registros de recursos se requieren para proporcionar servicios de nombres a la zona.\n\n\n\n\nDeclaraci\u00f3n de registros y directivas\nTodas las directivas y registros de recursos deben ir en sus propias l\u00edneas individuales.\n\n\n\n\n\n\nLos comentarios se pueden colocar despu\u00e9s de los punto y comas (\n;\n) en archivos de zona. \n\n\nDirectivas de archivos de zona\n\n\nLas directivas comienzan con el s\u00edmbolo de dolar (\n$\n) seguido del nombre de la directiva. Usualmente aparecen en la parte superior del archivo de zona.\n\n\nLo siguiente son directivas usadas a menudo:\n\n\n$INCLUDE\n\n\nSe utiliza para incluir otro archivo de zona en el archivo de zona donde se usa la directiva. As\u00ed se pueden almacenar configuraciones de zona suplementarias aparte del archivo de zona principal.\n\n\n$ORIGIN\n\n\nAnexa el nombre del dominio a registros no cualificados, tales como aquellos con el nombre de host solamente.\n\n\nPor ejemplo, un archivo de zona puede contener la l\u00ednea siguiente: \n\n\n$\nORIGIN\n itel.lan.\n\n\n\n\n\nEntonces, a cualquier nombre utilizado en \nregistros de recursos\n que no terminen en un punto (.) se le agregar\u00e1 \nitel.lan\n\n\n\n\nUso de la directiva $ORIGIN\nEl uso de la directiva \n$ORIGIN\n no es necesario si la zona fue especificada en el archivo \n/etc/named.conf\n\n\n\n\n\n\n$TTL\n\n\nAjusta el valor \nTime to Live\n (\nTTL\n) predeterminado para la zona. Este es el tiempo en el que un \nregistro de recurso\n de zona es v\u00e1lido. Cada recurso puede contener su propio valor TTL, el cual ignora esta directiva.\n\n\nCuando se decide aumentar este valor, permite a los servidores de nombres remotos hacer cach\u00e9 a la informaci\u00f3n de zona para un per\u00edodo m\u00e1s largo de tiempo, reduciendo el n\u00famero de consultas para la zona. \n\n\nRegistros de recursos de archivos de zona\n\n\nEl componente principal de un archivo de zona son los registros de recursos o \nResource Records\n (\nRR\n).\n\n\nHay muchos tipos de registros de recursos de archivos de zona. A continuaci\u00f3n se listan los tipos de registros m\u00e1s frecuentes.\n\n\nSOA (\nStart of Authority\n)\n\n\nEl registro de recursos \nSOA\n indica el inicio de una zona autoritativa para un determinado nombre de dominio. Un registro \nSOA\n es el primer registro en un archivo de zona.\n\n\nEl ejemplo siguiente muestra la estructura b\u00e1sica de un registro de recursos \nSOA\n:\n\n\n@\n     \nIN\n     SOA    \nprimary-name-server\n     \nhostmaster-email\n (\n                    \nserial-number\n\n                    \ntime-to-refresh\n\n                    \ntime-to-retry\n\n                    \ntime-to-expire\n\n                    \nminimum-TTL\n \n)\n\n\n\n\n\n\nDonde:\n\n\n\n\n\n\n@\n es reemplazado por el contenido de la directiva $ORIGIN (o el nombre de la zona, si la directiva $ORIGIN no est\u00e1 configurada).\n\n\n\n\n\n\nIN\n significa \nInternet Address\n o direcci\u00f3n de internet.\n\n\n\n\n\n\nprimary-name-server\n es el nombre del \nhost\n del servidor de nombres que tiene autoridad sobre este dominio. \n\n\n\n\n\n\nhostmaster-email\n es el correo electr\u00f3nico de la persona a contactar sobre este dominio.\n\n\n\n\n\n\nserial-number\n  es un valor num\u00e9rico que es incrementado cada vez que se cambia el archivo de zona. Es usado por los servidores esclavos para determinar si esta usando datos de la zona desactualizados y si deber\u00eda refrescarlos.\n\n\n\n\n\n\ntime-to-refresh\n es el valor num\u00e9rico que los servidores esclavos utilizan para determinar cu\u00e1nto tiempo debe esperar antes de preguntar al servidor de nombres maestro si se han realizado cambios a la zona. \n\n\n\n\n\n\ntime-to-retry\n es un valor num\u00e9rico usado por los servidores esclavos para determinar el intervalo de tiempo que tiene que esperar antes de emitir una petici\u00f3n de actualizaci\u00f3n de datos en caso de que el servidor de nombres maestro no responda. \n\n\n\n\n\n\ntime-to-expire\n es el tiempo que, ante la no respuesta del servidor maestro, los servidores esclavos dejan de responder como autoridad sobre un dominio. \n\n\n\n\n\n\nminimum-TTL\n es la cantidad de tiempo que otros servidores de nombres guardan en cach\u00e9 la informaci\u00f3n de zona.\n\n\n\n\n\n\n\n\nSOA y los servidores esclavos\nLos par\u00e1metros que se encuentran dentro de \n( )\n son aquellos que regir\u00e1n el funcionamiento de los servidores esclavos que existan en el sistema.\n\n\n\n\n\n\n\n\nUnidades para expresar tiempo\nCuando se configura BIND, todos los tiempos son siempre referenciados en segundos. Sin embargo, es posible usar abreviaciones cuando se especifiquen unidades de tiempo adem\u00e1s de segundos, tales como minutos (M), horas (H), d\u00edas (D) y semanas (W). \n\n\n\n\n\n\nUn ejemplo de aplicaci\u00f3n para este registro: \n\n\n@\n     \nIN\n     SOA    dns1.itel.lan.     hostmaster.itel.lan. (\n                    \n2001062501\n \n;\n \nserial\n\n                    \n21600\n      ; actualizar despu\u00e9s de \n6\n horas\n                    \n3600\n       \n;\n \nreintentar\n despu\u00e9s de \n1\n hora\n                    \n604800\n     \n;\n \nexpirar\n despu\u00e9s de \n1\n semana\n                    \n86400\n \n)\n    \n;\n \nTTL\n m\u00ednimo de \n1\n d\u00eda\n\n\n\n\n\nNS (\nName Server\n)\n\n\nAnuncia los nombres de servidores con autoridad sobre una zona particular.\n\n\nLa sintaxis de un registro NS:\n\n\nname\n           ttl     class   rr     server\n\nzone-name\n            \nIN\n      NS     \nnameserver-name\n\n\n\n\n\n\nDonde \nzone-name\n es el nombre de la zona sobre la que el servidor posee autoridad. Luego, el \nnameserver-name\n deber\u00eda ser un FQDN.\n\n\nEs costumbre emplear dos servidores DNS con autoridad sobre el dominio. No es importante si estos nombres de servidores son esclavos o si son maestros; ambos son considerados con autoridad sobre el dominio. \n\n\nUn ejemplo del uso de este registro: \n\n\nitel\n.\nlan\n.   \nIN\n     NS     dns1.itel.lan.\n\nitel\n.\nlan\n.   \nIN\n     NS     dns2.itel.lan.\n\n\n\n\n\nSin embargo, como se explic\u00f3 mas arriba, el s\u00edmbolo \n@\n reemplaza el nombre del archivo de zona. Por tanto, podemos escribir:  \n\n\n@\n   \nIN\n     NS     dns1.itel.lan.\n\n@\n   \nIN\n     NS     dns2.itel.lan.\n\n\n\n\n\nInclusive es posible dejar el par\u00e1metro del nombre de zona en blanco ya que en el \nRR\n anterior se utiliz\u00f3. La regla es: si no se especifica nada antes del par\u00e1metro \nIN\n se asume el valor que exist\u00eda anteriormente. Por lo tanto la configuraci\u00f3n del \nRR\n ser\u00eda:\n\n\nIN\n     NS     dns1.itel.lan.\n\nIN\n     NS     dns2.itel.lan.\n\n\n\n\n\nFinalmente, podr\u00edamos prescindir tambi\u00e9n de la clase \nIN\n (\nInternet\n) ya que si no se no se especifica expl\u00edcitamente, BIND utiliza el valor predeterminado \nIN\n de todos modos. Entonces, podr\u00edamos escribir: \n\n\n       \nNS\n     dns1.itel.lan.\n       \nNS\n     dns2.itel.lan.\n\n\n\n\n\nMX (\nMail eXchange\n)\n\n\nIndica d\u00f3nde deber\u00eda de ir el correo enviado a un espacio de nombres particular controlado por esta zona.\n\n\nLa sintaxis empleada para definir un registro MX: \n\n\nname\n           ttl     class    rr     priority            server\n\nzone-name\n            \nIN\n       MX     \npreference-value\n  \nemail-server-name\n\n\n\n\n\n\nDonde: \n\n\n\n\n\n\nzone-name\n es el nombre de la zona sobre la que el servidor posee autoridad.\n\n\n\n\n\n\npreference-value\n permite una clasificaci\u00f3n num\u00e9rica de los servidores de correo para un espacio de nombres, dando preferencia a algunos sistemas de correo sobre otros. El registro de recursos MX con el valor m\u00e1s bajo \npreference-value\n es preferido sobre los otros. Sin embargo, m\u00faltiples servidores de correo pueden tener el mismo valor para distribuir el tr\u00e1fico de forma pareja entre ellos.\n\n\n\n\n\n\nemail-server-name\n puede ser un nombre de servidor o FQDN.\n\n\n\n\n\n\nUn ejemplo de configuraci\u00f3n para este registro: \n\n\nitel\n.\nlan\n.    \nIN\n     MX     \n10\n     mail1.itel.lan.\n\nitel\n.\nlan\n.    \nIN\n     MX     \n20\n     mail2.itel.lan.\n\n\n\n\n\n\n\nPrioridad de los servidores de correo\nEn el ejemplo anterior, el primer servidor de correo \nmail1.itel.lan\n es preferido al servidor de correo \nmail2.itel.lan\n cuando se recibe correo destinado para el dominio \nitel.lan\n. \n\n\n\n\n\n\nNo obstante, como se explic\u00f3 en un \nRR\n anterior\n, la configuraci\u00f3n del registro se puede escribir de forma abreviada, como sigue: \n\n\n        \nMX\n     \n10\n     mail1.itel.lan.\n        \nMX\n     \n20\n     mail2.itel.lan.\n\n\n\n\n\nA (\nAddress\n)\n\n\nUn registro \nA\n o de direcciones enlaza un dominio con la direcci\u00f3n IP f\u00edsica de un servidor. \n\n\nLa sintaxis para declarar este registro es: \n\n\nname\n    ttl     class   rr    ipv4\n\nhost\n          \nIN\n      A     \nIP-address\n\n\n\n\n\n\nSi el valor \nhost\n es omitido, o si en su lugar se usa el s\u00edmbolo \n@\n, el registro \nA\n apunta a una direcci\u00f3n IP por defecto. Esto es as\u00ed para todas las peticiones no FQDN.\n\n\nSi consideramos el siguiente ejemplo de registro \nA\n para el archivo de zona \nitel.lan\n:\n\n\n                     \nIN\n     A       \n192.168.0.3\n\n\nservidor\n.\nitel\n.\nlan\n    IN     A       \n192.168.0.5\n\n\n\n\n\n\nLas peticiones para \nitel.lan\n son apuntadas a \n192.168.0.3\n, mientras que las solicitudes para \nservidor.itel.lan\n son dirigidas a \n192.168.0.5\n. \n\n\nNaturalmente, podemos escribir de manera abreviada la configuraci\u00f3n para este registro: \n\n\n            \nA\n       \n192.168.0.3\n\n\nservidor\n    A       \n192.168.0.5\n\n\n\n\n\n\nCNAME (\nCanonical Name\n)\n\n\nEl registro de nombre can\u00f3nico, enlaza un nombre con otro. Es tambi\u00e9n conocido como un alias.\n\n\nLa sintaxis empleada por el registro \nCNAME\n es la siguiente: \n\n\nname\n            ttl     class   rr          canonical-name\n\nalias-name\n            \nIN\n      CNAME       \nreal-name\n\n\n\n\n\n\nDonde cualquier petici\u00f3n enviada a \nalias-name\n apuntar\u00e1 al host \nreal-name\n. \n\n\nVeamos el ejemplo siguiente de aplicaci\u00f3n: \n\n\nservidor\n.\nitel\n.\nlan\n      IN     A       \n192.168.0.5\n\n\nwww\n.\nitel\n.\nlan\n           IN     CNAME   servidor.itel.lan\n\n\n\n\n\nUn registro \nA\n vincula un nombre de host a una direcci\u00f3n IP, mientras que un registro \nCNAME\n apunta al nombre host \nwww.itel.lan\n, com\u00fanmente usado para este.\n\n\nDe manera abreviada: \n\n\nservidor\n    A       \n192.168.0.5\n\n\nwww\n         CNAME   servidor\n\n\n\n\n\nPTR (\nPoinTeR\n)\n\n\nLos registros \nPTR\n o punteros, son usados principalmente para la resoluci\u00f3n inversa de nombres, pues ellos apuntan direcciones IP de vuelta a un nombre particular. \n\n\nLa sintaxis de uso de este registro es: \n\n\nname\n               ttl     class   rr     host-name\n\nlast-IP-digit\n            \nIN\n      PTR    \nFQDN-of-system\n\n\n\n\n\n\nEl valor \nlast-IP-digit\n se refiere al \u00faltimo n\u00famero en una direcci\u00f3n IP que apunta al \nFQDN\n de un sistema particular. \n\n\nUn ejemplo de configuraci\u00f3n empleando este registro: \n\n\n42\n.\n0\n.\n168\n.\n192\n.   \nIN\n PTR  servidor.itel.lan.\n\n114\n.\n0\n.\n168\n.\n192\n.  \nIN\n PTR  desarrollo.itel.lan.   \n\n135\n.\n0\n.\n168\n.\n192\n.  \nIN\n PTR  externo.itel.lan.\n\n\n\n\n\nY de forma resumida: \n\n\n42\n      \nPTR\n     servidor.itel.lan.\n\n114\n     \nPTR\n     desarrollo.itel.lan.   \n\n135\n     \nPTR\n     externo.itel.lan.\n\n\n\n\n\nOtros registros\n\n\nExisten muchos otros registros de recursos disponibles. En la presente documentaci\u00f3n se listaron los de uso frecuente. No obstante, a continuaci\u00f3n se rese\u00f1an algunos de ellos: \n\n\nAAAA\n\n\nRegistro an\u00e1logo al registro \nA\n pero para direcciones IPv6. Su sintaxis es la siguiente: \n\n\nname\n     ttl    class   rr       ipv6\n\nhost\n          \nIN\n      AAAA     \nIPv6-address\n\n\n\n\n\n\nTXT (\nText Record\n)\n\n\nUn registro TXT es un registro DNS que proporciona informaci\u00f3n de texto a fuentes externas a tu dominio y que se puede utilizar con distintos fines. El valor del registro puede corresponder a un texto legible por una m\u00e1quina o por una persona. \n\n\nLa sintaxis de declraci\u00f3n de este registro es: \n\n\nname\n     ttl    class   rr       text\n\nhost\n          \nIN\n      TXT      \nAlg\u00fan texto descriptivo\n\n\n\n\n\n\n\n\nResource records\nExisten muchos m\u00e1s tipos de registros de recursos aunque no son tan comunes. Pod\u00e9s consultar m\u00e1s informaci\u00f3n sobre los mismos: \n\n\n\n\nWikipedia\n\n\nInternet System Consortium\n\n\n\n\n\n\n\n\nEjemplos de archivos de zonas\n\n\nVistos individualmente, las directivas y registros de recursos pueden ser dif\u00edciles de comprender. Sin embargo, cuando se colocan juntos en un mismo archivo, se vuelven m\u00e1s f\u00e1ciles de entender.\n\n\nEl ejemplo siguiente muestra un \narchivo de zona de resoluci\u00f3n directa\n:\n\n\n$\nORIGIN\n itel.lan.\n\n$\nTTL\n \n86400\n\n\n\n\n@\n     \nIN\n     SOA    dns1.itel.lan.     hostmaster.itel.lan. (\n                    \n2001062501\n \n;\n \nserial\n\n                    \n21600\n      ; refresh after \n6\n hours\n                    \n3600\n       \n;\n \nretry\n after \n1\n hour\n                    \n604800\n     \n;\n \nexpire\n after \n1\n week\n                    \n86400\n \n)\n    \n;\n \nminimum\n TTL of \n1\n day\n\n      \nIN\n     NS     dns1.itel.lan.\n      \nIN\n     NS     dns2.itel.lan.\n\n      \nIN\n     MX     \n10\n     mail.itel.lan.\n      \nIN\n     MX     \n20\n     mail2.itel.lan.\n\n             \nIN\n     A       \n192.168.0.5\n\n\n\nserver1\n      IN     A       \n192.168.0.6\n\n\nserver2\n      IN     A       \n192.168.0.7\n\n\ndns1\n         IN     A       \n192.168.0.2\n\n\ndns2\n         IN     A       \n192.168.0.3\n\n\n\nftp\n          IN     CNAME   server1\n\nmail\n         IN     CNAME   server1\n\nmail2\n        IN     CNAME   server2\n\nwww\n          IN     CNAME   server2\n\n\n\n\n\nY, a continuaci\u00f3n, un \narchivo de zona de resoluci\u00f3n inversa\n:\n\n\n$\nORIGIN\n \n0\n.168.192.in-addr.arpa.\n\n$\nTTL\n \n86400\n\n\n\n\n@\n     \nIN\n     SOA    dns1.itel.lan.     hostmaster.itel.lan. (\n                    \n2001062501\n \n;\n \nserial\n\n                    \n21600\n      ; refresh after \n6\n hours\n                    \n3600\n       \n;\n \nretry\n after \n1\n hour\n                    \n604800\n     \n;\n \nexpire\n after \n1\n week\n                    \n86400\n \n)\n    \n;\n \nminimum\n TTL of \n1\n day\n\n\n2\n     \nIN\n     NS     dns1.itel.lan.\n\n3\n     \nIN\n     NS     dns2.itel.lan.\n\n\n6\n     \nIN\n     PTR    server1.itel.lan.\n\n7\n     \nIN\n     PTR    server2.itel.lan.", 
            "title": "Zona de autoridad"
        }, 
        {
            "location": "/dns/zonas/#creando-y-declarando-archivos-de-zonas", 
            "text": "La resoluci\u00f3n de nombres traduce nombres de sistemas en sus direcciones IP y viceversa. As\u00ed, la configuraci\u00f3n consiste, b\u00e1sicamente en la creaci\u00f3n de 2 archivos de zona:   Archivo de zona de resoluci\u00f3n directa : contiene la informaci\u00f3n necesaria para convertir nombres de dominio en direcciones IP. En nuestro ejemplo, el archivo se llama  db.itel.lan    Archivo de zona de resoluci\u00f3n inversa  contiene la informaci\u00f3n necesaria para convertir direcciones IP en el respectivo nombre de sistema. En el ejemplo, el archivo se llama  db.0.168.192   Entonces, creamos los archivos:   cd   /etc/bind    sudo touch db.itel.lan db.0.168.192  Luego, abrimos el archivo  /etc/bind/named.conf.local :  sudo vim /etc/bind/named.conf.local  Y declaramos los archivos de zona creados en el paso anterior:   // Zona de resoluci\u00f3n directa\n\n    zone  itel.lan   { \n         type  master ; \n        file  /etc/bind/db.itel.lan ; \n     } ; \n\n// Zona de resoluci\u00f3n inversa\n\n    zone  0.168.192.in-addr.arpa   { \n         type  master ; \n        file  /etc/bind/db.0.168.192 ; \n     } ;   Por \u00faltimo, verificamos que el archivo de configuraci\u00f3n no contenga errores:  sudo named-checkconf", 
            "title": "Creando y declarando archivos de zonas"
        }, 
        {
            "location": "/dns/zonas/#contenido-de-los-archivos-de-zona", 
            "text": "Los Archivos de zona contienen informaci\u00f3n sobre un espacio de nombres particular.   Cada archivo de zona contiene  directivas  y  registros de recursos . Las directivas le dicen al servidor de nombres que realice tareas o aplique configuraciones especiales a la zona. Los registros de recursos define los par\u00e1metros de la zona y asignan identidades a hosts individuales. Las directivas son opcionales, pero los registros de recursos se requieren para proporcionar servicios de nombres a la zona.   Declaraci\u00f3n de registros y directivas Todas las directivas y registros de recursos deben ir en sus propias l\u00edneas individuales.    Los comentarios se pueden colocar despu\u00e9s de los punto y comas ( ; ) en archivos de zona.", 
            "title": "Contenido de los archivos de zona"
        }, 
        {
            "location": "/dns/zonas/#directivas-de-archivos-de-zona", 
            "text": "Las directivas comienzan con el s\u00edmbolo de dolar ( $ ) seguido del nombre de la directiva. Usualmente aparecen en la parte superior del archivo de zona.  Lo siguiente son directivas usadas a menudo:", 
            "title": "Directivas de archivos de zona"
        }, 
        {
            "location": "/dns/zonas/#include", 
            "text": "Se utiliza para incluir otro archivo de zona en el archivo de zona donde se usa la directiva. As\u00ed se pueden almacenar configuraciones de zona suplementarias aparte del archivo de zona principal.", 
            "title": "$INCLUDE"
        }, 
        {
            "location": "/dns/zonas/#origin", 
            "text": "Anexa el nombre del dominio a registros no cualificados, tales como aquellos con el nombre de host solamente.  Por ejemplo, un archivo de zona puede contener la l\u00ednea siguiente:   $ ORIGIN  itel.lan.  Entonces, a cualquier nombre utilizado en  registros de recursos  que no terminen en un punto (.) se le agregar\u00e1  itel.lan   Uso de la directiva $ORIGIN El uso de la directiva  $ORIGIN  no es necesario si la zona fue especificada en el archivo  /etc/named.conf", 
            "title": "$ORIGIN"
        }, 
        {
            "location": "/dns/zonas/#ttl", 
            "text": "Ajusta el valor  Time to Live  ( TTL ) predeterminado para la zona. Este es el tiempo en el que un  registro de recurso  de zona es v\u00e1lido. Cada recurso puede contener su propio valor TTL, el cual ignora esta directiva.  Cuando se decide aumentar este valor, permite a los servidores de nombres remotos hacer cach\u00e9 a la informaci\u00f3n de zona para un per\u00edodo m\u00e1s largo de tiempo, reduciendo el n\u00famero de consultas para la zona.", 
            "title": "$TTL"
        }, 
        {
            "location": "/dns/zonas/#registros-de-recursos-de-archivos-de-zona", 
            "text": "El componente principal de un archivo de zona son los registros de recursos o  Resource Records  ( RR ).  Hay muchos tipos de registros de recursos de archivos de zona. A continuaci\u00f3n se listan los tipos de registros m\u00e1s frecuentes.", 
            "title": "Registros de recursos de archivos de zona"
        }, 
        {
            "location": "/dns/zonas/#soa-start-of-authority", 
            "text": "El registro de recursos  SOA  indica el inicio de una zona autoritativa para un determinado nombre de dominio. Un registro  SOA  es el primer registro en un archivo de zona.  El ejemplo siguiente muestra la estructura b\u00e1sica de un registro de recursos  SOA :  @       IN      SOA     primary-name-server       hostmaster-email  (\n                     serial-number \n                     time-to-refresh \n                     time-to-retry \n                     time-to-expire \n                     minimum-TTL   )   Donde:    @  es reemplazado por el contenido de la directiva $ORIGIN (o el nombre de la zona, si la directiva $ORIGIN no est\u00e1 configurada).    IN  significa  Internet Address  o direcci\u00f3n de internet.    primary-name-server  es el nombre del  host  del servidor de nombres que tiene autoridad sobre este dominio.     hostmaster-email  es el correo electr\u00f3nico de la persona a contactar sobre este dominio.    serial-number   es un valor num\u00e9rico que es incrementado cada vez que se cambia el archivo de zona. Es usado por los servidores esclavos para determinar si esta usando datos de la zona desactualizados y si deber\u00eda refrescarlos.    time-to-refresh  es el valor num\u00e9rico que los servidores esclavos utilizan para determinar cu\u00e1nto tiempo debe esperar antes de preguntar al servidor de nombres maestro si se han realizado cambios a la zona.     time-to-retry  es un valor num\u00e9rico usado por los servidores esclavos para determinar el intervalo de tiempo que tiene que esperar antes de emitir una petici\u00f3n de actualizaci\u00f3n de datos en caso de que el servidor de nombres maestro no responda.     time-to-expire  es el tiempo que, ante la no respuesta del servidor maestro, los servidores esclavos dejan de responder como autoridad sobre un dominio.     minimum-TTL  es la cantidad de tiempo que otros servidores de nombres guardan en cach\u00e9 la informaci\u00f3n de zona.     SOA y los servidores esclavos Los par\u00e1metros que se encuentran dentro de  ( )  son aquellos que regir\u00e1n el funcionamiento de los servidores esclavos que existan en el sistema.     Unidades para expresar tiempo Cuando se configura BIND, todos los tiempos son siempre referenciados en segundos. Sin embargo, es posible usar abreviaciones cuando se especifiquen unidades de tiempo adem\u00e1s de segundos, tales como minutos (M), horas (H), d\u00edas (D) y semanas (W).     Un ejemplo de aplicaci\u00f3n para este registro:   @       IN      SOA    dns1.itel.lan.     hostmaster.itel.lan. (\n                     2001062501   ;   serial \n                     21600       ; actualizar despu\u00e9s de  6  horas\n                     3600         ;   reintentar  despu\u00e9s de  1  hora\n                     604800       ;   expirar  despu\u00e9s de  1  semana\n                     86400   )      ;   TTL  m\u00ednimo de  1  d\u00eda", 
            "title": "SOA (Start of Authority)"
        }, 
        {
            "location": "/dns/zonas/#ns-name-server", 
            "text": "Anuncia los nombres de servidores con autoridad sobre una zona particular.  La sintaxis de un registro NS:  name            ttl     class   rr     server zone-name              IN       NS      nameserver-name   Donde  zone-name  es el nombre de la zona sobre la que el servidor posee autoridad. Luego, el  nameserver-name  deber\u00eda ser un FQDN.  Es costumbre emplear dos servidores DNS con autoridad sobre el dominio. No es importante si estos nombres de servidores son esclavos o si son maestros; ambos son considerados con autoridad sobre el dominio.   Un ejemplo del uso de este registro:   itel . lan .    IN      NS     dns1.itel.lan. itel . lan .    IN      NS     dns2.itel.lan.  Sin embargo, como se explic\u00f3 mas arriba, el s\u00edmbolo  @  reemplaza el nombre del archivo de zona. Por tanto, podemos escribir:    @     IN      NS     dns1.itel.lan. @     IN      NS     dns2.itel.lan.  Inclusive es posible dejar el par\u00e1metro del nombre de zona en blanco ya que en el  RR  anterior se utiliz\u00f3. La regla es: si no se especifica nada antes del par\u00e1metro  IN  se asume el valor que exist\u00eda anteriormente. Por lo tanto la configuraci\u00f3n del  RR  ser\u00eda:  IN      NS     dns1.itel.lan. IN      NS     dns2.itel.lan.  Finalmente, podr\u00edamos prescindir tambi\u00e9n de la clase  IN  ( Internet ) ya que si no se no se especifica expl\u00edcitamente, BIND utiliza el valor predeterminado  IN  de todos modos. Entonces, podr\u00edamos escribir:           NS      dns1.itel.lan.\n        NS      dns2.itel.lan.", 
            "title": "NS (Name Server)"
        }, 
        {
            "location": "/dns/zonas/#mx-mail-exchange", 
            "text": "Indica d\u00f3nde deber\u00eda de ir el correo enviado a un espacio de nombres particular controlado por esta zona.  La sintaxis empleada para definir un registro MX:   name            ttl     class    rr     priority            server zone-name              IN        MX      preference-value    email-server-name   Donde:     zone-name  es el nombre de la zona sobre la que el servidor posee autoridad.    preference-value  permite una clasificaci\u00f3n num\u00e9rica de los servidores de correo para un espacio de nombres, dando preferencia a algunos sistemas de correo sobre otros. El registro de recursos MX con el valor m\u00e1s bajo  preference-value  es preferido sobre los otros. Sin embargo, m\u00faltiples servidores de correo pueden tener el mismo valor para distribuir el tr\u00e1fico de forma pareja entre ellos.    email-server-name  puede ser un nombre de servidor o FQDN.    Un ejemplo de configuraci\u00f3n para este registro:   itel . lan .     IN      MX      10      mail1.itel.lan. itel . lan .     IN      MX      20      mail2.itel.lan.   Prioridad de los servidores de correo En el ejemplo anterior, el primer servidor de correo  mail1.itel.lan  es preferido al servidor de correo  mail2.itel.lan  cuando se recibe correo destinado para el dominio  itel.lan .     No obstante, como se explic\u00f3 en un  RR  anterior , la configuraci\u00f3n del registro se puede escribir de forma abreviada, como sigue:            MX       10      mail1.itel.lan.\n         MX       20      mail2.itel.lan.", 
            "title": "MX (Mail eXchange)"
        }, 
        {
            "location": "/dns/zonas/#a-address", 
            "text": "Un registro  A  o de direcciones enlaza un dominio con la direcci\u00f3n IP f\u00edsica de un servidor.   La sintaxis para declarar este registro es:   name     ttl     class   rr    ipv4 host            IN       A      IP-address   Si el valor  host  es omitido, o si en su lugar se usa el s\u00edmbolo  @ , el registro  A  apunta a una direcci\u00f3n IP por defecto. Esto es as\u00ed para todas las peticiones no FQDN.  Si consideramos el siguiente ejemplo de registro  A  para el archivo de zona  itel.lan :                        IN      A        192.168.0.3  servidor . itel . lan     IN     A        192.168.0.5   Las peticiones para  itel.lan  son apuntadas a  192.168.0.3 , mientras que las solicitudes para  servidor.itel.lan  son dirigidas a  192.168.0.5 .   Naturalmente, podemos escribir de manera abreviada la configuraci\u00f3n para este registro:                A         192.168.0.3  servidor     A        192.168.0.5", 
            "title": "A (Address)"
        }, 
        {
            "location": "/dns/zonas/#cname-canonical-name", 
            "text": "El registro de nombre can\u00f3nico, enlaza un nombre con otro. Es tambi\u00e9n conocido como un alias.  La sintaxis empleada por el registro  CNAME  es la siguiente:   name             ttl     class   rr          canonical-name alias-name              IN       CNAME        real-name   Donde cualquier petici\u00f3n enviada a  alias-name  apuntar\u00e1 al host  real-name .   Veamos el ejemplo siguiente de aplicaci\u00f3n:   servidor . itel . lan       IN     A        192.168.0.5  www . itel . lan            IN     CNAME   servidor.itel.lan  Un registro  A  vincula un nombre de host a una direcci\u00f3n IP, mientras que un registro  CNAME  apunta al nombre host  www.itel.lan , com\u00fanmente usado para este.  De manera abreviada:   servidor     A        192.168.0.5  www          CNAME   servidor", 
            "title": "CNAME (Canonical Name)"
        }, 
        {
            "location": "/dns/zonas/#ptr-pointer", 
            "text": "Los registros  PTR  o punteros, son usados principalmente para la resoluci\u00f3n inversa de nombres, pues ellos apuntan direcciones IP de vuelta a un nombre particular.   La sintaxis de uso de este registro es:   name                ttl     class   rr     host-name last-IP-digit              IN       PTR     FQDN-of-system   El valor  last-IP-digit  se refiere al \u00faltimo n\u00famero en una direcci\u00f3n IP que apunta al  FQDN  de un sistema particular.   Un ejemplo de configuraci\u00f3n empleando este registro:   42 . 0 . 168 . 192 .    IN  PTR  servidor.itel.lan. 114 . 0 . 168 . 192 .   IN  PTR  desarrollo.itel.lan.    135 . 0 . 168 . 192 .   IN  PTR  externo.itel.lan.  Y de forma resumida:   42        PTR      servidor.itel.lan. 114       PTR      desarrollo.itel.lan.    135       PTR      externo.itel.lan.", 
            "title": "PTR (PoinTeR)"
        }, 
        {
            "location": "/dns/zonas/#otros-registros", 
            "text": "Existen muchos otros registros de recursos disponibles. En la presente documentaci\u00f3n se listaron los de uso frecuente. No obstante, a continuaci\u00f3n se rese\u00f1an algunos de ellos:", 
            "title": "Otros registros"
        }, 
        {
            "location": "/dns/zonas/#aaaa", 
            "text": "Registro an\u00e1logo al registro  A  pero para direcciones IPv6. Su sintaxis es la siguiente:   name      ttl    class   rr       ipv6 host            IN       AAAA      IPv6-address", 
            "title": "AAAA"
        }, 
        {
            "location": "/dns/zonas/#txt-text-record", 
            "text": "Un registro TXT es un registro DNS que proporciona informaci\u00f3n de texto a fuentes externas a tu dominio y que se puede utilizar con distintos fines. El valor del registro puede corresponder a un texto legible por una m\u00e1quina o por una persona.   La sintaxis de declraci\u00f3n de este registro es:   name      ttl    class   rr       text host            IN       TXT       Alg\u00fan texto descriptivo    Resource records Existen muchos m\u00e1s tipos de registros de recursos aunque no son tan comunes. Pod\u00e9s consultar m\u00e1s informaci\u00f3n sobre los mismos:    Wikipedia  Internet System Consortium", 
            "title": "TXT (Text Record)"
        }, 
        {
            "location": "/dns/zonas/#ejemplos-de-archivos-de-zonas", 
            "text": "Vistos individualmente, las directivas y registros de recursos pueden ser dif\u00edciles de comprender. Sin embargo, cuando se colocan juntos en un mismo archivo, se vuelven m\u00e1s f\u00e1ciles de entender.  El ejemplo siguiente muestra un  archivo de zona de resoluci\u00f3n directa :  $ ORIGIN  itel.lan. $ TTL   86400  @       IN      SOA    dns1.itel.lan.     hostmaster.itel.lan. (\n                     2001062501   ;   serial \n                     21600       ; refresh after  6  hours\n                     3600         ;   retry  after  1  hour\n                     604800       ;   expire  after  1  week\n                     86400   )      ;   minimum  TTL of  1  day\n\n       IN      NS     dns1.itel.lan.\n       IN      NS     dns2.itel.lan.\n\n       IN      MX      10      mail.itel.lan.\n       IN      MX      20      mail2.itel.lan.\n\n              IN      A        192.168.0.5  server1       IN     A        192.168.0.6  server2       IN     A        192.168.0.7  dns1          IN     A        192.168.0.2  dns2          IN     A        192.168.0.3  ftp           IN     CNAME   server1 mail          IN     CNAME   server1 mail2         IN     CNAME   server2 www           IN     CNAME   server2  Y, a continuaci\u00f3n, un  archivo de zona de resoluci\u00f3n inversa :  $ ORIGIN   0 .168.192.in-addr.arpa. $ TTL   86400  @       IN      SOA    dns1.itel.lan.     hostmaster.itel.lan. (\n                     2001062501   ;   serial \n                     21600       ; refresh after  6  hours\n                     3600         ;   retry  after  1  hour\n                     604800       ;   expire  after  1  week\n                     86400   )      ;   minimum  TTL of  1  day 2       IN      NS     dns1.itel.lan. 3       IN      NS     dns2.itel.lan. 6       IN      PTR    server1.itel.lan. 7       IN      PTR    server2.itel.lan.", 
            "title": "Ejemplos de archivos de zonas"
        }, 
        {
            "location": "/dns/resolvd/", 
            "text": "La resoluci\u00f3n de nombres convierte los nombres de los sistemas en sus correspondientes direcciones IP. Para una zona \nhome.lan\n, los nombres \nserver\n, \nvirtual\n, \nns\n y \nrouter\n son asociados a sus respectivas direcciones IP. \n\n\nLa base de datos para la resoluci\u00f3n de nombres en la zona \nhome.lan\n est\u00e1 guardada en el archivo \n/etc/bind/db.home.lan\n:\n\n\n;\n\n\n;\n \nBIND\n - Archivo de zona para itel.lan\n\n;\n\n\n\n$\nTTL\n \n30\n                 ; \n30\n segundos (s\u00f3lo para pruebas)   \n\n\n\n@\n       \nIN\n      SOA     ns.itel.lan.    root.itel.lan. (\n                        \n2013050601\n      \n;\n \nNumero\n de serie\n                        \n8\nH\n              ; refresh\n                        \n2\nH\n              ; retry\n                        \n4\nW\n              ; expire\n                        \n1\nD\n )            ; minimum\n\n;\n\n                \nNS\n      ns              ; Servidor de nombres\n                \nMX\n      \n10\n mail         ; Servidor primario de correo\n\n\nns\n              A       \n192.168.0.100\n\n\nmail\n            A       \n192.168.0.111\n\n\n\nitel\n.\nlan\n.       \nA\n       \n192.168.0.100\n\n\nserver\n          A       \n192.168.0.105\n\n\n\nvirtual\n         A       \n192.168.0.106\n\n\n\nrouter\n          A       \n192.168.0.1\n     ; router ADSL\n\n\ngateway\n         CNAME   router\n\ngw\n              CNAME   router\n\nproxy\n           CNAME   server\n\nwww\n             CNAME   virtual\n\nftp\n             CNAME   virtual\n\n\n\n\n\nEl protocolo DNS permite tambi\u00e9n la creaci\u00f3n de alias, o canonical names, identificados por el tipo de registro CNAME. Un alias es un nombre alternativo de un sistema.\n\n\nAl final del archivo podr\u00e1n declararse algunos \naliases\n donde: el sistema \nserver\n pasar\u00e1 tambi\u00e9n a ser conocido (CNAME o canonical name) como \nproxy\n y el servidor \nvirtual\n responder\u00e1 tambi\u00e9n por los nombres \nwww\n y \nftp\n. \n\n\nFinalmente, verificamos que el fichero de configuraci\u00f3n de la zona \nitel.lan\n no contenga errores\n\n\nsudo named-checkzone itel.lan /etc/bind/db.itel.lan\n\n\n\n\n\nY reiniciamos el servicio: \n\n\nsudo service bind9 restart", 
            "title": "Resoluci\u00f3n directa"
        }, 
        {
            "location": "/dns/resolvi/", 
            "text": "La resoluci\u00f3n inversa traduce las direcciones IP en los nombres correspondientes de los sistemas.\n\n\nLa resoluci\u00f3n inversa se configura en nuestro ejemplo en el archivo \n/etc/bind/db.1.168.192\n\n\n;\n\n\n;\n \nBIND\n - Archivo de zona para \n192\n.168.0.xxx\n\n;\n\n\n\n$\nTTL\n \n30\n                 ; \n30\n segundos (s\u00f3lo para pruebas)\n\n\n\n@\n       \nIN\n      SOA     ns.itel.lan.    root.itel.lan. (\n                        \n2013050601\n      \n;\n \nserial\n\n                        \n8\nH              ; refresh\n                        \n2\nH\n              ; retry\n                        \n4\nW\n              ; expire\n                        \n1\nD\n )            ; minimum\n\n;\n\n                \nNS\n      ns.itel.lan.    ; Servidor de nombres\n\n\n100\n             \nPTR\n     ns.itel.lan.\n\n105\n             \nPTR\n     server.itel.lan.\n\n106\n             \nPTR\n     virtual.itel.lan.\n\n111\n             \nPTR\n     mail.itel.lan.\n\n1\n               \nPTR\n     router.itel.lan.\n\n\n\n\n\nVerificamos que el archivo de configuraci\u00f3n de la zona \n0.168.192.in-addr.arpa\n no contenga errores:\n\n\nnamed-checkzone \n0\n.168.192.in-addr.arpa /etc/bind/db.0.168.192\n\n\n\n\n\nY reiniciamos el servicio:\n\n\nsudo service bind9 restart", 
            "title": "Resoluci\u00f3n inversa"
        }, 
        {
            "location": "/dns/resolver/", 
            "text": "Finalmente, tendremos que configurar nuestro servidor DNS para que resuelva dominios localmente. \n\n\nPara ello, nos dirigimos al directorio \n/etc/resolvconf/resolv.conf.d/\n:\n\n\ncd\n resolvconf/resolv.conf.d\n\n\n\n\n\nLuego abrimos el archivo en cuesti\u00f3n: \n\n\nsudo\n vim base\n\n\n\n\n\nY a\u00f1adimos el dominio \nitel.lan\n en el archivo, de manera que nos quede:\n\n\ndomain\n itel.lan\n\nsearch\n itel.lan\n\nnameserver\n \n127.0.0.1\n\n\n\n\n\n\nDe esta forma, cuando nos referimos al sistema \nserver\n, \u00e9ste ser\u00e1 buscado en el dominio \nitel.lan\n, resultando en el \nFQHN\n \nserver.itel.lan\n\n\nAdem\u00e1s, verificamos que en el archivo \n/etc/nsswitch.conf\n la resoluci\u00f3n de nombres pase tambi\u00e9n por el servicio DNS:\n\n\nhosts:  files dns\n\n\n\n\n\nFinalmente, reiniciamos el servicio DNS:\n\n\nsudo service bind9 restart", 
            "title": "Configurando el resolver"
        }, 
        {
            "location": "/dns/clientes/", 
            "text": "Para que los clientes puedan resolver dominios empleando nuestro servidor tendremos que seguir el siguiente procedimiento: \n\n\nGNU/Linux\n\n\nNos dirigimos al directorio \n/etc/resolvconf/resolv.conf.d/\n:\n\n\ncd\n resolvconf/resolv.conf.d\n\n\n\n\n\nLuego abrimos el archivo \nbase\n: \n\n\nsudo\n vim base\n\n\n\n\n\nY a\u00f1adimos el dominio \nitel.lan\n en el archivo, de manera que nos quede:\n\n\ndomain\n itel.lan\n\nsearch\n itel.lan\n\n# Direcci\u00f3n IP de nuestro servidor DNS\n\n\nnameserver\n \n192\n.168.0.xxx\n\n\n\n\n\nWindows\n\n\nEn sistemas operativos basados en Microsoft Windows, tendremos que dirigirnos hasta opnciones de red y editar la secci\u00f3n IPv4: \n\n\n\n\nEn el ejemplo, el equipo obtiene su direcci\u00f3n IP autom\u00e1ticamente (por DHCP). Simplemente, habr\u00eda que cambiar la direcci\u00f3n del servidor DNS por el que apunta al nuestro.", 
            "title": "Configurando clientes"
        }, 
        {
            "location": "/dns/clientes/#gnulinux", 
            "text": "Nos dirigimos al directorio  /etc/resolvconf/resolv.conf.d/ :  cd  resolvconf/resolv.conf.d  Luego abrimos el archivo  base :   sudo  vim base  Y a\u00f1adimos el dominio  itel.lan  en el archivo, de manera que nos quede:  domain  itel.lan search  itel.lan # Direcci\u00f3n IP de nuestro servidor DNS  nameserver   192 .168.0.xxx", 
            "title": "GNU/Linux"
        }, 
        {
            "location": "/dns/clientes/#windows", 
            "text": "En sistemas operativos basados en Microsoft Windows, tendremos que dirigirnos hasta opnciones de red y editar la secci\u00f3n IPv4:    En el ejemplo, el equipo obtiene su direcci\u00f3n IP autom\u00e1ticamente (por DHCP). Simplemente, habr\u00eda que cambiar la direcci\u00f3n del servidor DNS por el que apunta al nuestro.", 
            "title": "Windows"
        }, 
        {
            "location": "/dns/test/", 
            "text": "Podemos comprobar el funcionamiento del servidor DNS empleando, entre otros, dos comandos: \ndig\n y \nnslookup\n.\n\n\ndig (\ndomain information groper\n)\n\n\ndig\n es una herramienta flexible para consultar informaci\u00f3n a los servidores DNS: ejecuta un \nlookup\n a los servicios de DNS y nos devuelve la salida que necesitemos.\n\n\nConstituye una herramienta \u00fatil para encontrar errores y hacer \ntroubleshooting\n a los servicios de nombres, ya que es una herramienta muy \u00fatil, f\u00e1cil de utilizar, y con una salida limpia.\n\n\nInstalaci\u00f3n de dig\n\n\nEn la mayor parte de las distros es necesario instalarlo previamente. El paquete \ndnsutils\n suele incluir el programa \ndig\n en Debian o Ubuntu.\n\n\nsudo apt install dnsutils\n\n\n\n\n\nSintaxis b\u00e1sica\n\n\nLa sintaxis del comando es la siguiente:\n\n\ndig\n [@server] name [type]\n\n\n\n\n\nDonde:\n\n\n\n\n@server\n es un servidor espec\u00edfico al que vamos a preguntarle.\n\n\nname\n es el nombre de host/dominio sobre el que necesitamos informaci\u00f3n\n\n\ntype\n es el tipo de registro, y puede omitirse, en cuyo caso obtendremos la informaci\u00f3n para el registro A (address).\n\n\n\n\nEjemplo de uso\n\n\nPodemos consultar informaci\u00f3n DNS sobre el dominio \ngoogle.com.ar\n\n\ndig google.com.ar\n\n\n\n\n\nY obtendremos una salida similar a la siguiente: \n\n\n;\n \n \nDiG\n \n9\n.10.3-P4-Ubuntu \n google.com.ar\n\n;;\n \nglobal\n options: +cmd\n\n;;\n \nGot\n answer:\n\n;;\n \n-\nHEADER\n-\n \nopcode:\n \nQUERY,\n \nstatus:\n \nNOERROR,\n \nid:\n \n45490\n\n\n;;\n \nflags:\n \nqr\n rd ra; QUERY: \n1\n, ANSWER: \n1\n, AUTHORITY: \n0\n, ADDITIONAL: \n1\n\n\n\n;;\n \nOPT\n PSEUDOSECTION:\n\n;\n \nEDNS:\n \nversion:\n \n0,\n \nflags:;\n \nudp:\n \n512\n\n\n;;\n \nQUESTION\n SECTION:\n\n;google\n.\ncom\n.\nar\n.         \nIN\n  A\n\n\n;;\n \nANSWER\n SECTION:\n\ngoogle\n.\ncom\n.\nar\n.      \n9\n   \nIN\n  A   \n172.217.28.163\n\n\n\n;;\n \nQuery\n time: \n117\n msec\n\n;;\n \nSERVER:\n \n8\n.\n8\n.\n8\n.\n8\n#53(8.8.8.8)\n\n\n;;\n \nWHEN:\n \nWed\n Nov \n08\n \n13\n:52:16 ART \n2017\n\n\n;;\n \nMSG\n SIZE  rcvd: \n58\n\n\n\n\n\n\nDonde: \n\n\n\n\nTodas las l\u00edneas que inician con \u201c;\u201d son comentarios\n\n\nLa primer l\u00ednea nos devuelve la versi\u00f3n del comando dig que estamos utilizando, DiG 9.10.3-P4-Ubuntu en este ejemplo. \n\n\nLuego muestra la secci\u00f3n de consulta con nuestra consulta (\nquestion section\n). Podemos ocultar esta secci\u00f3n con \n+noquestion\n.\n\n\nA continuaci\u00f3n, la secci\u00f3n de la respuesta (\nanswer section\n). Podemos ocultar esta secci\u00f3n con \n+noanswer\n (si es que tiene alg\u00fan sentido \n).\n\n\nY por \u00faltimo, muestra estad\u00edsticas de la consulta. Con la opci\u00f3n \n+nostats\n podemos ocultar esta secci\u00f3n de estad\u00edsticas.\n\n\n\n\nOtros registros\n\n\nPor defecto la respuesta est\u00e1 asociada a los registros A del dominio, es decir, por defecto nos devuelve la direcci\u00f3n o direcciones IP (Address) del dominio, pero no es la \u00fanica opci\u00f3n. Podemos consultar cualquier otro registro del DNS, entre ellos:\n\n\ndig \n[\n@server\n]\n  \n[\na\n]\n      \n# address record\n\ndig \n[\n@server\n]\n  \n[\nns\n]\n     \n# nameserver record\n\ndig \n[\n@server\n]\n  \n[\nmx\n]\n     \n# mx record\n\ndig \n[\n@server\n]\n  \n[\ntxt\n]\n    \n# txt record\n\ndig \n[\n@server\n]\n  \n[\nany\n]\n    \n# todos los registros\n\n\n\n\n\n\nModificando las consultas\n\n\ndig\n permite, mediante el caracter \n+\n, agregar o quitar informaci\u00f3n de la salida. Veamos algunas opciones interesantes:\n\n\n\n\n+[no]additional\n: muestra u oculta la secci\u00f3n de datos adicionales.\n\n\n+[no]all\n: muestra u oculta todos los datos. Ocultar todos los datos sirve para luego mostrar alg\u00fan dato espec\u00edfico que necesitemos. Por ejemplo, \u201c+noall +answer\u201d ocultar\u00e1 todos los datos, y solo mostrar\u00e1 la respuesta.\n\n\n+[no]answer\n: muestra u oculta la secci\u00f3n de respuesta\n\n\n+[no]authority\n: muestra u oculta la secci\u00f3n de autoridad SOA\n\n\n+[no]question\n: muestra u oculta la secci\u00f3n de la consulta que hicimos.\n\n\n+[no]comments\n: muestra u oculta los comentarios (l\u00edneas que inician con \u201c;\u201d.\n\n\n+[no]crypto\n: muestra u oculta los datos del registro criptogr\u00e1fico DNSSEC utilizado para firmar las zonas en algunos servidores.\n\n\n+[no]dnssec\n: muestra u oculta los datos del registro DNSSEC en la secci\u00f3n adicional.\n\n\n+[no]keepopen\n: mantiene el socket tcp utilizado para una consulta abierto, de modo que subsiguientes consultas utilizar\u00e1n el mismo socket contra el servidor DNS que estemos utilizando. Esto es v\u00e1lido cuando las consultas se realizan sobre TCP en vez de UDP.\n\n\n+[no]recurse\n: habilita o deshabilita la b\u00fasqueda recursiva. Por defecto siempre est\u00e1 activada, salvo que la desactivemos directamente con esta opci\u00f3n, o utilicemos alguna opci\u00f3n que la desactive, como +nssearch.\n\n\n+[no]short\n: permite o no imprimir una salida corta espec\u00edfica, por defecto est\u00e1 desactivada y vemos la salida completa.\n\n\n+[no]stats\n: muestra u oculta la secci\u00f3n de estad\u00edsticas. Por defecto siempre est\u00e1 activada.\n\n\n+[no]tcp\n: fuerza o no la utilizaci\u00f3n de TCP en vez de UDP para realizar las consultas. Por defecto es UDP, salvo que el tipo de registro sea AXFR (transferencia de zona).\n\n\n+[no]trace\n: habilita o no la trazabilidad de la consulta, lo que permite ver la lista completa de nodos y pasos de resoluci\u00f3n de un nombre, muy \u00fatil para entender c\u00f3mo funciona un sistema de nombres de dominio.\n\n\n+[no]ttlid\n: muestra o no la informaci\u00f3n del TTL cuando imprime cada registro.\n\n\n\n\nOtras opciones\n\n\nEl comando dig permite adem\u00e1s varias opciones, como cualquier comando en Linux. Algunas de las m\u00e1s \u00fatiles son las siguientes:\n\n\n\n\n-6\n o \n-4\n: para realizar consultas \u00fanicamente sobre una red IPv6 o IPv4 respectivamente.\n\n\n-b address[#port]\n: permite especificar una direcci\u00f3n v\u00e1lida desde la que consultar, y opcionalmente un puerto de origen.\n\n\n-x\n: permite hacer una resoluci\u00f3n inversa sobre IPv4 (en IPv6 muestra el formato nibble bajo el dominio IP6.ARPA.\n\n\n-i\n: permite una resoluci\u00f3n inversa sobre IPv6.\n\n\n\n\nPara m\u00e1s opciones y documentaci\u00f3n, nada mejor que leer el man:\n\n\nman dig\n\n\n\n\n\nNslookup\n\n\nNslookup es un programa utilizado para saber si el DNS est\u00e1 resolviendo correctamente los nombres y las IPs. Se utiliza con el comando nslookup, que funciona tanto en Windows como en UNIX para obtener la direcci\u00f3n IP conociendo el nombre, y viceversa.", 
            "title": "Realizando pruebas"
        }, 
        {
            "location": "/dns/test/#dig-domain-information-groper", 
            "text": "dig  es una herramienta flexible para consultar informaci\u00f3n a los servidores DNS: ejecuta un  lookup  a los servicios de DNS y nos devuelve la salida que necesitemos.  Constituye una herramienta \u00fatil para encontrar errores y hacer  troubleshooting  a los servicios de nombres, ya que es una herramienta muy \u00fatil, f\u00e1cil de utilizar, y con una salida limpia.", 
            "title": "dig (domain information groper)"
        }, 
        {
            "location": "/dns/test/#instalacion-de-dig", 
            "text": "En la mayor parte de las distros es necesario instalarlo previamente. El paquete  dnsutils  suele incluir el programa  dig  en Debian o Ubuntu.  sudo apt install dnsutils", 
            "title": "Instalaci\u00f3n de dig"
        }, 
        {
            "location": "/dns/test/#sintaxis-basica", 
            "text": "La sintaxis del comando es la siguiente:  dig  [@server] name [type]  Donde:   @server  es un servidor espec\u00edfico al que vamos a preguntarle.  name  es el nombre de host/dominio sobre el que necesitamos informaci\u00f3n  type  es el tipo de registro, y puede omitirse, en cuyo caso obtendremos la informaci\u00f3n para el registro A (address).", 
            "title": "Sintaxis b\u00e1sica"
        }, 
        {
            "location": "/dns/test/#ejemplo-de-uso", 
            "text": "Podemos consultar informaci\u00f3n DNS sobre el dominio  google.com.ar  dig google.com.ar  Y obtendremos una salida similar a la siguiente:   ;     DiG   9 .10.3-P4-Ubuntu   google.com.ar ;;   global  options: +cmd ;;   Got  answer: ;;   - HEADER -   opcode:   QUERY,   status:   NOERROR,   id:   45490  ;;   flags:   qr  rd ra; QUERY:  1 , ANSWER:  1 , AUTHORITY:  0 , ADDITIONAL:  1  ;;   OPT  PSEUDOSECTION: ;   EDNS:   version:   0,   flags:;   udp:   512  ;;   QUESTION  SECTION: ;google . com . ar .          IN   A ;;   ANSWER  SECTION: google . com . ar .       9     IN   A    172.217.28.163  ;;   Query  time:  117  msec ;;   SERVER:   8 . 8 . 8 . 8 #53(8.8.8.8)  ;;   WHEN:   Wed  Nov  08   13 :52:16 ART  2017  ;;   MSG  SIZE  rcvd:  58   Donde:    Todas las l\u00edneas que inician con \u201c;\u201d son comentarios  La primer l\u00ednea nos devuelve la versi\u00f3n del comando dig que estamos utilizando, DiG 9.10.3-P4-Ubuntu en este ejemplo.   Luego muestra la secci\u00f3n de consulta con nuestra consulta ( question section ). Podemos ocultar esta secci\u00f3n con  +noquestion .  A continuaci\u00f3n, la secci\u00f3n de la respuesta ( answer section ). Podemos ocultar esta secci\u00f3n con  +noanswer  (si es que tiene alg\u00fan sentido  ).  Y por \u00faltimo, muestra estad\u00edsticas de la consulta. Con la opci\u00f3n  +nostats  podemos ocultar esta secci\u00f3n de estad\u00edsticas.", 
            "title": "Ejemplo de uso"
        }, 
        {
            "location": "/dns/test/#otros-registros", 
            "text": "Por defecto la respuesta est\u00e1 asociada a los registros A del dominio, es decir, por defecto nos devuelve la direcci\u00f3n o direcciones IP (Address) del dominio, pero no es la \u00fanica opci\u00f3n. Podemos consultar cualquier otro registro del DNS, entre ellos:  dig  [ @server ]    [ a ]        # address record \ndig  [ @server ]    [ ns ]       # nameserver record \ndig  [ @server ]    [ mx ]       # mx record \ndig  [ @server ]    [ txt ]      # txt record \ndig  [ @server ]    [ any ]      # todos los registros", 
            "title": "Otros registros"
        }, 
        {
            "location": "/dns/test/#modificando-las-consultas", 
            "text": "dig  permite, mediante el caracter  + , agregar o quitar informaci\u00f3n de la salida. Veamos algunas opciones interesantes:   +[no]additional : muestra u oculta la secci\u00f3n de datos adicionales.  +[no]all : muestra u oculta todos los datos. Ocultar todos los datos sirve para luego mostrar alg\u00fan dato espec\u00edfico que necesitemos. Por ejemplo, \u201c+noall +answer\u201d ocultar\u00e1 todos los datos, y solo mostrar\u00e1 la respuesta.  +[no]answer : muestra u oculta la secci\u00f3n de respuesta  +[no]authority : muestra u oculta la secci\u00f3n de autoridad SOA  +[no]question : muestra u oculta la secci\u00f3n de la consulta que hicimos.  +[no]comments : muestra u oculta los comentarios (l\u00edneas que inician con \u201c;\u201d.  +[no]crypto : muestra u oculta los datos del registro criptogr\u00e1fico DNSSEC utilizado para firmar las zonas en algunos servidores.  +[no]dnssec : muestra u oculta los datos del registro DNSSEC en la secci\u00f3n adicional.  +[no]keepopen : mantiene el socket tcp utilizado para una consulta abierto, de modo que subsiguientes consultas utilizar\u00e1n el mismo socket contra el servidor DNS que estemos utilizando. Esto es v\u00e1lido cuando las consultas se realizan sobre TCP en vez de UDP.  +[no]recurse : habilita o deshabilita la b\u00fasqueda recursiva. Por defecto siempre est\u00e1 activada, salvo que la desactivemos directamente con esta opci\u00f3n, o utilicemos alguna opci\u00f3n que la desactive, como +nssearch.  +[no]short : permite o no imprimir una salida corta espec\u00edfica, por defecto est\u00e1 desactivada y vemos la salida completa.  +[no]stats : muestra u oculta la secci\u00f3n de estad\u00edsticas. Por defecto siempre est\u00e1 activada.  +[no]tcp : fuerza o no la utilizaci\u00f3n de TCP en vez de UDP para realizar las consultas. Por defecto es UDP, salvo que el tipo de registro sea AXFR (transferencia de zona).  +[no]trace : habilita o no la trazabilidad de la consulta, lo que permite ver la lista completa de nodos y pasos de resoluci\u00f3n de un nombre, muy \u00fatil para entender c\u00f3mo funciona un sistema de nombres de dominio.  +[no]ttlid : muestra o no la informaci\u00f3n del TTL cuando imprime cada registro.", 
            "title": "Modificando las consultas"
        }, 
        {
            "location": "/dns/test/#otras-opciones", 
            "text": "El comando dig permite adem\u00e1s varias opciones, como cualquier comando en Linux. Algunas de las m\u00e1s \u00fatiles son las siguientes:   -6  o  -4 : para realizar consultas \u00fanicamente sobre una red IPv6 o IPv4 respectivamente.  -b address[#port] : permite especificar una direcci\u00f3n v\u00e1lida desde la que consultar, y opcionalmente un puerto de origen.  -x : permite hacer una resoluci\u00f3n inversa sobre IPv4 (en IPv6 muestra el formato nibble bajo el dominio IP6.ARPA.  -i : permite una resoluci\u00f3n inversa sobre IPv6.   Para m\u00e1s opciones y documentaci\u00f3n, nada mejor que leer el man:  man dig", 
            "title": "Otras opciones"
        }, 
        {
            "location": "/dns/test/#nslookup", 
            "text": "Nslookup es un programa utilizado para saber si el DNS est\u00e1 resolviendo correctamente los nombres y las IPs. Se utiliza con el comando nslookup, que funciona tanto en Windows como en UNIX para obtener la direcci\u00f3n IP conociendo el nombre, y viceversa.", 
            "title": "Nslookup"
        }, 
        {
            "location": "/lamp/queEs/", 
            "text": "Se denomina \nLAMP\n a un grupo de software de c\u00f3digo libre que se instala normalmente en conjunto para habilitar un servidor para alojar sitios y aplicaciones web din\u00e1micas. Este t\u00e9rmino en realidad es un acr\u00f3nimo que representa un sistema operativo \nGNU/Linux\n con un servidor web \nApache\n, donde los datos del sitio son almacenados en base de datos \nMySQL\n o \nMariaDB\n y el contenido din\u00e1mico es procesado con \nPHP\n.\n\n\n\n\nAcr\u00f3nimos\n\n\nComo de describe m\u00e1s arriba, \nLAMP\n es un acr\u00f3nimo de \nL\ninux, \nA\npache, \nM\nySQL y \nP\nHP. Si esta pila o \nstack\n de aplicaciones se ejecuta en Microsoft Windows se denomina \nWAMP\n y \nMAMP\n si se corre sobre MAC OS X. \n\n\n\n\n\n\nApache\n\n\nEl servidor \nHTTP Apache\n es un servidor web HTTP de c\u00f3digo abierto, para plataformas Unix (BSD, GNU/Linux, etc.), Microsoft Windows, Macintosh y otras. \n\n\nEl servidor Apache es desarrollado y mantenido por una comunidad de usuarios bajo la supervisi\u00f3n de la \nApache Software Foundation\n dentro del proyecto HTTP Server (httpd).\n\n\n\n\nApache tiene amplia aceptaci\u00f3n en la red: desde 1996, Apache, es el servidor HTTP m\u00e1s usado. \n\n\n\n\nJug\u00f3 un papel fundamental en el desarrollo fundamental de la World Wide Web y alcanz\u00f3 su m\u00e1xima cuota de mercado en 2005 siendo el servidor empleado en el 70% de los sitios web en el mundo, sin embargo ha sufrido un descenso en su cuota de mercado en los \u00faltimos a\u00f1os. En 2009 se convirti\u00f3 en el primer servidor web que aloj\u00f3 m\u00e1s de 100 millones de sitios web.\n\n\n\n\nFuente: \nWikipedia\n  |  \nNetcraft\n\n\nMySQL\n\n\nMySQL\n es un sistema de gesti\u00f3n de bases de datos relacional desarrollado bajo licencia dual GPL/Licencia comercial por Oracle Corporation y est\u00e1 considerada como la base datos open source m\u00e1s popular del mundo y una de las m\u00e1s populares en general junto a \nOracle\n y \nMicrosoft SQL Server\n, sobre todo para entornos de desarrollo web.\n\n\nMySQL fue inicialmente desarrollado por MySQL AB (empresa fundada por David Axmark, Allan Larsson y Michael Widenius). MySQL A.B. fue adquirida por Sun Microsystems en 2008, y \u00e9sta a su vez fue comprada por Oracle Corporation en 2010.\n\n\nFuente: \nWikipedia\n\n\nMariaDB\n\n\nMariaDB\n es un sistema de gesti\u00f3n de bases de datos derivado de \nMySQL\n con licencia GPL (General Public License). Est\u00e1 desarrollado por Michael (Monty) Widenius (fundador de MySQL) y la comunidad de desarrolladores de software libre. Tiene una alta compatibilidad con MySQL ya que posee las mismas \u00f3rdenes, interfaces, APIs y bibliotecas, siendo su objetivo poder cambiar un servidor por otro directamente. \n\n\nEste SGBD surge a ra\u00edz de la compra de Sun Microsystems -compa\u00f1\u00eda que hab\u00eda comprado previamente MySQL AB- por parte de Oracle. MariaDB es un \nfork\n directo de MySQL que asegura la existencia de una versi\u00f3n de este producto con licencia GPL. Monty decidi\u00f3 crear esta variante porque estaba convencido de que el \u00fanico inter\u00e9s de Oracle en MySQL era reducir la competencia que MySQL supon\u00eda para el mayor vendedor de bases de datos relacionales del mundo, que es Oracle.\n\n\nFuente: \nWikipedia\n\n\nPHP\n\n\nPHP\n es un acr\u00f3nimo recursivo que significa PHP Hypertext Preprocessor (inicialmente PHP Tools, o, Personal Home Page Tools). Publicado con la PHP License, la Free Software Foundation considera esta licencia como software libre. Se trata de un lenguaje de programaci\u00f3n de uso general de c\u00f3digo del lado del servidor originalmente dise\u00f1ado para el desarrollo web de contenido din\u00e1mico. \n\n\nPHP puede ser desplegado en la mayor\u00eda de los servidores web y en casi todos los sistemas operativos y plataformas sin costo alguno. El lenguaje PHP se encuentra instalado en m\u00e1s de 20 millones de sitios web y en un mill\u00f3n de servidores. El n\u00famero de sitios basados en PHP se ha visto reducido progresivamente en los \u00faltimos a\u00f1os, con la aparici\u00f3n de nuevas tecnolog\u00edas como Node.JS, Golang, ASP.NET, etc. El sitio web de Wikipedia est\u00e1 desarrollado en PHP. Es tambi\u00e9n el m\u00f3dulo Apache m\u00e1s popular entre las computadoras que utilizan Apache como servidor web.\n\n\nPermite la conexi\u00f3n a diferentes tipos de servidores de bases de datos tanto SQL como NoSQL tales como MySQL, PostgreSQL, Oracle, ODBC, DB2, Microsoft SQL Server, Firebird, SQLite o MongoDB.\n\n\nPHP tambi\u00e9n tiene la capacidad de ser ejecutado en la mayor\u00eda de los sistemas operativos, tales como Unix (y de ese tipo, como Linux o Mac OS X) y Microsoft Windows, y puede interactuar con los servidores de web m\u00e1s populares.\n\n\nFuente: \nWikipedia", 
            "title": "\u00bfQu\u00e9 es LAMP?"
        }, 
        {
            "location": "/lamp/queEs/#apache", 
            "text": "El servidor  HTTP Apache  es un servidor web HTTP de c\u00f3digo abierto, para plataformas Unix (BSD, GNU/Linux, etc.), Microsoft Windows, Macintosh y otras.   El servidor Apache es desarrollado y mantenido por una comunidad de usuarios bajo la supervisi\u00f3n de la  Apache Software Foundation  dentro del proyecto HTTP Server (httpd).   Apache tiene amplia aceptaci\u00f3n en la red: desde 1996, Apache, es el servidor HTTP m\u00e1s usado.    Jug\u00f3 un papel fundamental en el desarrollo fundamental de la World Wide Web y alcanz\u00f3 su m\u00e1xima cuota de mercado en 2005 siendo el servidor empleado en el 70% de los sitios web en el mundo, sin embargo ha sufrido un descenso en su cuota de mercado en los \u00faltimos a\u00f1os. En 2009 se convirti\u00f3 en el primer servidor web que aloj\u00f3 m\u00e1s de 100 millones de sitios web.   Fuente:  Wikipedia   |   Netcraft", 
            "title": "Apache"
        }, 
        {
            "location": "/lamp/queEs/#mysql", 
            "text": "MySQL  es un sistema de gesti\u00f3n de bases de datos relacional desarrollado bajo licencia dual GPL/Licencia comercial por Oracle Corporation y est\u00e1 considerada como la base datos open source m\u00e1s popular del mundo y una de las m\u00e1s populares en general junto a  Oracle  y  Microsoft SQL Server , sobre todo para entornos de desarrollo web.  MySQL fue inicialmente desarrollado por MySQL AB (empresa fundada por David Axmark, Allan Larsson y Michael Widenius). MySQL A.B. fue adquirida por Sun Microsystems en 2008, y \u00e9sta a su vez fue comprada por Oracle Corporation en 2010.  Fuente:  Wikipedia", 
            "title": "MySQL"
        }, 
        {
            "location": "/lamp/queEs/#mariadb", 
            "text": "MariaDB  es un sistema de gesti\u00f3n de bases de datos derivado de  MySQL  con licencia GPL (General Public License). Est\u00e1 desarrollado por Michael (Monty) Widenius (fundador de MySQL) y la comunidad de desarrolladores de software libre. Tiene una alta compatibilidad con MySQL ya que posee las mismas \u00f3rdenes, interfaces, APIs y bibliotecas, siendo su objetivo poder cambiar un servidor por otro directamente.   Este SGBD surge a ra\u00edz de la compra de Sun Microsystems -compa\u00f1\u00eda que hab\u00eda comprado previamente MySQL AB- por parte de Oracle. MariaDB es un  fork  directo de MySQL que asegura la existencia de una versi\u00f3n de este producto con licencia GPL. Monty decidi\u00f3 crear esta variante porque estaba convencido de que el \u00fanico inter\u00e9s de Oracle en MySQL era reducir la competencia que MySQL supon\u00eda para el mayor vendedor de bases de datos relacionales del mundo, que es Oracle.  Fuente:  Wikipedia", 
            "title": "MariaDB"
        }, 
        {
            "location": "/lamp/queEs/#php", 
            "text": "PHP  es un acr\u00f3nimo recursivo que significa PHP Hypertext Preprocessor (inicialmente PHP Tools, o, Personal Home Page Tools). Publicado con la PHP License, la Free Software Foundation considera esta licencia como software libre. Se trata de un lenguaje de programaci\u00f3n de uso general de c\u00f3digo del lado del servidor originalmente dise\u00f1ado para el desarrollo web de contenido din\u00e1mico.   PHP puede ser desplegado en la mayor\u00eda de los servidores web y en casi todos los sistemas operativos y plataformas sin costo alguno. El lenguaje PHP se encuentra instalado en m\u00e1s de 20 millones de sitios web y en un mill\u00f3n de servidores. El n\u00famero de sitios basados en PHP se ha visto reducido progresivamente en los \u00faltimos a\u00f1os, con la aparici\u00f3n de nuevas tecnolog\u00edas como Node.JS, Golang, ASP.NET, etc. El sitio web de Wikipedia est\u00e1 desarrollado en PHP. Es tambi\u00e9n el m\u00f3dulo Apache m\u00e1s popular entre las computadoras que utilizan Apache como servidor web.  Permite la conexi\u00f3n a diferentes tipos de servidores de bases de datos tanto SQL como NoSQL tales como MySQL, PostgreSQL, Oracle, ODBC, DB2, Microsoft SQL Server, Firebird, SQLite o MongoDB.  PHP tambi\u00e9n tiene la capacidad de ser ejecutado en la mayor\u00eda de los sistemas operativos, tales como Unix (y de ese tipo, como Linux o Mac OS X) y Microsoft Windows, y puede interactuar con los servidores de web m\u00e1s populares.  Fuente:  Wikipedia", 
            "title": "PHP"
        }, 
        {
            "location": "/lamp/instalacion/", 
            "text": "Ingreso de datos\n\n\nDurante la instalaci\u00f3n se solicitar\u00e1 en varias ocasiones el ingreso de informaci\u00f3n por parte del usuario. Por ejemplo, la contrase\u00f1a del usuario root de la base de datos, o el tipo de servicio a instalar si usamos \ntasksel\n. Conviene prestar atenci\u00f3n en cada paso para evitar errores de configuraci\u00f3n. \n\n\n\n\nPara disponer de un servidor web \nLAMP\n ejecutaremos los comandos que se indican a continuaci\u00f3n. \n\n\nInstalaci\u00f3n de LAMP\n\n\nsudo apt install lamp-server^\n\n\n\n\n\nO bien: \n\n\nsudo tasksel\n\n\n\n\n\nDebiendo seleccionar la opci\u00f3n \nLAMP Server\n del men\u00fa exhibido en pantalla. En caso de no tener instalada la herramienta \ntasksel\n la instalamos: \n\n\nsudo apt install tasksel\n\n\n\n\n\nInstalaci\u00f3n de phpMyAdmin\n\n\nAdicionalmente podemos instalar un gestor para nuestra base de datos, llamado \nphpmyadmin\n (junto a algunas librer\u00edas extra), ejecutando el siguiente comando: \n\n\nsudo apt install phpmyadmin php-gettext php-mbstring\n\n\n\n\n\nVerificando la instalaci\u00f3n\n\n\nPara verificar el correcto funcionamiento del servidor, seguiremos los pasos que se detallan a continuaci\u00f3n.\n\n\nApache\n\n\nAbrimos el navegador web y nos dirigimos a la siguiente direcci\u00f3n: \nhttp://nombreDominioServidor\n o \nhttp://direccionIPServidor\n. En cualquier caso deber\u00edamos visualizar la p\u00e1gina de bienvenida del servidor web:\n\n\n\n\nPHP\n\n\nDentro de la carpeta ra\u00edz por defecto del servidor web \n/var/www/html\n, creamos un archivo con el nombre \ninfo.php\n (en realidad, se puede llamar como prefieras):\n\n\nsudo nano /var/www/html/info.php\n\n\n\n\n\nY agregaremos al archivo el contenido:\n\n\n?php\n\n\nphpinfo\n();\n\n\n?\n\n\n\n\n\n\nLuego de guardar los cambios al archivo, abrimos un navegador web y visitamos la direcci\u00f3n \nhttp://nombreDominioServidor/info.php\n \u00f3 \nhttp://direccionIPServidor/\u00ecnfo.php\n y deber\u00edamos la p\u00e1gina de informaci\u00f3n sobre php:\n\n\n\n\nphpMyAdmin\n\n\nAbrimos nuestro navegador y nos dirigimos a \nhttp://nombreDominioServidor/phpmyadmin\n \u00f3 \nhttp://direccionIPServidor/phpmyadmin\n. Veremos una p\u00e1gina similar a \u00e9sta: \n\n\n\n\nE iniciamos sesi\u00f3n con las siguientes credenciales: \n\n\n\n\nUsuario\n: root\n\n\nContrase\u00f1a\n: la definida durante el proceso de instalaci\u00f3n", 
            "title": "Instalaci\u00f3n"
        }, 
        {
            "location": "/lamp/instalacion/#instalacion-de-lamp", 
            "text": "sudo apt install lamp-server^  O bien:   sudo tasksel  Debiendo seleccionar la opci\u00f3n  LAMP Server  del men\u00fa exhibido en pantalla. En caso de no tener instalada la herramienta  tasksel  la instalamos:   sudo apt install tasksel", 
            "title": "Instalaci\u00f3n de LAMP"
        }, 
        {
            "location": "/lamp/instalacion/#instalacion-de-phpmyadmin", 
            "text": "Adicionalmente podemos instalar un gestor para nuestra base de datos, llamado  phpmyadmin  (junto a algunas librer\u00edas extra), ejecutando el siguiente comando:   sudo apt install phpmyadmin php-gettext php-mbstring", 
            "title": "Instalaci\u00f3n de phpMyAdmin"
        }, 
        {
            "location": "/lamp/instalacion/#verificando-la-instalacion", 
            "text": "Para verificar el correcto funcionamiento del servidor, seguiremos los pasos que se detallan a continuaci\u00f3n.", 
            "title": "Verificando la instalaci\u00f3n"
        }, 
        {
            "location": "/lamp/instalacion/#apache", 
            "text": "Abrimos el navegador web y nos dirigimos a la siguiente direcci\u00f3n:  http://nombreDominioServidor  o  http://direccionIPServidor . En cualquier caso deber\u00edamos visualizar la p\u00e1gina de bienvenida del servidor web:", 
            "title": "Apache"
        }, 
        {
            "location": "/lamp/instalacion/#php", 
            "text": "Dentro de la carpeta ra\u00edz por defecto del servidor web  /var/www/html , creamos un archivo con el nombre  info.php  (en realidad, se puede llamar como prefieras):  sudo nano /var/www/html/info.php  Y agregaremos al archivo el contenido:  ?php  phpinfo ();  ?   Luego de guardar los cambios al archivo, abrimos un navegador web y visitamos la direcci\u00f3n  http://nombreDominioServidor/info.php  \u00f3  http://direccionIPServidor/\u00ecnfo.php  y deber\u00edamos la p\u00e1gina de informaci\u00f3n sobre php:", 
            "title": "PHP"
        }, 
        {
            "location": "/lamp/instalacion/#phpmyadmin", 
            "text": "Abrimos nuestro navegador y nos dirigimos a  http://nombreDominioServidor/phpmyadmin  \u00f3  http://direccionIPServidor/phpmyadmin . Veremos una p\u00e1gina similar a \u00e9sta:    E iniciamos sesi\u00f3n con las siguientes credenciales:    Usuario : root  Contrase\u00f1a : la definida durante el proceso de instalaci\u00f3n", 
            "title": "phpMyAdmin"
        }, 
        {
            "location": "/lamp/gestionBasica/", 
            "text": "El \nservidor HTTP Apache\n se gestiona a trav\u00e9s de comandos que ejecutaremos en la terminal. De momento, no exsite una interfaz gr\u00e1fica nativa para hacerlo. \n\n\nPor otro lado, \nPHP\n debe gestionarse modificando sus archivos de configuraci\u00f3n, realizando acciones e instalando m\u00f3dulos a trav\u00e9s de la l\u00ednea de comandos. \n\n\nPor \u00faltimo, las tanto \nMySQL\n como \nMariaDB\n pueden gestionarse a trav\u00e9s de la terminal de comandos, pero existen aplicaciones desarrolladas exclusivamente para la gesti\u00f3n \u00e9stas y otras base de datos. \n\n\n\n\nAplicaciones de administraci\u00f3n\n\n\nExisten algunos desarrollos de terceros como \nWebmin\n o \nAjenti\n, que nos permiten gestionar la configuraci\u00f3n del servidor Web \nApache\n, de \nPHP\n y las \nbases de datos\n. Existen, adem\u00e1s, herramientas exclusivas para la gesti\u00f3n de estas \u00faltimas como \nphpMyAdmin\n o \nDBeaver\n entre otras.\n\n\nSin embargo, para gestionar efectivamente un servidor LAMP es \nimprescindible conocer la ubicaci\u00f3n de los archivos y carpetas de configuraci\u00f3n\n, ya que dicho conocimiento facilitar\u00e1 enormente nuestro trabajo. \n\n\n\n\nApache\n\n\nA continuaci\u00f3n se listan directorios y archivos de configuraci\u00f3n as\u00ed como los comandos para gestionarlo desde la terminal. \n\n\nArchivos y carpetas importantes\n\n\nUna vez instalado el servidor web Apache se crea una estructura archivos y directorios, entre los que se destacan: \n\n\n\n\n\n\n\n\nDirectorio o archivo\n\n\nDescripci\u00f3n\n\n\n\n\n\n\n\n\n\n\n/etc/apache2/apache.conf\n\n\nArchivo de configuraci\u00f3n general de Apache\n\n\n\n\n\n\n/etc/apache2/sites-available\n\n\nDirectorio donde se alojan los archivos de configuraci\u00f3n de los sitios  definidos pero a\u00fan no activos (es decir, no habilitados\n\n\n\n\n\n\n/etc/apache2/sites-enabled\n\n\nDirectorio donde se alojan los archivos de configuraci\u00f3n de los sitios  activos o habilitados\n\n\n\n\n\n\n/etc/apache2/mods-available\n\n\nDirectorio donde se alojan los m\u00f3dulos de Apache a\u00fan no activos (es decir, no habilitados\n\n\n\n\n\n\n/etc/apache2/mods-enabled\n\n\nDirectorio donde se alojan los m\u00f3dulos de Apache activos o habilitados\n\n\n\n\n\n\n/var/www/html\n\n\nDirectorio por del sitio web por defecto, donde Apache aloja las p\u00e1ginas web\n\n\n\n\n\n\n/home/usuario/public_html\n\n\nDirectorio donde se aloja el sitio web personal de cada usuario del sistema\n\n\n\n\n\n\n\n\nGesti\u00f3n de m\u00f3dulos\n\n\nEl servidor web Apache contiene diversos m\u00f3dulos que proveen al servidor de funcionalidades extra. La mayor\u00eda de ellos est\u00e1n deshabilitados por defecto. \n\n\nLa sint\u00e1xis b\u00e1sica para tabajar con m\u00f3dulos es la siguiente: \n\n\nsudo a2\n[\nen\n|\ndis\n]\nmod nombreDelModulo\n\n\n\n\n\nDonde: \n\n\n\n\n\n\n\n\nSistema operativo\n\n\nUbicaci\u00f3n del archivo \nhosts\n\n\n\n\n\n\n\n\n\n\na2\n\n\nInicio del comando de Apache2\n\n\n\n\n\n\nen\n\n\nEnable\n es decir, habilitar el sitio web\n\n\n\n\n\n\ndis\n\n\nDisable\n, es decir, deshabilitar el sitio web\n\n\n\n\n\n\nmod\n\n\nSimboliza el concepto de \nm\u00f3dulo\n\n\n\n\n\n\nnombreDelModulo\n\n\nNombre del modulo que deseamos habilitar o deshabilitar\n\n\n\n\n\n\n\n\nPor ejemplo, la siguiente acci\u00f3n habilitar\u00e1 el m\u00f3dulo \nuserdir\n:\n\n\nsudo a2enmod userdir\n\n\n\n\n\nEn otras palabras, crear\u00e1 un \nenlace simb\u00f3lico\n del m\u00f3dulo \nuserdir\n desde la carpeta  \n/etc/apache2/mods-available\n hacia la carpeta \n/etc/apache2/mods-enabled\n.\n\n\nInicio y parada del servidor\n\n\nExisten diversos comandos para gestionar el servidor web Apache. \n\n\nDetener el servidor\n\n\nsudo systemctl stop apache2\n\n\n\n\n\nIniciar el servidor\n\n\nsudo systemctl start apache2\n\n\n\n\n\nReiniciar el servidor\n\n\nsudo systemctl restart apache2\n\n\n\n\n\nRecargar la configuraci\u00f3n del servidor (sin reiniciar)\n\n\nsudo systemctl reload apache2\n\n\n\n\n\nEstado del servidor\n\n\nsudo systemctl status apache2\n\n\n\n\n\nVerificar la configuraci\u00f3n del servidor\n\n\nsudo apache2ctl configtest\n\n\n\n\n\nCompatibilidad con versiones anteriores\n\n\nLas versiones m\u00e1s recientes del kernel de GNU/Linux adoptan el uso de \nSystemD\n. No obstante, versiones basadas en Debian anteriores a 2016, emplean el legendario \nSystemV\n. Al momento de escribir esta documentaci\u00f3n, en l\u00edneas generales, los sistemas basados en \nsystemd\n conservan compatibilidad con \nsystemV\n. Para el caso del servidor web Apache tenemos que: \n\n\nDetener el servidor\n\n\nsudo service apache2 stop\n\n\n\n\n\nIniciar el servidor\n\n\nsudo service apache2 start\n\n\n\n\n\nReiniciar el servidor\n\n\nsudo service apache2 restart\n\n\n\n\n\nRecargar la configuraci\u00f3n del servidor (sin reiniciar)\n\n\nsudo service apache2 reload\n\n\n\n\n\nConfigurando el \nnombre\n del servidor\n\n\nAl comprobar la configuraci\u00f3n de Apache obtenemos el siguiente error:\n\n\nSet the \nServerName\n directive globally to suppress this message \nSyntax OK\n\n\n\n\n\nPara corregir esto, abrimos el archivo de configuraci\u00f3n principal de Apache con nuestro editor de texto:\n\n\nsudo nano /etc/apache2/apache2.conf\n\n\n\n\n\nY agregamos al final del archivo la directiva \nServerName\n, seguida del \nnombre de dominio\n o \ndirecci\u00f3n IP\n de nuestro servidor web. Es decir: \n\n\nServerName\n dominio_del_servidor_o_IP \n\n\n\n\n\nGuardamos y cerramos el archivo. Luego, para verificar que todo est\u00e1 bien (es decir, que no hay errores de sintaxis en el archivo de configuraci\u00f3n de Apache):\n\n\nsudo apache2ctl configtest\n\n\n\n\n\nY como definimos la directiva global \nServerName\n, veremos la siguiente salida: \n\n\nOutput\n\nSyntax OK\n\n\n\n\n\nPor \u00faltimo, reiniciamos Apache para implementar los cambios:\n\n\nsudo systemctl restart apache2\n\n\n\n\n\nPHP\n\n\nEl arcivo de configuraci\u00f3n de PHP se llama \nphp.ini\n. No existe un \u00fanico archivo \nphp.ini\n, m\u00e1s bien, existe un archivo \nphp.ini\n para cada aplicaci\u00f3n que lo utilice. \n\n\n\n\n\n\n\n\nUbicaci\u00f3n de \nphp.ini\n\n\nUso\n\n\n\n\n\n\n\n\n\n\n/etc/php/7.0/apache2/php.ini\n\n\nPlugin PHP utilizado por el servidor web Apache\n\n\n\n\n\n\n/etc/php/7.0/fpm/php.ini\n\n\nPlugin PHP utilizado por el servidor web NGINX\n\n\n\n\n\n\n/etc/php/7.0/cli/php.ini\n\n\nEjecuci\u00f3n de PHP desde la terminal de comandos\n\n\n\n\n\n\n/etc/php/7.0/cgi/php.ini\n\n\nPlugin PHP para CGI\n\n\n\n\n\n\n\n\nDonde \n7.0\n corresponde a la versi\u00f3n de PHP instalada. Luego, el archivo que tendremos que editar cuando querramos modificar el comportamiento de \nPHP en un entorno LAMP\n ser\u00e1 el que aparece en la primer fila de la tabla. \n\n\nBase de datos\n\n\nLas bases de datos soportan administraci\u00f3n a trav\u00e9s de la l\u00ednea de comandos, como podemos leer en la documentaci\u00f3n oficial de \nMySQL\n y \nMariaDB\n. No obstante, una de las opciones m\u00e1s elegidas a la hora de gestionar base de datos es \nphpMyAdmin", 
            "title": "Gesti\u00f3n b\u00e1sica"
        }, 
        {
            "location": "/lamp/gestionBasica/#apache", 
            "text": "A continuaci\u00f3n se listan directorios y archivos de configuraci\u00f3n as\u00ed como los comandos para gestionarlo desde la terminal.", 
            "title": "Apache"
        }, 
        {
            "location": "/lamp/gestionBasica/#archivos-y-carpetas-importantes", 
            "text": "Una vez instalado el servidor web Apache se crea una estructura archivos y directorios, entre los que se destacan:      Directorio o archivo  Descripci\u00f3n      /etc/apache2/apache.conf  Archivo de configuraci\u00f3n general de Apache    /etc/apache2/sites-available  Directorio donde se alojan los archivos de configuraci\u00f3n de los sitios  definidos pero a\u00fan no activos (es decir, no habilitados    /etc/apache2/sites-enabled  Directorio donde se alojan los archivos de configuraci\u00f3n de los sitios  activos o habilitados    /etc/apache2/mods-available  Directorio donde se alojan los m\u00f3dulos de Apache a\u00fan no activos (es decir, no habilitados    /etc/apache2/mods-enabled  Directorio donde se alojan los m\u00f3dulos de Apache activos o habilitados    /var/www/html  Directorio por del sitio web por defecto, donde Apache aloja las p\u00e1ginas web    /home/usuario/public_html  Directorio donde se aloja el sitio web personal de cada usuario del sistema", 
            "title": "Archivos y carpetas importantes"
        }, 
        {
            "location": "/lamp/gestionBasica/#gestion-de-modulos", 
            "text": "El servidor web Apache contiene diversos m\u00f3dulos que proveen al servidor de funcionalidades extra. La mayor\u00eda de ellos est\u00e1n deshabilitados por defecto.   La sint\u00e1xis b\u00e1sica para tabajar con m\u00f3dulos es la siguiente:   sudo a2 [ en | dis ] mod nombreDelModulo  Donde:      Sistema operativo  Ubicaci\u00f3n del archivo  hosts      a2  Inicio del comando de Apache2    en  Enable  es decir, habilitar el sitio web    dis  Disable , es decir, deshabilitar el sitio web    mod  Simboliza el concepto de  m\u00f3dulo    nombreDelModulo  Nombre del modulo que deseamos habilitar o deshabilitar     Por ejemplo, la siguiente acci\u00f3n habilitar\u00e1 el m\u00f3dulo  userdir :  sudo a2enmod userdir  En otras palabras, crear\u00e1 un  enlace simb\u00f3lico  del m\u00f3dulo  userdir  desde la carpeta   /etc/apache2/mods-available  hacia la carpeta  /etc/apache2/mods-enabled .", 
            "title": "Gesti\u00f3n de m\u00f3dulos"
        }, 
        {
            "location": "/lamp/gestionBasica/#inicio-y-parada-del-servidor", 
            "text": "Existen diversos comandos para gestionar el servidor web Apache.   Detener el servidor  sudo systemctl stop apache2  Iniciar el servidor  sudo systemctl start apache2  Reiniciar el servidor  sudo systemctl restart apache2  Recargar la configuraci\u00f3n del servidor (sin reiniciar)  sudo systemctl reload apache2  Estado del servidor  sudo systemctl status apache2  Verificar la configuraci\u00f3n del servidor  sudo apache2ctl configtest", 
            "title": "Inicio y parada del servidor"
        }, 
        {
            "location": "/lamp/gestionBasica/#compatibilidad-con-versiones-anteriores", 
            "text": "Las versiones m\u00e1s recientes del kernel de GNU/Linux adoptan el uso de  SystemD . No obstante, versiones basadas en Debian anteriores a 2016, emplean el legendario  SystemV . Al momento de escribir esta documentaci\u00f3n, en l\u00edneas generales, los sistemas basados en  systemd  conservan compatibilidad con  systemV . Para el caso del servidor web Apache tenemos que:   Detener el servidor  sudo service apache2 stop  Iniciar el servidor  sudo service apache2 start  Reiniciar el servidor  sudo service apache2 restart  Recargar la configuraci\u00f3n del servidor (sin reiniciar)  sudo service apache2 reload", 
            "title": "Compatibilidad con versiones anteriores"
        }, 
        {
            "location": "/lamp/gestionBasica/#configurando-el-nombre-del-servidor", 
            "text": "Al comprobar la configuraci\u00f3n de Apache obtenemos el siguiente error:  Set the  ServerName  directive globally to suppress this message \nSyntax OK  Para corregir esto, abrimos el archivo de configuraci\u00f3n principal de Apache con nuestro editor de texto:  sudo nano /etc/apache2/apache2.conf  Y agregamos al final del archivo la directiva  ServerName , seguida del  nombre de dominio  o  direcci\u00f3n IP  de nuestro servidor web. Es decir:   ServerName  dominio_del_servidor_o_IP   Guardamos y cerramos el archivo. Luego, para verificar que todo est\u00e1 bien (es decir, que no hay errores de sintaxis en el archivo de configuraci\u00f3n de Apache):  sudo apache2ctl configtest  Y como definimos la directiva global  ServerName , veremos la siguiente salida:   Output \nSyntax OK  Por \u00faltimo, reiniciamos Apache para implementar los cambios:  sudo systemctl restart apache2", 
            "title": "Configurando el nombre del servidor"
        }, 
        {
            "location": "/lamp/gestionBasica/#php", 
            "text": "El arcivo de configuraci\u00f3n de PHP se llama  php.ini . No existe un \u00fanico archivo  php.ini , m\u00e1s bien, existe un archivo  php.ini  para cada aplicaci\u00f3n que lo utilice.      Ubicaci\u00f3n de  php.ini  Uso      /etc/php/7.0/apache2/php.ini  Plugin PHP utilizado por el servidor web Apache    /etc/php/7.0/fpm/php.ini  Plugin PHP utilizado por el servidor web NGINX    /etc/php/7.0/cli/php.ini  Ejecuci\u00f3n de PHP desde la terminal de comandos    /etc/php/7.0/cgi/php.ini  Plugin PHP para CGI     Donde  7.0  corresponde a la versi\u00f3n de PHP instalada. Luego, el archivo que tendremos que editar cuando querramos modificar el comportamiento de  PHP en un entorno LAMP  ser\u00e1 el que aparece en la primer fila de la tabla.", 
            "title": "PHP"
        }, 
        {
            "location": "/lamp/gestionBasica/#base-de-datos", 
            "text": "Las bases de datos soportan administraci\u00f3n a trav\u00e9s de la l\u00ednea de comandos, como podemos leer en la documentaci\u00f3n oficial de  MySQL  y  MariaDB . No obstante, una de las opciones m\u00e1s elegidas a la hora de gestionar base de datos es  phpMyAdmin", 
            "title": "Base de datos"
        }, 
        {
            "location": "/lamp/userdir/", 
            "text": "Es posible crear un \nespacio web para cada usuario del sistema\n, donde \u00e9stos pueden alojar su propio contenido web. \n\n\n\n\nUsuarios\n\n\nEn los ejemplos listados en esta p\u00e1gina deber\u00e1s cambiar \nusuario\n por el nombre de usuario al que deseemos dotar de un espacio web.\n\n\n\n\nCreando el contenido del sitio web\n\n\nEn primer lugar, creamos el directorio en el cual se agregar\u00e1n las p\u00e1ginas webs del usuario:\n\n\nmkdir /home/usuario/public_html\n\n\n\n\n\nSolo resta agregar el contenido del sitio web dentro de la carpeta \npublic_html\n que acabamos de crear. Ten\u00e9 en cuenta debe existir necesariamente al menos un archivo \u00edndice. Por ejemplo: \nindex.html\n\n\n\n\nEl directorio \n/etc/skel\n\n\nEn sistemas GNU/Linux, el contenido del directorio \n/etc/skel\n se \ncarga\n dentro de la carpeta \nhome\n de cada usuario al momento de que estos son creados. Por tanto, podemos modificar el contenido de \n/etc/skel\n incluyendo en dicho directorio el contenido que necesitemos. Por ejemplo, el directorio \npublic_html\n\n\n\n\nHabilitando el m\u00f3dulo userdir\n\n\nPara proveer a los usuarios de un espacio web dentro de su carpeta \nhome\n todav\u00eda tendremos que dar un paso m\u00e1s: habilitar el m\u00f3dulo de Apache llamado \nuserdir\n. Para ello, ejecutamos en la terminal: \n\n\nsudo a2enmod userdir\n\n\n\n\n\nLuego, reiniciamos el servidor para que incorpore los cambios:\n\n\nsudo systemctl restart apache2\n\n\n\n\n\nHabilitando el m\u00f3dulo php7.0\n\n\nEn caso de querer ejecutar \nPHP\n en las webs personales de los usuarios tendremos que instalar el m\u00f3dulo correspondiente:  \n\n\nsudo apt-get install libapache2-mod-php7.0\n\n\n\n\n\nActo seguido, habilitamos el m\u00f3dulo: \n\n\nsudo a2enmod php7.0\n\n\n\n\n\nPor \u00faltimo, debemos permitir la ejecucci\u00f3n de scripts PHP dentro de directorio \nhome\n de los usuarios. Para ello, abrimos el archivo:\n\n\nnano /etc/apache2/mods-available/php7.0.conf\n\n\n\n\n\nUn vez abierto el archivo, tenemos que desplazarnos hasta el final del archivo hasta ubicar el siguiente bloque de c\u00f3digo:\n\n\nIfModule\n \nmod_userdir.c\n\n    \nDirectory\n \n/home/*/public_html\n\n        \nphp_admin_flag\n engine \nOff\n\n    \n/Directory\n\n\n/IfModule\n\n\n\n\n\n\nComentamos el bloque de manera que quede as\u00ed: \n\n\n#\nIfModule mod_userdir.c\n\n\n#    \nDirectory /home/*/public_html\n\n\n#        php_admin_flag engine Off\n\n\n#    \n/Directory\n\n\n#\n/IfModule\n\n\n\n\n\n\nPara hacer efectivos los cambios realizados, reiniciamos Apache: \n\n\nsudo systemctl restart apache2\n\n\n\n\n\nAceso a la web del usuario\n\n\nUna vez concluidos los pasos anteriores, podemos acceder a la web del usuario escribiendo en el navegador:\n\n\n\n\nhttp://nombreDominioServidor/~usuario\n o \nhttp://direccionIPServidor/~usuario\n si incluimos en la ra\u00edz del sitio web contenido est\u00e1tico o\n\n\nhttp://nombreDominioServidor/~usuario/archivo.php\n o \nhttp://direccionIPServidor/~usuario/archivo.php\n si agregamos a la web contenido din\u00e1mico (PHP). En el ejemplo, dicho contenido din\u00e1mico est\u00e1 representado por \narchivo.php", 
            "title": "Web de usuario"
        }, 
        {
            "location": "/lamp/userdir/#creando-el-contenido-del-sitio-web", 
            "text": "En primer lugar, creamos el directorio en el cual se agregar\u00e1n las p\u00e1ginas webs del usuario:  mkdir /home/usuario/public_html  Solo resta agregar el contenido del sitio web dentro de la carpeta  public_html  que acabamos de crear. Ten\u00e9 en cuenta debe existir necesariamente al menos un archivo \u00edndice. Por ejemplo:  index.html   El directorio  /etc/skel  En sistemas GNU/Linux, el contenido del directorio  /etc/skel  se  carga  dentro de la carpeta  home  de cada usuario al momento de que estos son creados. Por tanto, podemos modificar el contenido de  /etc/skel  incluyendo en dicho directorio el contenido que necesitemos. Por ejemplo, el directorio  public_html", 
            "title": "Creando el contenido del sitio web"
        }, 
        {
            "location": "/lamp/userdir/#habilitando-el-modulo-userdir", 
            "text": "Para proveer a los usuarios de un espacio web dentro de su carpeta  home  todav\u00eda tendremos que dar un paso m\u00e1s: habilitar el m\u00f3dulo de Apache llamado  userdir . Para ello, ejecutamos en la terminal:   sudo a2enmod userdir  Luego, reiniciamos el servidor para que incorpore los cambios:  sudo systemctl restart apache2", 
            "title": "Habilitando el m\u00f3dulo userdir"
        }, 
        {
            "location": "/lamp/userdir/#habilitando-el-modulo-php70", 
            "text": "En caso de querer ejecutar  PHP  en las webs personales de los usuarios tendremos que instalar el m\u00f3dulo correspondiente:    sudo apt-get install libapache2-mod-php7.0  Acto seguido, habilitamos el m\u00f3dulo:   sudo a2enmod php7.0  Por \u00faltimo, debemos permitir la ejecucci\u00f3n de scripts PHP dentro de directorio  home  de los usuarios. Para ello, abrimos el archivo:  nano /etc/apache2/mods-available/php7.0.conf  Un vez abierto el archivo, tenemos que desplazarnos hasta el final del archivo hasta ubicar el siguiente bloque de c\u00f3digo:  IfModule   mod_userdir.c \n     Directory   /home/*/public_html \n         php_admin_flag  engine  Off \n     /Directory  /IfModule   Comentamos el bloque de manera que quede as\u00ed:   # IfModule mod_userdir.c  #     Directory /home/*/public_html  #        php_admin_flag engine Off  #     /Directory  # /IfModule   Para hacer efectivos los cambios realizados, reiniciamos Apache:   sudo systemctl restart apache2", 
            "title": "Habilitando el m\u00f3dulo php7.0"
        }, 
        {
            "location": "/lamp/userdir/#aceso-a-la-web-del-usuario", 
            "text": "Una vez concluidos los pasos anteriores, podemos acceder a la web del usuario escribiendo en el navegador:   http://nombreDominioServidor/~usuario  o  http://direccionIPServidor/~usuario  si incluimos en la ra\u00edz del sitio web contenido est\u00e1tico o  http://nombreDominioServidor/~usuario/archivo.php  o  http://direccionIPServidor/~usuario/archivo.php  si agregamos a la web contenido din\u00e1mico (PHP). En el ejemplo, dicho contenido din\u00e1mico est\u00e1 representado por  archivo.php", 
            "title": "Aceso a la web del usuario"
        }, 
        {
            "location": "/lamp/virtualHosts/", 
            "text": "Una de las aplicaciones de la caracter\u00edstica de Apache llamada \nVirtualHosts\n consiste en la posibilidad de crear \ndiferentes sitios web\n cada uno con su \nnombre de dominio propio\n aunque \u00e9stos se encuentren alojados en un mismo servidor y, por lo tanto, tengan \nla misma direcci\u00f3n IP\n. \n\n\n\n\n\u00bfQu\u00e9 es Virtual Host?\n\n\nEl t\u00e9rmino \nHosting Virtual\n se refiere a hacer funcionar m\u00e1s de un sitio web tales como \nwww.company1.com\n y \nwww.company2.com\n en una sola m\u00e1quina. \n\n\nLos sitios web virtuales pueden estar \nbasados en direcciones IP\n, lo que significa que cada sitio web tiene una direcci\u00f3n IP diferente, o \nbasados en nombres diferentes\n, lo que significa que con una sola direcci\u00f3n IP est\u00e1n funcionando sitios web con diferentes nombres (de dominio). \n\n\nEl hecho de que est\u00e9n funcionando en la misma m\u00e1quina f\u00edsica pasa completamente desapercibido para el usuario que visita esos sitios web.\n\n\n\n\nCreando el contenido web\n\n\nEn primer lugar creamos la carpeta donde se alojaran las paginas web del \nhost virtual\n que definiremos. \n\n\nPor ejemplo:\n\n\nmkdir /home/usuario/public_html\n\n\n\n\n\nEl paso siguiente ser\u00e1 agregar en el directorio el contenido del sitio web como p\u00e1ginas web, im\u00e1genes, archivos de estilo, sripts, etc. Recordar que debe existir necesariamente alg\u00fan archivo \u00edndice (por ejemplo, \nindex.html\n o \nindex.php\n o con cualquier otra extensi\u00f3n habilitada en la configuraci\u00f3n del servidor). \n\n\nConfigurando el Host Virtual\n\n\nPara iniciar la configuraci\u00f3n de nuestro \nhost virtual\n nos dirigiremos a la siguiente carpeta: \n\n\ncd\n /etc/apache2/sites-available\n\n\n\n\n\nUna vez ubicados en el directorio correspodiente nos disponemos a crear el \narchivo de configuracion del Host Virtual\n (el archivo en cuesti\u00f3n puede llamarse de cualquier forma, pero debe finalizar necesariamente con la extension \n.conf\n)\n\n\nnano misitio.lan.conf\n\n\n\n\n\nY a continuaci\u00f3n escribimos la configuraci\u00f3n de nuestro Host Virtual. Un ejemplo simple de configuracion para el sitio ficticio \nmisitio.lan\n:\n\n\nVirtualHost\n \n*:80\n\n\n \n# Correo del administrador del servidor\n\n \nServerAdmin\n    tunombre@mail.com\n\n \n# Nombre de dominio del sitio\n\n \nServerName\n misitio.lan\n\n \n# Alias del nombre de dominio del sitio\n\n \nServerAlias\n    www.misitio.lan http://misitio.lan\n\n \n# Carpeta ra\u00edz donde se alojar\u00e1n las p\u00e1ginas web \n\n \nDocumentRoot\n   \n/home/usuario/public_html\n   \n\n \n# Ruta en la que Apache escribir\u00e1 el registor de errores\n\n \nErrorLog\n   \n/home/usuario/errores_misitio.lan.log\n\n\n \n# Ruta en la que Apache escribir\u00e1 el registor accesos\n\n \nCustomLog\n  \n/home/usuario/accessos_misitio.lan.log\n combined\n\n\n/VirtualHost\n\n\n\n\n\n\n\n\nNota\n\n\nLos archivos de \nlog\n son archivos en los que el sistema guarda informaci\u00f3n sobre el funcionamiento de alg\u00fan servicio determinado indicando errores, advertencias, accesos, etc. En distribuciones GNU/Linux, se encuentran alojados bajo la ruta \n/var/log/\n. En el ejemplo, se ha optado por guardar dichos archivos en la carpeta home del usuario. \n\n\n\n\nHabilitando el sitio creado\n\n\nPara que Apache ponga el sitio en modo \nhabilitado\n (hasta ahora lo definimos, pero no lo habilitamos), ejecutamos en la terminal:\n\n\nsudo a2ensite misitio.lan.conf\n\n\n\n\n\nEste comando crear\u00e1 un \nenlace simb\u00f3lico\n del archivo \nmisitio.lan.conf\n desde la carpeta \n/etc/apache2/sites-available\n hacia la carpeta \n/etc/apache2/sites-enabled\n. \n\n\nPor \u00faltimo, para que Apache haga efectivo todos los cambios, lo reiniciamos: \n\n\nsudo service apache2 restart\n\n\n\n\n\nAccediendo al sitio web\n\n\nEl \u00faltimo paso que tendremos que dar para acceder a nuestro sitio web ser\u00e1 definir cu\u00e1l ser\u00e1 el \nm\u00e9todo de resoluci\u00f3n de su nombre de dominio\n.", 
            "title": "Hosts virtuales"
        }, 
        {
            "location": "/lamp/virtualHosts/#creando-el-contenido-web", 
            "text": "En primer lugar creamos la carpeta donde se alojaran las paginas web del  host virtual  que definiremos.   Por ejemplo:  mkdir /home/usuario/public_html  El paso siguiente ser\u00e1 agregar en el directorio el contenido del sitio web como p\u00e1ginas web, im\u00e1genes, archivos de estilo, sripts, etc. Recordar que debe existir necesariamente alg\u00fan archivo \u00edndice (por ejemplo,  index.html  o  index.php  o con cualquier otra extensi\u00f3n habilitada en la configuraci\u00f3n del servidor).", 
            "title": "Creando el contenido web"
        }, 
        {
            "location": "/lamp/virtualHosts/#configurando-el-host-virtual", 
            "text": "Para iniciar la configuraci\u00f3n de nuestro  host virtual  nos dirigiremos a la siguiente carpeta:   cd  /etc/apache2/sites-available  Una vez ubicados en el directorio correspodiente nos disponemos a crear el  archivo de configuracion del Host Virtual  (el archivo en cuesti\u00f3n puede llamarse de cualquier forma, pero debe finalizar necesariamente con la extension  .conf )  nano misitio.lan.conf  Y a continuaci\u00f3n escribimos la configuraci\u00f3n de nuestro Host Virtual. Un ejemplo simple de configuracion para el sitio ficticio  misitio.lan :  VirtualHost   *:80 \n\n  # Correo del administrador del servidor \n  ServerAdmin     tunombre@mail.com\n\n  # Nombre de dominio del sitio \n  ServerName  misitio.lan\n\n  # Alias del nombre de dominio del sitio \n  ServerAlias     www.misitio.lan http://misitio.lan\n\n  # Carpeta ra\u00edz donde se alojar\u00e1n las p\u00e1ginas web  \n  DocumentRoot     /home/usuario/public_html    \n\n  # Ruta en la que Apache escribir\u00e1 el registor de errores \n  ErrorLog     /home/usuario/errores_misitio.lan.log \n\n  # Ruta en la que Apache escribir\u00e1 el registor accesos \n  CustomLog    /home/usuario/accessos_misitio.lan.log  combined /VirtualHost    Nota  Los archivos de  log  son archivos en los que el sistema guarda informaci\u00f3n sobre el funcionamiento de alg\u00fan servicio determinado indicando errores, advertencias, accesos, etc. En distribuciones GNU/Linux, se encuentran alojados bajo la ruta  /var/log/ . En el ejemplo, se ha optado por guardar dichos archivos en la carpeta home del usuario.", 
            "title": "Configurando el Host Virtual"
        }, 
        {
            "location": "/lamp/virtualHosts/#habilitando-el-sitio-creado", 
            "text": "Para que Apache ponga el sitio en modo  habilitado  (hasta ahora lo definimos, pero no lo habilitamos), ejecutamos en la terminal:  sudo a2ensite misitio.lan.conf  Este comando crear\u00e1 un  enlace simb\u00f3lico  del archivo  misitio.lan.conf  desde la carpeta  /etc/apache2/sites-available  hacia la carpeta  /etc/apache2/sites-enabled .   Por \u00faltimo, para que Apache haga efectivo todos los cambios, lo reiniciamos:   sudo service apache2 restart", 
            "title": "Habilitando el sitio creado"
        }, 
        {
            "location": "/lamp/virtualHosts/#accediendo-al-sitio-web", 
            "text": "El \u00faltimo paso que tendremos que dar para acceder a nuestro sitio web ser\u00e1 definir cu\u00e1l ser\u00e1 el  m\u00e9todo de resoluci\u00f3n de su nombre de dominio .", 
            "title": "Accediendo al sitio web"
        }, 
        {
            "location": "/lamp/ejercicios/", 
            "text": "A continuaci\u00f3n se listan dos ejercicios en los que deber\u00e1s aplicar los conocimientos adquiridos. \n\n\nEjercicio 1\n\n\nLa empresa \"Penguin S.A.\", dispone de un servidor web dedicado y tan solo una direccion IP. La empresa necesita que su servidor web gestione diferentes sitios web, cada uno con su nombre de dominio.\n\n\nHablando con ejecutivos de la empresa, se acuerda en desplegar las siguientes plataformas webs: \n\n\n\n\nSitio oficial\n\n\nSucursal Patagonia\n\n\nFrontEnd para la administraci\u00f3n de la  base de datos MySQL. \n\n\n\n\nEn la siguiente tabla se indican adem\u00e1s las respectivas rutas donde deber\u00e1n alojar los archivos de los sitios web. \n\n\n\n\n\n\n\n\n#\n\n\nDominio\n\n\nDirectorio ra\u00edz (DocumentRoot)\n\n\n\n\n\n\n\n\n\n\n1\n\n\npenguin.net\n\n\n/home/penguin/public_html\n\n\n\n\n\n\n2\n\n\npatagon.penguin.net\n\n\n/home/patagon/public_html\n\n\n\n\n\n\n3\n\n\nphpmyadmin.penguin.net\n\n\n/usr/share/phpmyadmin\n\n\n\n\n\n\n\n\nInstalaci\u00f3n de paquetes\n\n\nDeber\u00e1 \ninstalarse un entorno LAMP\n necesario para el despliegue de los sitios web. \n\n\nCreaci\u00f3n de usuarios\n\n\nPara poder realizar el ejercicio deber\u00e1s crear previamente los usuarios \npenguin\n y \npatagon\n. \n\n\nCreaci\u00f3n los directorios ra\u00edz\n\n\nLa acci\u00f3n deber\u00e1 realizarse para los dominios \npenguin.net\n y \npatagon.penguin.net\n tomando en cuenta los datos que figuran en el cuadro acordado con el cliente. \n\n\nCreaci\u00f3n de contenido web\n\n\nDentro de los \ndirectorios ra\u00edz\n creados en el punto anterior (necesariamente deber\u00e1 existir una p\u00e1gina llamada index.html o index.php) y a modo de ejemplo, deber\u00e1n crearse las siguientes p\u00e1ginas: \n\n\n\n\nPara \npenguin.net\n: un archivo \nindex.html\n con la frase \"Penguin.net - Sitio Oficial\"\n\n\nPara \npatagon.penguin.net\n, un archivo \nindex.php\n con el siguiente contenido: \n\n\n\n\n!DOCTYPE html\n\n\n\nhtml\n\n\n\nhead\n\n\n\n    \ntitle\nPenguin S.A.\n/title\n\n\n\n/head\n\n\n\nbody\n\n\n\n    \nh1\nPenguin.Net Patagon\n/h1\n\n\n\n    \np\nSitio en construccion\n/p\n\n\n\n    \n?php\n \n\n        \n# Muestra la fecha y hora actual de Buenos Aires\n\n        \nini_set\n(\ndate.timezone\n,\nAmerica/Argentina/Buenos_Aires\n);\n\n        \necho\n \ndate\n(\nd-m-Y (H:i A)\n);\n\n\n    \n?\n\n\n\n    \n/body\n\n\n\n/html\n\n\n\n\n\n\nCreaci\u00f3n de los archivos de configuraci\u00f3n\n\n\nSe deben crear los archivos de configuraci\u00f3n de cada \nHost Virtual\n solicitado por el cliente. Tener en cuenta que para todos los casos, el administrador sera \nadmin@penguin.net\n.\n\n\nResoluci\u00f3n de nombres\n\n\nSe debe realizar a trav\u00e9s del m\u00e9todo del archivo hosts.\n\n\n\n\nAutomatizaci\u00f3n de tareas\n\n\nTal vez ser\u00eda m\u00e1s practico realizar todas las acciones anteriores valiendose de un script. \u00bfTe anim\u00e1s a escribirlo? \n\n\n\n\nPosibles errores\n\n\n\n\nError\n\n\nEs posible que con la configuraci\u00f3n por defecto de Apache, obtengamos un \nerror 403\n. En ese caso, realizar los pasos que se describen a continuaci\u00f3n\n\n\n\n\nPara corregir dicho error, qbrimos el archivo de configuraci\u00f3n general de Apache: \n\n\nsudo\n nano etc/apache2/apache2.conf\n\n\n\n\n\nY modificamos el archivo de configuraci\u00f3n general de Apache, aproximadamente en la l\u00ednea 153 y que posee el siguiente aspecto: \n\n\nDirectory\n \n/\n\n\nOptions\n FollowSymLinks\n\nAllowOverride\n \nNone\n\n\nRequire\n \nall\n denied\n\n/Directory\n\n\n\n\n\n\nTendremos que modificarlo para que quede: \n\n\nDirectory\n \n/\n\n\nOptions\n FollowSymLinks\n\nAllowOverride\n \nNone\n\n\n# Require all denied\n\n\n/Directory\n\n\n\n\n\n\nEjercicio 2\n\n\nUna vez que hayamos \ninstalado correctamente el entorno LAMP\n podremos instalar en el servidor web distintas aplicaciones webs que funcionen con dicha tecnolog\u00eda (PHP y MySQL). \n\n\nA continuaci\u00f3n se ofrecen distintas aplicaciones para su descarga junto con las indicaciones de instalaci\u00f3n. \n\n\nDescargando las aplicaciones\n\n\nLa siguiente lista de aplicaciones se encuentra alojada en el servidor local. Son ejemplos de aplicaciones populares en internet:\n\n\n\n\nDokuwiki\n\n\nFengOffice\n\n\nJoomla!\n\n\nWordpress\n\n\n\n\nPod\u00e9s elegir la que desees y descargarlas en el directorio ra\u00edz de tu sitio web de la siguiente manera:  \n\n\nwget http://url_de_la_aplicacion/aplicacion.zip\n\n\n\n\n\nInstalando la aplicaci\u00f3n\n\n\nTendremos que \ndescomprimir la aplicaci\u00f3n descargada en el directorio ra\u00edz de nuestro sitio\n. Luego, abriremos nuestro navegador web y visitaremos la direcci\u00f3n web \nhttp://tudominio/aplicacion\n o bien \nhttp://tuDireccionIP/aplicacion\n y seguir las instrucciones de instalaci\u00f3n. \n\n\n\n\nBase de datos\n\n\nDependiendo de la aplicaci\u00f3n web que hayas elegido, es posible que necesites crear una base de datos. Para ello, dirigite a \nhttp://tudominio/phpmyadmin\n o \nhttp://tuDireccionIP/phpmyadmin\n e ingres\u00e1 con las credenciales del usuario root. Una vez all\u00ed podr\u00e1s crear la base de datos solicitada.", 
            "title": "Ejercicios"
        }, 
        {
            "location": "/lamp/ejercicios/#ejercicio-1", 
            "text": "La empresa \"Penguin S.A.\", dispone de un servidor web dedicado y tan solo una direccion IP. La empresa necesita que su servidor web gestione diferentes sitios web, cada uno con su nombre de dominio.  Hablando con ejecutivos de la empresa, se acuerda en desplegar las siguientes plataformas webs:    Sitio oficial  Sucursal Patagonia  FrontEnd para la administraci\u00f3n de la  base de datos MySQL.    En la siguiente tabla se indican adem\u00e1s las respectivas rutas donde deber\u00e1n alojar los archivos de los sitios web.      #  Dominio  Directorio ra\u00edz (DocumentRoot)      1  penguin.net  /home/penguin/public_html    2  patagon.penguin.net  /home/patagon/public_html    3  phpmyadmin.penguin.net  /usr/share/phpmyadmin", 
            "title": "Ejercicio 1"
        }, 
        {
            "location": "/lamp/ejercicios/#instalacion-de-paquetes", 
            "text": "Deber\u00e1  instalarse un entorno LAMP  necesario para el despliegue de los sitios web.", 
            "title": "Instalaci\u00f3n de paquetes"
        }, 
        {
            "location": "/lamp/ejercicios/#creacion-de-usuarios", 
            "text": "Para poder realizar el ejercicio deber\u00e1s crear previamente los usuarios  penguin  y  patagon .", 
            "title": "Creaci\u00f3n de usuarios"
        }, 
        {
            "location": "/lamp/ejercicios/#creacion-los-directorios-raiz", 
            "text": "La acci\u00f3n deber\u00e1 realizarse para los dominios  penguin.net  y  patagon.penguin.net  tomando en cuenta los datos que figuran en el cuadro acordado con el cliente.", 
            "title": "Creaci\u00f3n los directorios ra\u00edz"
        }, 
        {
            "location": "/lamp/ejercicios/#creacion-de-contenido-web", 
            "text": "Dentro de los  directorios ra\u00edz  creados en el punto anterior (necesariamente deber\u00e1 existir una p\u00e1gina llamada index.html o index.php) y a modo de ejemplo, deber\u00e1n crearse las siguientes p\u00e1ginas:    Para  penguin.net : un archivo  index.html  con la frase \"Penguin.net - Sitio Oficial\"  Para  patagon.penguin.net , un archivo  index.php  con el siguiente contenido:    !DOCTYPE html  html  head       title Penguin S.A. /title  /head  body       h1 Penguin.Net Patagon /h1       p Sitio en construccion /p       ?php  \n\n         # Muestra la fecha y hora actual de Buenos Aires \n         ini_set ( date.timezone , America/Argentina/Buenos_Aires ); \n         echo   date ( d-m-Y (H:i A) ); \n\n     ?       /body  /html", 
            "title": "Creaci\u00f3n de contenido web"
        }, 
        {
            "location": "/lamp/ejercicios/#creacion-de-los-archivos-de-configuracion", 
            "text": "Se deben crear los archivos de configuraci\u00f3n de cada  Host Virtual  solicitado por el cliente. Tener en cuenta que para todos los casos, el administrador sera  admin@penguin.net .", 
            "title": "Creaci\u00f3n de los archivos de configuraci\u00f3n"
        }, 
        {
            "location": "/lamp/ejercicios/#resolucion-de-nombres", 
            "text": "Se debe realizar a trav\u00e9s del m\u00e9todo del archivo hosts.   Automatizaci\u00f3n de tareas  Tal vez ser\u00eda m\u00e1s practico realizar todas las acciones anteriores valiendose de un script. \u00bfTe anim\u00e1s a escribirlo?", 
            "title": "Resoluci\u00f3n de nombres"
        }, 
        {
            "location": "/lamp/ejercicios/#posibles-errores", 
            "text": "Error  Es posible que con la configuraci\u00f3n por defecto de Apache, obtengamos un  error 403 . En ese caso, realizar los pasos que se describen a continuaci\u00f3n   Para corregir dicho error, qbrimos el archivo de configuraci\u00f3n general de Apache:   sudo  nano etc/apache2/apache2.conf  Y modificamos el archivo de configuraci\u00f3n general de Apache, aproximadamente en la l\u00ednea 153 y que posee el siguiente aspecto:   Directory   /  Options  FollowSymLinks AllowOverride   None  Require   all  denied /Directory   Tendremos que modificarlo para que quede:   Directory   /  Options  FollowSymLinks AllowOverride   None  # Require all denied  /Directory", 
            "title": "Posibles errores"
        }, 
        {
            "location": "/lamp/ejercicios/#ejercicio-2", 
            "text": "Una vez que hayamos  instalado correctamente el entorno LAMP  podremos instalar en el servidor web distintas aplicaciones webs que funcionen con dicha tecnolog\u00eda (PHP y MySQL).   A continuaci\u00f3n se ofrecen distintas aplicaciones para su descarga junto con las indicaciones de instalaci\u00f3n.", 
            "title": "Ejercicio 2"
        }, 
        {
            "location": "/lamp/ejercicios/#descargando-las-aplicaciones", 
            "text": "La siguiente lista de aplicaciones se encuentra alojada en el servidor local. Son ejemplos de aplicaciones populares en internet:   Dokuwiki  FengOffice  Joomla!  Wordpress   Pod\u00e9s elegir la que desees y descargarlas en el directorio ra\u00edz de tu sitio web de la siguiente manera:    wget http://url_de_la_aplicacion/aplicacion.zip", 
            "title": "Descargando las aplicaciones"
        }, 
        {
            "location": "/lamp/ejercicios/#instalando-la-aplicacion", 
            "text": "Tendremos que  descomprimir la aplicaci\u00f3n descargada en el directorio ra\u00edz de nuestro sitio . Luego, abriremos nuestro navegador web y visitaremos la direcci\u00f3n web  http://tudominio/aplicacion  o bien  http://tuDireccionIP/aplicacion  y seguir las instrucciones de instalaci\u00f3n.    Base de datos  Dependiendo de la aplicaci\u00f3n web que hayas elegido, es posible que necesites crear una base de datos. Para ello, dirigite a  http://tudominio/phpmyadmin  o  http://tuDireccionIP/phpmyadmin  e ingres\u00e1 con las credenciales del usuario root. Una vez all\u00ed podr\u00e1s crear la base de datos solicitada.", 
            "title": "Instalando la aplicaci\u00f3n"
        }, 
        {
            "location": "/samba/", 
            "text": "Samba es un servidor para computadoras con GNU/Linux, Mac OS X o Unix que permite \nadministrar y compartir recursos en redes de computadoras con Microsoft Windows\n como:\n\n\n\n\narchivos y directorios\n\n\nimpresoras \n\n\nautenticaci\u00f3n de usuarios en dominios Active Directory.\n\n\n\n\n\n\n\n\n\n\nSe trata de una implementaci\u00f3n libre del protocolo de archivos compartidos de Microsoft Windows (antiguamente llamado \nSMB\n, renombrado luego a \nCIFS\n) y fue desarrollado originalmente para Unix por Andrew Tridgell utilizando un sniffer o capturador de tr\u00e1fico para entender el protocolo usando ingenier\u00eda inversa. \n\n\nEl nombre viene de insertar dos vocales al protocolo est\u00e1ndar que Microsoft usa para sus redes, el SMB o server message block. En un principio Samba tom\u00f3 el nombre de smbserver pero tuvieron que cambiarlo por problemas con una marca registrada. Tridgell busc\u00f3 en el diccionario de su m\u00e1quina Unix alguna palabra que incluyera las letras.", 
            "title": "\u00bfQu\u00e9 es SAMBA?"
        }, 
        {
            "location": "/samba/instalacion/", 
            "text": "Para instalar el paquete b\u00e1sico de samba, a fin iniciar un servidor de compartici\u00f3n de archivos ejecutamos:\n\n\nsudo\n apt-get install samba\n\n\n\n\n\nEl archivo de configuraci\u00f3n de Samba\n\n\nCada vez que configuramos un servicio en GNU/Linux, conviene realizar una copia de seguridad de los archivos que vayamos a modificar de manera de disponer del archivo original en caso de errores de configuraci\u00f3n. El archivo de configuraci\u00f3n de Samba es \n/etc/samba/smb.conf\n. Hacemos una copia de seguridad: \n\n\nsudo\n mv \n/etc/samba/smb.conf\n \n/etc/samba/smb.conf.original\n\n\n\n\n\n\nLlegado este punto, podemos editar directamente el archivo smb.conf o crear un nuevo archivo en blanco. Por cuestiones de claridad en la explicaci\u00f3n, nos inclinaremos por el segundo caso: \n\n\nsudo\n touch \n/etc/samba/smb.conf\n\n\n\n\n\n\nA partir de ac\u00e1 iremos modificando este \u00fanico archivo de configuraci\u00f3n.", 
            "title": "Instalaci\u00f3n"
        }, 
        {
            "location": "/samba/instalacion/#el-archivo-de-configuracion-de-samba", 
            "text": "Cada vez que configuramos un servicio en GNU/Linux, conviene realizar una copia de seguridad de los archivos que vayamos a modificar de manera de disponer del archivo original en caso de errores de configuraci\u00f3n. El archivo de configuraci\u00f3n de Samba es  /etc/samba/smb.conf . Hacemos una copia de seguridad:   sudo  mv  /etc/samba/smb.conf   /etc/samba/smb.conf.original   Llegado este punto, podemos editar directamente el archivo smb.conf o crear un nuevo archivo en blanco. Por cuestiones de claridad en la explicaci\u00f3n, nos inclinaremos por el segundo caso:   sudo  touch  /etc/samba/smb.conf   A partir de ac\u00e1 iremos modificando este \u00fanico archivo de configuraci\u00f3n.", 
            "title": "El archivo de configuraci\u00f3n de Samba"
        }, 
        {
            "location": "/samba/configuracionGeneral/", 
            "text": "Antes que nada hay que decir que \nlas opciones de configuraci\u00f3n de Samba exceden ampliamente los alcances de esta gu\u00eda\n. En los ejemplos dados a continuaci\u00f3n se explica como: \n\n\n\n\nDotar a cada usuario del sistema de su propia carpeta almacenada en el servidor\n\n\nCompartir una carpeta entre los usuarios del sistema\n\n\nCompartir una carpeta de manera an\u00f3nima en la red\n\n\n\n\nModificando el archivo de configuraci\u00f3n de Samba\n\n\nsudo\n nano \n/etc/samba/smb.conf\n\n\n\n\n\n\nY procedemos al incluir los datos de configuraci\u00f3n del servidor:\n\n\n[global]\n\n    \n# Grupo de trabajo\n\n    \nworkgroup\n = WORKGROUP\n\n    \n# Nombre visible del servidor en la red\n\n    \nserver\n string = Servidor Samba %v en %L\n\n    \n# Nombre corto del servidor en la red NetBIOS\n\n    \nnetbios\n name = SambaUbuntu\n\n    \n# Acceso a Samba s\u00f3lo para usuarios\n\n    \nsecurity\n = \nuser\n\n\n    \n# Las solicitudes de conexi\u00f3n con clave incorrecta se rechazan.\n\n    \n# En ese caso, los usuarios no ser\u00e1n tratados como invitados. \n\n    \nmap\n to guest = never\n\n    \n# Desactivar el servidor de nombres, \u00fatil si \n\n    \n# Samba act\u00faa como servidor Wins.  \n\n    \ndns\n proxy = no\n\n\n\n\n\n\n\nGrupo de trabajo\nReemplazar \nWORKGROUP\n por el nombre de \ngrupo de trabajo\n de los clientes \nWindows\n. Si no conoc\u00e9s el nombre de trabajo en el que se encuentra un cliente, ejecut\u00e1 en la terminal de Windows (cmd):\n\n\nnet config workstation\n\n\n\n\n\n\nCerramos el archivo habiendo guardado los cambios y reiniciamos el servicio Samba:\n\n\nsudo\n service smbd restart\n\n\n\n\n\n\n\nSecciones\n\n\nEl archivo de configuraci\u00f3n de Samba est\u00e1 dividido en secciones que comienzan con el nombre de la secci\u00f3n encerrada entre corchetes. Ninguna secci\u00f3n es obligatoria aunque las m\u00e1s comunes son: \n[global]\n en la que se determina el comportamiento general (global) del servidor Samba, \n[homes]\n que permite compartir las carpetas \nhome\n de los usuarios de GNU/LInux en Windows y \n[printers]\n que permite compartir impresoras en la red. \n\n\nSin embargo, se pueden crear secciones personalizadas, por ejemplo \n[profesores]\n y \n[alumnos]\n, etc. y personalizar para cada una, las opciones de compartici\u00f3n.", 
            "title": "Configuraci\u00f3n general"
        }, 
        {
            "location": "/samba/configuracionGeneral/#modificando-el-archivo-de-configuracion-de-samba", 
            "text": "sudo  nano  /etc/samba/smb.conf   Y procedemos al incluir los datos de configuraci\u00f3n del servidor:  [global] \n     # Grupo de trabajo \n     workgroup  = WORKGROUP\n\n     # Nombre visible del servidor en la red \n     server  string = Servidor Samba %v en %L\n\n     # Nombre corto del servidor en la red NetBIOS \n     netbios  name = SambaUbuntu\n\n     # Acceso a Samba s\u00f3lo para usuarios \n     security  =  user \n\n     # Las solicitudes de conexi\u00f3n con clave incorrecta se rechazan. \n     # En ese caso, los usuarios no ser\u00e1n tratados como invitados.  \n     map  to guest = never\n\n     # Desactivar el servidor de nombres, \u00fatil si  \n     # Samba act\u00faa como servidor Wins.   \n     dns  proxy = no   Grupo de trabajo Reemplazar  WORKGROUP  por el nombre de  grupo de trabajo  de los clientes  Windows . Si no conoc\u00e9s el nombre de trabajo en el que se encuentra un cliente, ejecut\u00e1 en la terminal de Windows (cmd):  net config workstation    Cerramos el archivo habiendo guardado los cambios y reiniciamos el servicio Samba:  sudo  service smbd restart   Secciones  El archivo de configuraci\u00f3n de Samba est\u00e1 dividido en secciones que comienzan con el nombre de la secci\u00f3n encerrada entre corchetes. Ninguna secci\u00f3n es obligatoria aunque las m\u00e1s comunes son:  [global]  en la que se determina el comportamiento general (global) del servidor Samba,  [homes]  que permite compartir las carpetas  home  de los usuarios de GNU/LInux en Windows y  [printers]  que permite compartir impresoras en la red.   Sin embargo, se pueden crear secciones personalizadas, por ejemplo  [profesores]  y  [alumnos] , etc. y personalizar para cada una, las opciones de compartici\u00f3n.", 
            "title": "Modificando el archivo de configuraci\u00f3n de Samba"
        }, 
        {
            "location": "/samba/gestionUsuarios/", 
            "text": "Gesti\u00f3n de usuarios\n\n\nPara compartir carpetas entre equipos con \nWindows\n y \nGNU/Linux\n, tendremos que configurar usuarios en ambos sistemas.  \n\n\n\n\nSobre los usuarios\nEs recomendable, aunque no excluyendete,  disponer de \nlos mismos usuarios\n tanto en el servidor \nSAMBA\n, como en \nWindows\n para un correcto funcionamiento del servicio.\n\n\n\n\n\n\nCreaci\u00f3n de usuarios en GNU/Linux\n\n\nA continuaci\u00f3n, repasaremos el modo de creaci\u00f3n de usuarios en GNU/Linux:\n\n\nsudo adduser usuario\n\n\n\n\n\nDonde \nusuario\n es el nombre de usuario que deseamos crear. El mismo nombre de usuario debe existir en Windows. Recordar que en GNU/Linux, los nombres de usuario son sensibles a letras may\u00fasculas y min\u00fasculas. \n\n\nCreaci\u00f3n de grupos en GNU/Linux\n\n\nCuando creamos un usuario en GNU/Linux, autom\u00e1ticamente \nel sistema crea un grupo con el mismo nombre que el usuario\n. Sin embargo, podemos agregar los grupos que querramos de la siguiente manera: \n\n\nsudo addgroup nuevoGrupo\n\n\n\n\n\nDonde \nnuevoGrupo\n es el nombre de grupo que deseamos crear. \n\n\nAgregando usuarios a un grupo en GNU/Linux\n\n\nPodemos modificar o agregar los grupos a los que pertenece el usuario de la siguiente manera: \n\n\nsudo usermod -G grupo1,grupo2 usuario\n\n\n\n\n\nDonde \nusermod\n es el comando para agregar al usuario llamado \nusuario\n a los grupos \ngrupo1\n y \ngrupo2\n  \n\n\n\n\nGestionando usuarios y grupos de manera simult\u00e1nea\nEs posible crear un \nusuario\n y \nagregarlo a un grupo\n determinado por nosotros, \nde manera simult\u00e1nea\n:\n\n\nsudo useradd usuario -m -G users\n\n\nPero si usamos este m\u00e9todo, deberemos configurar la contrase\u00f1a del usuario en un segundo paso: \n\n\nsudo passwd usuario\n\n\n\n\n\n\nVerificando a que grupos pertenece un usuario en GNU/Linux\n\n\nPara verificar el/los grupo/s a los que pertenece el usuario, ejecutamos: \n\n\nsudo\n id usuario\n\n\n\n\n\nDonde \nusuario\n, es el usuario que deseamos investigar. \n\n\nAgregando usuarios al servidor SAMBA\n\n\nLos usuarios ya fueron creados en GNU/Linux. S\u00f3lo resta agregarlos al servidor SAMBA de la siguiente manera: \n\n\nsudo\n smbpasswd -a usuario\n\n\n\n\n\nDonde \nusuario\n es el usuario al que deseamos agregar a SAMBA. El sistema nos solicitar\u00e1 la contrase\u00f1a del usuario en SAMBA que deber\u00e1 ser la misma que en Windows.\n\n\nCreaci\u00f3n de usuario en Windows 7\n\n\nPara el correcto funcionamiento de SAMBA es recomendable que existan en Windows los mismos usuarios que en el servidor de compartici\u00f3n. En otro tutorial se explica como crear y gestionar los usuarios en GNU/Linux. A continuaci\u00f3n, se detallan los pasos para la creaci\u00f3n de usuarios en Windows 7. \n\n\nPaso 0\n\n\n\n\nPaso 1\n\n\n\n\nPaso 2\n\n\n\n\nPaso 3\n\n\n\n\nPaso 4\n\n\n\n\nPaso 5\n\n\n\n\nPaso 6\n\n\n\n\n\n\nSobre la creaci\u00f3n de usuarios en Windows\n\n\nGNU/Linux es un sistema \ncase sensitive\n, es decir, discrimina las may\u00fasculas de las min\u00fasculas. Por ejemplo, \njuan\n y \nJuan\n son vistos por el sistema como dos usuarios diferentes. Hay que tener en cuenta este punto al crear los usuarios en Windows, ya que deber\u00e1n llamarse de igual manera que en el servidor GNU/Linux.", 
            "title": "Gesti\u00f3n de usuarios"
        }, 
        {
            "location": "/samba/gestionUsuarios/#gestion-de-usuarios", 
            "text": "Para compartir carpetas entre equipos con  Windows  y  GNU/Linux , tendremos que configurar usuarios en ambos sistemas.     Sobre los usuarios Es recomendable, aunque no excluyendete,  disponer de  los mismos usuarios  tanto en el servidor  SAMBA , como en  Windows  para un correcto funcionamiento del servicio.", 
            "title": "Gesti\u00f3n de usuarios"
        }, 
        {
            "location": "/samba/gestionUsuarios/#creacion-de-usuarios-en-gnulinux", 
            "text": "A continuaci\u00f3n, repasaremos el modo de creaci\u00f3n de usuarios en GNU/Linux:  sudo adduser usuario  Donde  usuario  es el nombre de usuario que deseamos crear. El mismo nombre de usuario debe existir en Windows. Recordar que en GNU/Linux, los nombres de usuario son sensibles a letras may\u00fasculas y min\u00fasculas.", 
            "title": "Creaci\u00f3n de usuarios en GNU/Linux"
        }, 
        {
            "location": "/samba/gestionUsuarios/#creacion-de-grupos-en-gnulinux", 
            "text": "Cuando creamos un usuario en GNU/Linux, autom\u00e1ticamente  el sistema crea un grupo con el mismo nombre que el usuario . Sin embargo, podemos agregar los grupos que querramos de la siguiente manera:   sudo addgroup nuevoGrupo  Donde  nuevoGrupo  es el nombre de grupo que deseamos crear.", 
            "title": "Creaci\u00f3n de grupos en GNU/Linux"
        }, 
        {
            "location": "/samba/gestionUsuarios/#agregando-usuarios-a-un-grupo-en-gnulinux", 
            "text": "Podemos modificar o agregar los grupos a los que pertenece el usuario de la siguiente manera:   sudo usermod -G grupo1,grupo2 usuario  Donde  usermod  es el comando para agregar al usuario llamado  usuario  a los grupos  grupo1  y  grupo2      Gestionando usuarios y grupos de manera simult\u00e1nea Es posible crear un  usuario  y  agregarlo a un grupo  determinado por nosotros,  de manera simult\u00e1nea :  sudo useradd usuario -m -G users  Pero si usamos este m\u00e9todo, deberemos configurar la contrase\u00f1a del usuario en un segundo paso:   sudo passwd usuario", 
            "title": "Agregando usuarios a un grupo en GNU/Linux"
        }, 
        {
            "location": "/samba/gestionUsuarios/#verificando-a-que-grupos-pertenece-un-usuario-en-gnulinux", 
            "text": "Para verificar el/los grupo/s a los que pertenece el usuario, ejecutamos:   sudo  id usuario  Donde  usuario , es el usuario que deseamos investigar.", 
            "title": "Verificando a que grupos pertenece un usuario en GNU/Linux"
        }, 
        {
            "location": "/samba/gestionUsuarios/#agregando-usuarios-al-servidor-samba", 
            "text": "Los usuarios ya fueron creados en GNU/Linux. S\u00f3lo resta agregarlos al servidor SAMBA de la siguiente manera:   sudo  smbpasswd -a usuario  Donde  usuario  es el usuario al que deseamos agregar a SAMBA. El sistema nos solicitar\u00e1 la contrase\u00f1a del usuario en SAMBA que deber\u00e1 ser la misma que en Windows.", 
            "title": "Agregando usuarios al servidor SAMBA"
        }, 
        {
            "location": "/samba/gestionUsuarios/#creacion-de-usuario-en-windows-7", 
            "text": "Para el correcto funcionamiento de SAMBA es recomendable que existan en Windows los mismos usuarios que en el servidor de compartici\u00f3n. En otro tutorial se explica como crear y gestionar los usuarios en GNU/Linux. A continuaci\u00f3n, se detallan los pasos para la creaci\u00f3n de usuarios en Windows 7.", 
            "title": "Creaci\u00f3n de usuario en Windows 7"
        }, 
        {
            "location": "/samba/gestionUsuarios/#paso-0", 
            "text": "", 
            "title": "Paso 0"
        }, 
        {
            "location": "/samba/gestionUsuarios/#paso-1", 
            "text": "", 
            "title": "Paso 1"
        }, 
        {
            "location": "/samba/gestionUsuarios/#paso-2", 
            "text": "", 
            "title": "Paso 2"
        }, 
        {
            "location": "/samba/gestionUsuarios/#paso-3", 
            "text": "", 
            "title": "Paso 3"
        }, 
        {
            "location": "/samba/gestionUsuarios/#paso-4", 
            "text": "", 
            "title": "Paso 4"
        }, 
        {
            "location": "/samba/gestionUsuarios/#paso-5", 
            "text": "", 
            "title": "Paso 5"
        }, 
        {
            "location": "/samba/gestionUsuarios/#paso-6", 
            "text": "Sobre la creaci\u00f3n de usuarios en Windows  GNU/Linux es un sistema  case sensitive , es decir, discrimina las may\u00fasculas de las min\u00fasculas. Por ejemplo,  juan  y  Juan  son vistos por el sistema como dos usuarios diferentes. Hay que tener en cuenta este punto al crear los usuarios en Windows, ya que deber\u00e1n llamarse de igual manera que en el servidor GNU/Linux.", 
            "title": "Paso 6"
        }, 
        {
            "location": "/samba/comparticionUsuario/", 
            "text": "Es posible que necesitamos que \ncada usuario del sistema sea capaz de leer y escribir en su directorio de trabajo v\u00eda \nSamba**, seg\u00fan el siguiente esquema: \n\n\n\n\n\n\nPara ello agregamos al archivo de configuraci\u00f3n \n/etc/samba/smb.conf\n debajo del bloque \n[global]\n:\n\n\n[homes]\n\n    \n# Comentario\n\n    \ncomment\n = Carpeta personal de cada usuario\n\n    \n# La variable %S es reemplazada por el nombre \n\n    \n# del usuario que inicia sesi\u00f3n\n\n    \nvalid\n users = %S\n\n    \n# \u00bfSe puede escribir dentro de la carpeta?\n\n    \nwritable\n = yes\n\n    \n# \u00bfLa carpeta ser\u00e1 visible por el resto de los usuarios?\n\n    \nbrowseable\n = no\n\n\n\n\n\nLuego, reiniciamos Samba (lo haremos cada vez que modifiquemos el archivo de configuraci\u00f3n):\n\n\nsudo\n service smbd restart", 
            "title": "Carpeta de usuario"
        }, 
        {
            "location": "/samba/comparticionGrupo/", 
            "text": "En otras ocasiones, tal vez resulte pr\u00e1ctico \ncompartir una carpeta entre los usuarios que pertenecen a un grupo determinado\n. \n\n\nCreando la carpeta a compartir\n\n\nDebemos crear la carpeta en cualquier lugar (p.e. dentro de la carpeta \n/opt\n)\n\n\nmkdir\n -p carpetaCompartida\n\n\n\n\n\nModificando el usuario y grupo propietario de la carpeta\n\n\nchown\n -R usuario:grupo carpetaCompartida\n\n\n\n\n\nDonde:\n\n\n\n\nusuario\n es el \nusuario due\u00f1o\n de la carpeta compartida (generalmente es el usuario \nroot\n) y \n\n\ngrupo\n es el \ngrupo due\u00f1o\n al que deseamos dar permiso sobre la carpeta compardida.\n\n\n\n\nPor ejemplo, si deseamos permitir que usuarios de un hipot\u00e9tico grupo llamado \nventas\n tenga acceso a la carpeta imaginaria \nrecursos\n ejecutamos: \n\n\nchown\n -R root:ventas recursos\n\n\n\n\n\nModificando los permisos de la carpeta\n\n\nY finalmente, modificamos los permisos de la carpeta: \n\n\nchmod\n -R ug+rwx,o+rx-w carpetaCompartida\n\n\n\n\n\nO, lo que es lo mismo: \n\n\nchmod\n -R \n775\n carpetaCompartida\n\n\n\n\n\nSiguiendo con el ejemplo del apartado anterior, escribir\u00edamos: \n\n\nchmod\n -R \n775\n recursos\n\n\n\n\n\nDe esta manera estar\u00edamos dando permiso total de acceso al usuario y grupo due\u00f1os de la carpeta \nrecursos\n y permisos de lectura y ejecuci\u00f3n al resto de los usuarios del sistema. \n\n\nModificando el archivo de configuraci\u00f3n de Samba\n\n\nEn el siguiente ejemplo, se comparte una carpeta llamada \nventas\n que ser\u00e1 accesible y escribible por todos los miembros del grupo \nfacturacion\n (el bloque siguiente de c\u00f3digo se deber\u00e1 agregar en el archivo \n/etc/samba/smb.conf\n):\n\n\n[ventas]\n\n    \n# Comentario\n\n    \ncomment\n = Carpeta compartida entre los usuarios del grupo facturacion\n\n    \n# Carpeta a compartir\n\n    \npath\n = \n/opt/ventas\n\n\n    \n# Damos permiso de acceso a todos los usuarios \n\n    \n# pertenecientes al grupo llamado \nfacturacion\n\n    \nvalid\n users = @facturacion\n\n    \n# Fuerza el grupo con permisos de acceso\n\n    \nforce\n \ngroup\n = facturacion\n\n    \n# \u00bfSe puede escribir dentro de la carpeta?\n\n    \nwritable\n = yes\n\n    \n# \u00bfLa carpeta ser\u00e1 visible por el resto de los usuarios?\n\n    \nbrowseable\n = no\n\n\n\n\n\n\n\nUsuarios\nEl la directiva \nvalid users\n podr\u00edamos haber indicado el nombre de uno o varios usuarios:\n\n\nforce users = juan, pedro, jorge\n\n\nO incluir los usuarios pertenecientes a distintos grupos: \n\n\nforce users = @ventas, @facturacion\n\n\nLo indicado vale tambi\u00e9n para la directiva \nforce group\n que es para los grupos. \n\n\n\n\n\n\nReiniciando el servidor\n\n\nRreiniciamos Samba para que el servidor haga efectivos los cambios:\n\n\nsudo\n service smbd restart", 
            "title": "Carpeta de grupo"
        }, 
        {
            "location": "/samba/comparticionGrupo/#creando-la-carpeta-a-compartir", 
            "text": "Debemos crear la carpeta en cualquier lugar (p.e. dentro de la carpeta  /opt )  mkdir  -p carpetaCompartida", 
            "title": "Creando la carpeta a compartir"
        }, 
        {
            "location": "/samba/comparticionGrupo/#modificando-el-usuario-y-grupo-propietario-de-la-carpeta", 
            "text": "chown  -R usuario:grupo carpetaCompartida  Donde:   usuario  es el  usuario due\u00f1o  de la carpeta compartida (generalmente es el usuario  root ) y   grupo  es el  grupo due\u00f1o  al que deseamos dar permiso sobre la carpeta compardida.   Por ejemplo, si deseamos permitir que usuarios de un hipot\u00e9tico grupo llamado  ventas  tenga acceso a la carpeta imaginaria  recursos  ejecutamos:   chown  -R root:ventas recursos", 
            "title": "Modificando el usuario y grupo propietario de la carpeta"
        }, 
        {
            "location": "/samba/comparticionGrupo/#modificando-los-permisos-de-la-carpeta", 
            "text": "Y finalmente, modificamos los permisos de la carpeta:   chmod  -R ug+rwx,o+rx-w carpetaCompartida  O, lo que es lo mismo:   chmod  -R  775  carpetaCompartida  Siguiendo con el ejemplo del apartado anterior, escribir\u00edamos:   chmod  -R  775  recursos  De esta manera estar\u00edamos dando permiso total de acceso al usuario y grupo due\u00f1os de la carpeta  recursos  y permisos de lectura y ejecuci\u00f3n al resto de los usuarios del sistema.", 
            "title": "Modificando los permisos de la carpeta"
        }, 
        {
            "location": "/samba/comparticionGrupo/#modificando-el-archivo-de-configuracion-de-samba", 
            "text": "En el siguiente ejemplo, se comparte una carpeta llamada  ventas  que ser\u00e1 accesible y escribible por todos los miembros del grupo  facturacion  (el bloque siguiente de c\u00f3digo se deber\u00e1 agregar en el archivo  /etc/samba/smb.conf ):  [ventas] \n     # Comentario \n     comment  = Carpeta compartida entre los usuarios del grupo facturacion\n\n     # Carpeta a compartir \n     path  =  /opt/ventas \n\n     # Damos permiso de acceso a todos los usuarios  \n     # pertenecientes al grupo llamado  facturacion \n     valid  users = @facturacion\n\n     # Fuerza el grupo con permisos de acceso \n     force   group  = facturacion\n\n     # \u00bfSe puede escribir dentro de la carpeta? \n     writable  = yes\n\n     # \u00bfLa carpeta ser\u00e1 visible por el resto de los usuarios? \n     browseable  = no   Usuarios El la directiva  valid users  podr\u00edamos haber indicado el nombre de uno o varios usuarios:  force users = juan, pedro, jorge  O incluir los usuarios pertenecientes a distintos grupos:   force users = @ventas, @facturacion  Lo indicado vale tambi\u00e9n para la directiva  force group  que es para los grupos.", 
            "title": "Modificando el archivo de configuraci\u00f3n de Samba"
        }, 
        {
            "location": "/samba/comparticionGrupo/#reiniciando-el-servidor", 
            "text": "Rreiniciamos Samba para que el servidor haga efectivos los cambios:  sudo  service smbd restart", 
            "title": "Reiniciando el servidor"
        }, 
        {
            "location": "/samba/comparticionInvitados/", 
            "text": "Por \u00faltimo, si necesitamos que \ncualquier usuario de la red (incluso si no es un usuario Samba) pueda acceder as una carpeta compartida\n, daremos los siguientes pasos: \n\n\nPrimeramente tendremos que crear la carpeta a compartir: \n\n\nmkdir\n -p \n/opt/invitados\n\n\n\n\n\n\nLuego, modificar la propiedad de la carpeta: \n\n\nchown\n -R nobody:nogroup \n/opt/invitados\n\n\n\n\n\n\nY los permisos:  \n\n\nchmod\n -R ugo+rwx \n/opt/invitados\n \n\n\n\n\n\nO el comando equivalente:\n\n\nchmod\n -R \n777\n \n/opt/invitados\n \n\n\n\n\n\nPor \u00faltimo, tendremos que agregar al archivo de configuraci\u00f3n principal de Samba (\n/etc/samba/smb.conf\n) el siguiente bloque de c\u00f3digo: \n\n\n[invitados]\n\n\n    \n# Carpeta a compartir\n\n    \npath\n = \n/opt/invitados\n\n\n    \n# Todos los usuarios de Windows\n\n    \nforce\n \ngroup\n = users\n\n    \n# \u00bfLa carpeta ser\u00e1 visible por el resto de los usuarios?\n\n    \nbrowsable\n = yes\n\n    \n# \u00bfSe puede escribir dentro de la carpeta?\n\n    \nwritable\n = yes\n\n    \n# Cualquier usuario sin contrase\u00f1a tiene permiso de acceso\n\n    \nguest\n ok = yes\n\n\n\n\n\n\n\nAtenci\u00f3n\nCualquier usuario del sistema Windows podr\u00e1 leer y escribir en esta carpeta, a\u00fan cuando no posea una contrase\u00f1a para el inicio de sesi\u00f3n en Windows ni est\u00e9 registrado en el servidor Samba.  \n\n\n\n\n\n\nFinalmente, reiniciamos Samba para que el sistema tome los cambios:\n\n\nsudo\n service smbd restart", 
            "title": "Carpeta de invitados"
        }, 
        {
            "location": "/samba/clientesWindows/", 
            "text": "Si todo qued\u00f3 correctamente configurado, podremos acceder a los recursos compartidos por el servidor Samba desde una m\u00e1quina con el sistema Windows.\n\n\nAccediendo a las carpetas compartidas de manera temporal\n\n\nPara ello, tendremos que abrir con el explorador de Windows la direcci\u00f3n IP del servidor Samba (*\nusar barra invertida *\n), de la siguiente manera: \n\n\n\n\n\n\nNote\nEl acceso a las carpetas compartidas \nno es permanente y se perder\u00e1 cuando reiniciemos la maquina Windows\n. Para que los recursos compartidos est\u00e9n disponibles cuando inicie el sistema, segu\u00ed las instrucciones que se detallan a continuaci\u00f3n.\n\n\n\n\n\n\nAccediendo a las carpetas compartidas de forma permanente\n\n\nAbrimos el \nExplorador de Windows\n y hacemos clic derecho en \nEquipo\n y seleccionaremos la opci\u00f3n \"Conectar a una unidad de red\" \n\n\n\n\nLuego ingresamos la \ndirecci\u00f3n IP\n o el \nnombre del dominio\n del servidor Samba seguido del nombre del \nnombre de la carpeta compartida\n que queremos montar (usar barras invertidas):\n\n\n\n\nFinalmente veremos la carpeta compartida y que estar\u00e1 disponible cada vez que iniciemos sesi\u00f3n:\n\n\n\n\nRepetiremos el procedimiento con cada carpeta alojada en servidor Samba a la que deseemos acceder y para la cual poseamos los permisos de lectura y escritura correspondientes:\n\n\n\n\nNota: en el ejemplo, se inici\u00f3 sesi\u00f3n en Windows con el usuario de Samba/Windows llamado \nprueba\n. La unidad de red con su nombre pertenece a dicho usuaruio.", 
            "title": "Clientes Windows"
        }, 
        {
            "location": "/samba/clientesWindows/#accediendo-a-las-carpetas-compartidas-de-manera-temporal", 
            "text": "Para ello, tendremos que abrir con el explorador de Windows la direcci\u00f3n IP del servidor Samba (* usar barra invertida * ), de la siguiente manera:     Note El acceso a las carpetas compartidas  no es permanente y se perder\u00e1 cuando reiniciemos la maquina Windows . Para que los recursos compartidos est\u00e9n disponibles cuando inicie el sistema, segu\u00ed las instrucciones que se detallan a continuaci\u00f3n.", 
            "title": "Accediendo a las carpetas compartidas de manera temporal"
        }, 
        {
            "location": "/samba/clientesWindows/#accediendo-a-las-carpetas-compartidas-de-forma-permanente", 
            "text": "Abrimos el  Explorador de Windows  y hacemos clic derecho en  Equipo  y seleccionaremos la opci\u00f3n \"Conectar a una unidad de red\"    Luego ingresamos la  direcci\u00f3n IP  o el  nombre del dominio  del servidor Samba seguido del nombre del  nombre de la carpeta compartida  que queremos montar (usar barras invertidas):   Finalmente veremos la carpeta compartida y que estar\u00e1 disponible cada vez que iniciemos sesi\u00f3n:   Repetiremos el procedimiento con cada carpeta alojada en servidor Samba a la que deseemos acceder y para la cual poseamos los permisos de lectura y escritura correspondientes:   Nota: en el ejemplo, se inici\u00f3 sesi\u00f3n en Windows con el usuario de Samba/Windows llamado  prueba . La unidad de red con su nombre pertenece a dicho usuaruio.", 
            "title": "Accediendo a las carpetas compartidas de forma permanente"
        }, 
        {
            "location": "/samba/ejercicios/", 
            "text": "Ejercicio 1\n\n\n\n\nCre\u00e1 los siguientes usuarios: \nuno\n y \ndos\n. \n\n\nCre\u00e1 una carpeta compartida para cada usuario, la cual, s\u00f3lo pueda ser accedida por su due\u00f1o. \n\n\n\n\nEjercicio 2\n\n\nLa pyme ficticia \"El Trigal\" elabora diferentes tipos de panificados. Su personal es peque\u00f1o y los mismos comparten carpetas seg\u00fan su \u00e1rea de desempe\u00f1o: \n\n\n\n\n\n\n\n\nUsuario\n\n\n\u00c1rea de desempe\u00f1o\n\n\nAcceso\n\n\n\n\n\n\n\n\n\n\njose\n\n\nGerencia\n\n\nA la carpeta \ngerencia\n y a cualquier carpeta\n\n\n\n\n\n\nsol\n\n\nAdministracion\n\n\nA la carpeta compartida \nadministracion\n y a la carpeta \npublica\n\n\n\n\n\n\nmia\n\n\nAdministracion\n\n\nA la carpeta compartida \nadministracion\n y a la carpeta \npublica\n\n\n\n\n\n\npedro\n\n\nTaller\n\n\nA la carpeta compartida \ntaller\n y a la carpeta \npublica\n\n\n\n\n\n\nroberto\n\n\nTaller\n\n\nA la carpeta compartida \ntaller\n y a la carpeta \npublica\n\n\n\n\n\n\njuan\n\n\nTaller\n\n\nA la carpeta compartida \ntaller\n y a la carpeta \npublica\n\n\n\n\n\n\n\n\nProcedimiento para resolver el ejercicio\n\n\nEn GNU/Linux\n\n\n\n\nInstalando Samba\n\n\nCreando usuarios\n\n\nCreando grupos\n\n\nAgregando usuarios a los grupos\n\n\nAgresando usuarios a Samba\n\n\nCreando carpetas\n\n\nCambiando el usuario y grupo due\u00f1o de la carpeta\n\n\nCambiando los permisos de las carpeta\n\n\nConfiguraci\u00f3n de Samba para carpeta grupal\n\n\nConfiguraci\u00f3n de Samba para carpeta an\u00f3nima\n\n\nReiniciando el servidor Samba\n\n\n\n\nEn Windows\n\n\n\n\nCreando usuarios\n\n\nVerfificando carpetas compartidas", 
            "title": "Ejercicios"
        }, 
        {
            "location": "/samba/ejercicios/#ejercicio-1", 
            "text": "Cre\u00e1 los siguientes usuarios:  uno  y  dos .   Cre\u00e1 una carpeta compartida para cada usuario, la cual, s\u00f3lo pueda ser accedida por su due\u00f1o.", 
            "title": "Ejercicio 1"
        }, 
        {
            "location": "/samba/ejercicios/#ejercicio-2", 
            "text": "La pyme ficticia \"El Trigal\" elabora diferentes tipos de panificados. Su personal es peque\u00f1o y los mismos comparten carpetas seg\u00fan su \u00e1rea de desempe\u00f1o:      Usuario  \u00c1rea de desempe\u00f1o  Acceso      jose  Gerencia  A la carpeta  gerencia  y a cualquier carpeta    sol  Administracion  A la carpeta compartida  administracion  y a la carpeta  publica    mia  Administracion  A la carpeta compartida  administracion  y a la carpeta  publica    pedro  Taller  A la carpeta compartida  taller  y a la carpeta  publica    roberto  Taller  A la carpeta compartida  taller  y a la carpeta  publica    juan  Taller  A la carpeta compartida  taller  y a la carpeta  publica", 
            "title": "Ejercicio 2"
        }, 
        {
            "location": "/samba/ejercicios/#procedimiento-para-resolver-el-ejercicio", 
            "text": "En GNU/Linux   Instalando Samba  Creando usuarios  Creando grupos  Agregando usuarios a los grupos  Agresando usuarios a Samba  Creando carpetas  Cambiando el usuario y grupo due\u00f1o de la carpeta  Cambiando los permisos de las carpeta  Configuraci\u00f3n de Samba para carpeta grupal  Configuraci\u00f3n de Samba para carpeta an\u00f3nima  Reiniciando el servidor Samba   En Windows   Creando usuarios  Verfificando carpetas compartidas", 
            "title": "Procedimiento para resolver el ejercicio"
        }, 
        {
            "location": "/icecast/", 
            "text": "Servidor de streaming con Icecast\n\n\nIcecast\n es un servidor de streaming multimedia (audio y video) que soporta los formatos \nOgg Vorbis\n y \nTheora\n, \nOpus\n, \nWebM\n y \nMP3\n. \nEs accesible desde un navegador web por lo que cualquier usuario se puede conectar a nuestra PC y escuchar los contenidos que emitamos en tiempo real, es decir que podemos tener nuestra propia radio por internet.\n\n\n\n\nIcecast2\n necesita lo que se denomina un \ncliente streaming\n que le entregue contenidos para que funcione. Estos contenidos pueden ser archivos ubicados en una carpeta en la PC, un reproductor de CD, un micr\u00f3fono conectado a la tarjeta de sonido, etc.", 
            "title": "\u00bfQu\u00e9 es Icecast?"
        }, 
        {
            "location": "/icecast/#servidor-de-streaming-con-icecast", 
            "text": "Icecast  es un servidor de streaming multimedia (audio y video) que soporta los formatos  Ogg Vorbis  y  Theora ,  Opus ,  WebM  y  MP3 . \nEs accesible desde un navegador web por lo que cualquier usuario se puede conectar a nuestra PC y escuchar los contenidos que emitamos en tiempo real, es decir que podemos tener nuestra propia radio por internet.   Icecast2  necesita lo que se denomina un  cliente streaming  que le entregue contenidos para que funcione. Estos contenidos pueden ser archivos ubicados en una carpeta en la PC, un reproductor de CD, un micr\u00f3fono conectado a la tarjeta de sonido, etc.", 
            "title": "Servidor de streaming con Icecast"
        }, 
        {
            "location": "/icecast/instalacion/", 
            "text": "Instalamos \nicecast2\n y \nc\u00f3decs para manejo de formatos de audio y video libres\n. Nos vamos a una terminal y tecleamos:\n\n\nsudo apt-get install icecast2 vorbis-tools ffmpeg2theora oggfwd\n\n\n\n\n\nAl instalar icecast, nos aparecer\u00e1 una pantalla como la que sigue: \n\n\n\n\nNo hay que alarmarse. Respondemos que \nNO\n ya que vamos a configurar el servicio en el paso siguiente.", 
            "title": "Instalaci\u00f3n"
        }, 
        {
            "location": "/icecast/inicializacion/", 
            "text": "El servidor icecast viene deshabilitado por defecto, aunque lo hayamos instalado. Una vez instalado, para ponerlo a funcionar debemos editar el archivo ''/etc/default/icecast2''. Es decir: \n\n\nsudo nano /etc/default/icecast2\n\n\n\n\n\nY luego, al pie del arcivo, modificamos el valor de la variable ENABLE, que por defecto es \nfalse\n a \ntrue\n. Debe quedarnos as\u00ed:\n\n\nENABLE\n=\ntrue\n\n\n\n\n\n\nReiniciando el servidor\n\n\nPara que los cambios efectuados tengan efecto, tendremos que reiniciar el servidor: \n\n\nservice icecast2 restart\n\n\n\n\n\nY comprobar, finalmente, el estado actual del servidor: \n\n\nservice icecast2 status", 
            "title": "Inicializando el servidor"
        }, 
        {
            "location": "/icecast/inicializacion/#reiniciando-el-servidor", 
            "text": "Para que los cambios efectuados tengan efecto, tendremos que reiniciar el servidor:   service icecast2 restart  Y comprobar, finalmente, el estado actual del servidor:   service icecast2 status", 
            "title": "Reiniciando el servidor"
        }, 
        {
            "location": "/icecast/configuracionGeneral/", 
            "text": "Icecast2 viene con los archivos de configuraci\u00f3n ubicados en \n/etc/icecast2\n. Podemos modificar las opciones del servidor editando el archivo \n/etc/icecast2/icecast.xml\n. \n\n\nUsuarios y contrase\u00f1as\n\n\nBuscamos la secci\u00f3n \nauthentication\n: \n\n\nauthentication\n\n\n    \n!--\n \nSources log in with username \nsource\n --\n\n        \nsource-password\nhackme\n/source-password\n\n\n    \n!--\n \nRelays log in username \nrelay\n --\n\n        \nrelay-password\nhackme\n/relay-password\n\n\n        \n!--\n \nAdmin logs in with the username given below --\n\n        \nadmin-user\nadmin\n/admin-user\n\n        \nadmin-password\nhackme\n/admin-password\n\n\n\n/authentication\n\n\n\n\n\n\nDonde tendremos que modificar como m\u00ednimo, los valores \nhackme\n por otros que deseemos. \n\n\n\n\n\n\n\n\nEtiqueta\n\n\nExplicaci\u00f3n\n\n\n\n\n\n\n\n\n\n\nsource-password\n\n\nContrase\u00f1a del usuario \nsource\n, utilizado por defecto para trasmitir contenido.\n\n\n\n\n\n\nrelay-password\n\n\nContrase\u00f1a del usuario \nrelay\n. \u00datil en caso de habilitar un servidor de streaming secundario.\n\n\n\n\n\n\nadmin-user\n\n\nNombre del usuario administrador (panel de administraci\u00f3n web).\n\n\n\n\n\n\nadmin-password\n\n\nContrase\u00f1a del usuario administrador (panel de administraci\u00f3n web).\n\n\n\n\n\n\n\n\nDirecci\u00f3n del servidor\n\n\nBuscamos la secci\u00f3n \nhostname\n y colocamos la \ndirecci\u00f3n IP\n o \nnombre de dominio\n de nuestro servidor de streaming. A continuaci\u00f3n, dos ejemplos de configuraci\u00f3n (ficticios):\n\n\nhostname\nhttp://www\n.\nmiservidor\n.\ncom\n/hostname\n\n\n\n\n\n\nO bien, si disponemos de la direcci\u00f3n IP del servidor\n\n\nhostname\nhttp://192\n.\n168\n.\n0\n.\n232\n/hostname\n\n\n\n\n\n\nPor \u00faltimo, nos desplazamos a la secci\u00f3n \nlisten-socket\n y colocamos el \nn\u00famero de puerto\n desde el cual trasmitiremos: \n\n\nlisten-socket\n\n \nport\n8000\n/port\n\n\n/listen-socket\n\n\n\n\n\n\nL\u00edmites\n\n\nPor defecto, icecast permite 2 (dos) fuentes de audio simult\u00e1neas con un m\u00e1ximo de 100 (cien) clientes totales. Para cambiar esto y otros par\u00e1metros, tendremos que ubicar la secci\u00f3n \nlimits\n:\n\n\nlimits\n\n    \nclients\n100\n/clients\n\n    \nsources\n2\n/sources\n\n    \nqueue-size\n524288\n/queue-size\n\n    \nclient-timeout\n30\n/client-timeout\n\n    \nheader-timeout\n15\n/header-timeout\n\n    \nsource-timeout\n10\n/source-timeout\n\n    \n!--\n \nSame\n as burst-on-connect, but this allows for being more\n    \nspecific\n \non\n how much to burst. Most people won\nt need to\n    \nchange\n from the default \n64\nk. Applies to \nall\n mountpoints. --\n\n    \nburst-size\n65535\n/burst-size\n\n    \n!--\n\n    \nmax-bandwidth\n100M\n/max-bandwidth\n\n    \n--\n\n\n/limits\n\n\n\n\n\n\nDonde las etiquetas de la secci\u00f3n: \n\n\n\n\n\n\n\n\nEtiqueta\n\n\nExplicaci\u00f3n\n\n\n\n\n\n\n\n\n\n\nclients\n\n\nCantidad m\u00e1xima de clientes conectados para todo el servidor (no por punto de montaje).\n\n\n\n\n\n\nsources\n\n\nN\u00famero m\u00e1ximo de fuentes (puntos de montaje) permitidas en todo el servidor\n\n\n\n\n\n\nqueue-size\n\n\nTama\u00f1o de la cola de espera (en bytes). Generalmente, un cliente con problemas de conexi\u00f3n pasa a la cola.\n\n\n\n\n\n\nclient-timeout\n\n\nTiempo de espera m\u00e1ximo (en segundos) para reconexi\u00f3n de un cliente. No se usa.\n\n\n\n\n\n\nheader-timeout\n\n\nTiempo de espera m\u00e1ximo (en segundos) para iniciar una conexi\u00f3n. No se usa.\n\n\n\n\n\n\nsource-timeout\n\n\nTiempo de espera m\u00e1ximo (en segundos) para recibir contenido desde una fuente. Pasado el tiempo, la fuente se elimina.\n\n\n\n\n\n\nburst-size\n\n\nTama\u00f1o m\u00e1ximo de\nbuffer\n. Por defecto, su valor es de 64 kbytes y debe ser siempre menor al valor de \nqueue-size\n.\n\n\n\n\n\n\nmax-bandwidth\n\n\nAncho de banda m\u00e1ximo. Por defecto, es de 64 kbytes", 
            "title": "Configuraci\u00f3n general"
        }, 
        {
            "location": "/icecast/configuracionGeneral/#usuarios-y-contrasenas", 
            "text": "Buscamos la secci\u00f3n  authentication :   authentication \n\n     !--   Sources log in with username  source  -- \n         source-password hackme /source-password \n\n     !--   Relays log in username  relay  -- \n         relay-password hackme /relay-password \n\n         !--   Admin logs in with the username given below -- \n         admin-user admin /admin-user \n         admin-password hackme /admin-password  /authentication   Donde tendremos que modificar como m\u00ednimo, los valores  hackme  por otros que deseemos.      Etiqueta  Explicaci\u00f3n      source-password  Contrase\u00f1a del usuario  source , utilizado por defecto para trasmitir contenido.    relay-password  Contrase\u00f1a del usuario  relay . \u00datil en caso de habilitar un servidor de streaming secundario.    admin-user  Nombre del usuario administrador (panel de administraci\u00f3n web).    admin-password  Contrase\u00f1a del usuario administrador (panel de administraci\u00f3n web).", 
            "title": "Usuarios y contrase\u00f1as"
        }, 
        {
            "location": "/icecast/configuracionGeneral/#direccion-del-servidor", 
            "text": "Buscamos la secci\u00f3n  hostname  y colocamos la  direcci\u00f3n IP  o  nombre de dominio  de nuestro servidor de streaming. A continuaci\u00f3n, dos ejemplos de configuraci\u00f3n (ficticios):  hostname http://www . miservidor . com /hostname   O bien, si disponemos de la direcci\u00f3n IP del servidor  hostname http://192 . 168 . 0 . 232 /hostname   Por \u00faltimo, nos desplazamos a la secci\u00f3n  listen-socket  y colocamos el  n\u00famero de puerto  desde el cual trasmitiremos:   listen-socket \n  port 8000 /port  /listen-socket", 
            "title": "Direcci\u00f3n del servidor"
        }, 
        {
            "location": "/icecast/configuracionGeneral/#limites", 
            "text": "Por defecto, icecast permite 2 (dos) fuentes de audio simult\u00e1neas con un m\u00e1ximo de 100 (cien) clientes totales. Para cambiar esto y otros par\u00e1metros, tendremos que ubicar la secci\u00f3n  limits :  limits \n     clients 100 /clients \n     sources 2 /sources \n     queue-size 524288 /queue-size \n     client-timeout 30 /client-timeout \n     header-timeout 15 /header-timeout \n     source-timeout 10 /source-timeout \n     !--   Same  as burst-on-connect, but this allows for being more\n     specific   on  how much to burst. Most people won t need to\n     change  from the default  64 k. Applies to  all  mountpoints. -- \n     burst-size 65535 /burst-size \n     !-- \n     max-bandwidth 100M /max-bandwidth \n     --  /limits   Donde las etiquetas de la secci\u00f3n:      Etiqueta  Explicaci\u00f3n      clients  Cantidad m\u00e1xima de clientes conectados para todo el servidor (no por punto de montaje).    sources  N\u00famero m\u00e1ximo de fuentes (puntos de montaje) permitidas en todo el servidor    queue-size  Tama\u00f1o de la cola de espera (en bytes). Generalmente, un cliente con problemas de conexi\u00f3n pasa a la cola.    client-timeout  Tiempo de espera m\u00e1ximo (en segundos) para reconexi\u00f3n de un cliente. No se usa.    header-timeout  Tiempo de espera m\u00e1ximo (en segundos) para iniciar una conexi\u00f3n. No se usa.    source-timeout  Tiempo de espera m\u00e1ximo (en segundos) para recibir contenido desde una fuente. Pasado el tiempo, la fuente se elimina.    burst-size  Tama\u00f1o m\u00e1ximo de buffer . Por defecto, su valor es de 64 kbytes y debe ser siempre menor al valor de  queue-size .    max-bandwidth  Ancho de banda m\u00e1ximo. Por defecto, es de 64 kbytes", 
            "title": "L\u00edmites"
        }, 
        {
            "location": "/icecast/broadcasting/", 
            "text": "Icecast es solamente un servidor de streaming. Tendremos que proporcionar una fuente de audio y/o video para que el servidor lo retransmita entre los clientes de la red. \n\n\nExisten \nvarias herramientas para este cometido\n. En el presente tutorial utilizaremos una de ellas llamada \nMixxx\n la cual podremos descargar desde los siguientes enlaces: \n\n\n\n\n\n\nMixxx (32 bits)\n\n\n\n\n\n\nMixxx (64 bits)\n\n\n\n\n\n\nTransmitiendo con Mixxx\n\n\nEn la siguiente captura, podemos ver un ejemplo de opciones de configuraci\u00f3n del programa Mixxx, al cual accedemos yendo al \nMenu \n Opciones \n Preferencias\n.\n\n\n\n\nDonde:\n\n\n\n\n\n\nActivar la transmisi\u00f3n en vivo\n: env\u00eda la reproducci\u00f3n actual hacia el servidor de audio.\n\n\n\n\n\n\nConexi\u00f3n al servidor\n: \n\n\n\n\nTipo\n: Seleccionar tipo de servidor (Icecast, ShoutCast, etc.)\n\n\nServidor\n: Direcci\u00f3n IP o nombre de dominio del servidor de audio.\n\n\nIdentificaci\u00f3n\n: Usuario autorizado para realizar \nstreaming\n. Por defecto, el usuario es \nsource\n.\n\n\nMontar\n: Nombre del punto de montaje. Modificar a elecci\u00f3n. \n\n\nPuerto\n: n\u00famero de puerto donde \nescuchar\u00e1\n el servicio. Modificar a elecci\u00f3n.\n\n\nContrase\u00f1a\n: contrase\u00f1a del usuario \nsource\n.\n\n\n\n\n\n\n\n\nCodificaci\u00f3n\n: formato, \nbitrate\n y canales del audio de salida. \n\n\n\n\n\n\nMetadatos personzalidados\n: sobreescribe los metadatos propios del audio en reproducci\u00f3n. \n\n\n\n\n\n\nConfiguraci\u00f3n de la emisi\u00f3n\n: codificaci\u00f3n y metadatos de la transmisi\u00f3n.\n\n\n\n\n\n\nStreaming en mp3\n\n\nSi somos deseamos transmitir en formato mp3 tendremos que incluir algunas librer\u00edas extras, ya que el formato .mp3 posee licencia propietaria. Procedamos entonces.\n\n\nEn sistemas \nGNU/Linux\n, bastar\u00e1 con ejecutar el siguiente comando: \n\n\nsudo apt install libmp3lame0\n\n\n\n\n\nSi utilizamos un sistema \nWindows\n, tendremos que completar los siguients pasos: \n\n\n\n\nDescargar la librer\u00eda \nlibmp3lame\n desde \nel siguiente enlace\n teniendo en cuenta la arquitectura de nuestro sistema (32 o 64 bits).\n\n\nDescomprimir el archivo descargado con alg\u00fan gestor de archivadores como, por ejemplo, \n7-zip\n.\n\n\nCopiar el archivo \nlibmp3lame.dll\n \ndentro de la carpeta de instalaci\u00f3n de Mixxx\n (generalmente es \nC:\\Archivos de programa\\Mixxx\\\n.\n\n\nSi estamos usando \nMixxx\n en su versi\u00f3n 1.11 o anterior, es necesario renombrar el archivo \nlibmp3lame.dll\n como \nlame_enc.dll\n.", 
            "title": "Broadcasting"
        }, 
        {
            "location": "/icecast/broadcasting/#transmitiendo-con-mixxx", 
            "text": "En la siguiente captura, podemos ver un ejemplo de opciones de configuraci\u00f3n del programa Mixxx, al cual accedemos yendo al  Menu   Opciones   Preferencias .   Donde:    Activar la transmisi\u00f3n en vivo : env\u00eda la reproducci\u00f3n actual hacia el servidor de audio.    Conexi\u00f3n al servidor :    Tipo : Seleccionar tipo de servidor (Icecast, ShoutCast, etc.)  Servidor : Direcci\u00f3n IP o nombre de dominio del servidor de audio.  Identificaci\u00f3n : Usuario autorizado para realizar  streaming . Por defecto, el usuario es  source .  Montar : Nombre del punto de montaje. Modificar a elecci\u00f3n.   Puerto : n\u00famero de puerto donde  escuchar\u00e1  el servicio. Modificar a elecci\u00f3n.  Contrase\u00f1a : contrase\u00f1a del usuario  source .     Codificaci\u00f3n : formato,  bitrate  y canales del audio de salida.     Metadatos personzalidados : sobreescribe los metadatos propios del audio en reproducci\u00f3n.     Configuraci\u00f3n de la emisi\u00f3n : codificaci\u00f3n y metadatos de la transmisi\u00f3n.", 
            "title": "Transmitiendo con Mixxx"
        }, 
        {
            "location": "/icecast/broadcasting/#streaming-en-mp3", 
            "text": "Si somos deseamos transmitir en formato mp3 tendremos que incluir algunas librer\u00edas extras, ya que el formato .mp3 posee licencia propietaria. Procedamos entonces.  En sistemas  GNU/Linux , bastar\u00e1 con ejecutar el siguiente comando:   sudo apt install libmp3lame0  Si utilizamos un sistema  Windows , tendremos que completar los siguients pasos:    Descargar la librer\u00eda  libmp3lame  desde  el siguiente enlace  teniendo en cuenta la arquitectura de nuestro sistema (32 o 64 bits).  Descomprimir el archivo descargado con alg\u00fan gestor de archivadores como, por ejemplo,  7-zip .  Copiar el archivo  libmp3lame.dll   dentro de la carpeta de instalaci\u00f3n de Mixxx  (generalmente es  C:\\Archivos de programa\\Mixxx\\ .  Si estamos usando  Mixxx  en su versi\u00f3n 1.11 o anterior, es necesario renombrar el archivo  libmp3lame.dll  como  lame_enc.dll .", 
            "title": "Streaming en mp3"
        }, 
        {
            "location": "/icecast/administracion/", 
            "text": "Es posible administrar el servidor web mediante una interfaz web. Para ello, procederemos a abrir un navegador web y colocar la \ndirecci\u00f3n IP\n o \nnombre de dominio\n del servidor, seguido del n\u00famero de puerto. En el siguiente ejemplo se emplean \nvalores ficticios, definidos en un ejemplo anterior\n: \n\n\nhttp://192.168.0.232:8000\n\n\n\n\n\nIniciamos sesi\u00f3n como \nadministrador\n teniendo en cuenta las \ncredenciales que hayamos definido en el archivo de configuraci\u00f3n\n. Al acceder, veremos la siguiente p\u00e1gina: \n\n\n\n\nAl hacer clic sobre el menu \nAdministration\n veremos los datos del servidor: \n\n\n\n\nSi damos clic sobre \nMountpoint List\n veremos listados los clientes que se encuentran transmitiendo. Naturalmente, la p\u00e1gina se ver\u00e1 vac\u00eda si nadie est\u00e1 transmitiendo contenido: \n\n\n\n\nCuando un usuario comienza a transmitir contenido, autom\u00e1ticamente aparece listado en la secci\u00f3n \nMountpoint List\n: \n\n\n\n\n\n\nReproducir flujo de audio\n\n\nEn la imagen de arriba pueden visualizarse tres \u00edconos: al hacer clic sobre alguno de ellos se descargar\u00e1 una lista de reproducci\u00f3n en un formato determinado que podremos abrir y reproducir en cualquier reproductor de audio. \n\n\n\n\nLa informaci\u00f3n anterior aparecer\u00e1 listada tambi\u00e9n al pi\u00e9 de la p\u00e1gina de \nAdministration\n:", 
            "title": "Administraci\u00f3n"
        }, 
        {
            "location": "/git/", 
            "text": "Git\n es un sistema de control de versiones distribuido creado por \nLinus Torvalds\n pensando en la eficiencia y la confiabilidad del mantenimiento de versiones de aplicaciones cuando \u00e9stas tienen un gran n\u00famero de archivos de c\u00f3digo fuente. \n\n\n\n\nDesde su nacimiento en el 2005, Git ha evolucionado y madurado para ser f\u00e1cil de usar y conservar sus caracter\u00edsticas iniciales. Es tremendamente r\u00e1pido, muy eficiente con grandes proyectos, y tiene un incre\u00edble sistema de ramificaci\u00f3n (branching) para desarrollo no lineal.\n\n\n\n\nLibro de referencia\nEl contenido de la presente gu\u00eda fue adaptado del libro oficial de Git disponible en web en: \nPro Git\n o bien, \nhaciendo clic en este enlace\n.\n\n\n\n\n\n\nGit vs otros sistemas de control de versiones\n\n\nGit almacena y maneja la informaci\u00f3n de forma muy diferente a otros sistemas (como  CVS, Subversion, Bazaar, Mercurial, Perforce, etc.), a pesar de que su interfaz de usuario es bastante similar.\n\n\nLa principal diferencia entre Git y cualquier otro VCS (incluyendo Subversion y sus amigos) es la forma en la que manejan sus datos. Conceptualmente, la mayor\u00eda de los otros sistemas almacenan la informaci\u00f3n como una lista de cambios en los archivos. Estos sistemas (CVS, Subversion, Perforce, Bazaar, etc.) manejan la informaci\u00f3n que almacenan como un conjunto de archivos y las modificaciones hechas a cada uno de ellos a trav\u00e9s del tiempo.\n\n\n\n\nAlmacenamiento de datos como cambios en una versi\u00f3n de la base de cada archivo.\n\n\nGit no maneja ni almacena sus datos de esta forma. Git maneja sus datos como un conjunto de copias instant\u00e1neas de un sistema de archivos miniatura. Cada vez que confirmas un cambio, o guardas el estado de tu proyecto en Git, \u00e9l b\u00e1sicamente \ntoma una foto del aspecto de todos tus archivos en ese momento, y guarda una referencia a esa copia instant\u00e1nea\n. Para ser eficiente, si los archivos no se han modificado Git no almacena el archivo de nuevo, sino un enlace al archivo anterior id\u00e9ntico que ya tiene almacenado. Git maneja sus datos como una secuencia de copias instant\u00e1neas.\n\n\n\n\nAlmacenamiento de datos como instant\u00e1neas del proyecto a trav\u00e9s del tiempo.\n\n\nEsta es una diferencia importante entre Git y pr\u00e1cticamente todos los dem\u00e1s VCS. Hace que Git reconsidere casi todos los aspectos del control de versiones que muchos de los dem\u00e1s sistemas copiaron de la generaci\u00f3n anterior. Esto hace que Git se parezca m\u00e1s a un sistema de archivos miniatura con algunas herramientas tremendamente poderosas desarrolladas sobre \u00e9l, que a un VCS. \n\n\nCasi todas las operaciones son locales\n\n\nLa mayor\u00eda de las operaciones en Git s\u00f3lo necesitan archivos y recursos locales para funcionar. Por lo general no se necesita informaci\u00f3n de ning\u00fan otro computador de tu red. Si est\u00e1s acostumbrado a un CVCS donde la mayor\u00eda de las operaciones tienen el costo adicional del retardo de la red, este aspecto de Git te va a hacer pensar que los dioses de la velocidad han bendecido Git con poderes sobrenaturales. Debido a que tienes toda la historia del proyecto ah\u00ed mismo, en tu disco local, la mayor\u00eda de las operaciones parecen pr\u00e1cticamente inmediatas.\n\n\nPor ejemplo, para navegar por la historia del proyecto, Git no necesita conectarse al servidor para obtener la historia y mostr\u00e1rtela - simplemente la lee directamente de tu base de datos local. Esto significa que ves la historia del proyecto casi instant\u00e1neamente. Si quieres ver los cambios introducidos en un archivo entre la versi\u00f3n actual y la de hace un mes, Git puede buscar el archivo hace un mes y hacer un c\u00e1lculo de diferencias localmente, en lugar de tener que pedirle a un servidor remoto que lo haga u obtener una versi\u00f3n antigua desde la red y hacerlo de manera local.\n\n\nEsto tambi\u00e9n significa que hay muy poco que no puedes hacer si est\u00e1s desconectado o sin VPN. Si te subes a un avi\u00f3n o a un tren y quieres trabajar un poco, puedes confirmar tus cambios felizmente hasta que consigas una conexi\u00f3n de red para subirlos. Si te vas a casa y no consigues que tu cliente VPN funcione correctamente, puedes seguir trabajando. En muchos otros sistemas, esto es imposible o muy engorroso. En Perforce, por ejemplo, no puedes hacer mucho cuando no est\u00e1s conectado al servidor. En Subversion y CVS, puedes editar archivos, pero no puedes confirmar los cambios a tu base de datos (porque tu base de datos no tiene conexi\u00f3n). Esto puede no parecer gran cosa, pero te sorprender\u00eda la diferencia que puede suponer.\n\n\nGit tiene integridad\n\n\nTodo en Git es verificado mediante una suma de comprobaci\u00f3n (checksum en ingl\u00e9s) antes de ser almacenado, y es identificado a partir de ese momento mediante dicha suma. Esto significa que es imposible cambiar los contenidos de cualquier archivo o directorio sin que Git lo sepa. Esta funcionalidad est\u00e1 integrada en Git al m\u00e1s bajo nivel y es parte integral de su filosof\u00eda. No puedes perder informaci\u00f3n durante su transmisi\u00f3n o sufrir corrupci\u00f3n de archivos sin que Git sea capaz de detectarlo.\n\n\nEl mecanismo que usa Git para generar esta suma de comprobaci\u00f3n se conoce como hash SHA-1. Se trata de una cadena de 40 caracteres hexadecimales (0-9 y a-f), y se calcula en base a los contenidos del archivo o estructura del directorio en Git. Un hash SHA-1 se ve de la siguiente forma:\n\n\n24b9da6552252987aa493b52f8696cd6d3b00373\n\n\n\n\n\nVer\u00e1s estos valores hash por todos lados en Git porque son usados con mucha frecuencia. De hecho, Git guarda todo no por nombre de archivo, sino por el valor hash de sus contenidos.", 
            "title": "\u00bfQu\u00e9 es Git?"
        }, 
        {
            "location": "/git/#git-vs-otros-sistemas-de-control-de-versiones", 
            "text": "Git almacena y maneja la informaci\u00f3n de forma muy diferente a otros sistemas (como  CVS, Subversion, Bazaar, Mercurial, Perforce, etc.), a pesar de que su interfaz de usuario es bastante similar.  La principal diferencia entre Git y cualquier otro VCS (incluyendo Subversion y sus amigos) es la forma en la que manejan sus datos. Conceptualmente, la mayor\u00eda de los otros sistemas almacenan la informaci\u00f3n como una lista de cambios en los archivos. Estos sistemas (CVS, Subversion, Perforce, Bazaar, etc.) manejan la informaci\u00f3n que almacenan como un conjunto de archivos y las modificaciones hechas a cada uno de ellos a trav\u00e9s del tiempo.   Almacenamiento de datos como cambios en una versi\u00f3n de la base de cada archivo.  Git no maneja ni almacena sus datos de esta forma. Git maneja sus datos como un conjunto de copias instant\u00e1neas de un sistema de archivos miniatura. Cada vez que confirmas un cambio, o guardas el estado de tu proyecto en Git, \u00e9l b\u00e1sicamente  toma una foto del aspecto de todos tus archivos en ese momento, y guarda una referencia a esa copia instant\u00e1nea . Para ser eficiente, si los archivos no se han modificado Git no almacena el archivo de nuevo, sino un enlace al archivo anterior id\u00e9ntico que ya tiene almacenado. Git maneja sus datos como una secuencia de copias instant\u00e1neas.   Almacenamiento de datos como instant\u00e1neas del proyecto a trav\u00e9s del tiempo.  Esta es una diferencia importante entre Git y pr\u00e1cticamente todos los dem\u00e1s VCS. Hace que Git reconsidere casi todos los aspectos del control de versiones que muchos de los dem\u00e1s sistemas copiaron de la generaci\u00f3n anterior. Esto hace que Git se parezca m\u00e1s a un sistema de archivos miniatura con algunas herramientas tremendamente poderosas desarrolladas sobre \u00e9l, que a un VCS.", 
            "title": "Git vs otros sistemas de control de versiones"
        }, 
        {
            "location": "/git/#casi-todas-las-operaciones-son-locales", 
            "text": "La mayor\u00eda de las operaciones en Git s\u00f3lo necesitan archivos y recursos locales para funcionar. Por lo general no se necesita informaci\u00f3n de ning\u00fan otro computador de tu red. Si est\u00e1s acostumbrado a un CVCS donde la mayor\u00eda de las operaciones tienen el costo adicional del retardo de la red, este aspecto de Git te va a hacer pensar que los dioses de la velocidad han bendecido Git con poderes sobrenaturales. Debido a que tienes toda la historia del proyecto ah\u00ed mismo, en tu disco local, la mayor\u00eda de las operaciones parecen pr\u00e1cticamente inmediatas.  Por ejemplo, para navegar por la historia del proyecto, Git no necesita conectarse al servidor para obtener la historia y mostr\u00e1rtela - simplemente la lee directamente de tu base de datos local. Esto significa que ves la historia del proyecto casi instant\u00e1neamente. Si quieres ver los cambios introducidos en un archivo entre la versi\u00f3n actual y la de hace un mes, Git puede buscar el archivo hace un mes y hacer un c\u00e1lculo de diferencias localmente, en lugar de tener que pedirle a un servidor remoto que lo haga u obtener una versi\u00f3n antigua desde la red y hacerlo de manera local.  Esto tambi\u00e9n significa que hay muy poco que no puedes hacer si est\u00e1s desconectado o sin VPN. Si te subes a un avi\u00f3n o a un tren y quieres trabajar un poco, puedes confirmar tus cambios felizmente hasta que consigas una conexi\u00f3n de red para subirlos. Si te vas a casa y no consigues que tu cliente VPN funcione correctamente, puedes seguir trabajando. En muchos otros sistemas, esto es imposible o muy engorroso. En Perforce, por ejemplo, no puedes hacer mucho cuando no est\u00e1s conectado al servidor. En Subversion y CVS, puedes editar archivos, pero no puedes confirmar los cambios a tu base de datos (porque tu base de datos no tiene conexi\u00f3n). Esto puede no parecer gran cosa, pero te sorprender\u00eda la diferencia que puede suponer.", 
            "title": "Casi todas las operaciones son locales"
        }, 
        {
            "location": "/git/#git-tiene-integridad", 
            "text": "Todo en Git es verificado mediante una suma de comprobaci\u00f3n (checksum en ingl\u00e9s) antes de ser almacenado, y es identificado a partir de ese momento mediante dicha suma. Esto significa que es imposible cambiar los contenidos de cualquier archivo o directorio sin que Git lo sepa. Esta funcionalidad est\u00e1 integrada en Git al m\u00e1s bajo nivel y es parte integral de su filosof\u00eda. No puedes perder informaci\u00f3n durante su transmisi\u00f3n o sufrir corrupci\u00f3n de archivos sin que Git sea capaz de detectarlo.  El mecanismo que usa Git para generar esta suma de comprobaci\u00f3n se conoce como hash SHA-1. Se trata de una cadena de 40 caracteres hexadecimales (0-9 y a-f), y se calcula en base a los contenidos del archivo o estructura del directorio en Git. Un hash SHA-1 se ve de la siguiente forma:  24b9da6552252987aa493b52f8696cd6d3b00373  Ver\u00e1s estos valores hash por todos lados en Git porque son usados con mucha frecuencia. De hecho, Git guarda todo no por nombre de archivo, sino por el valor hash de sus contenidos.", 
            "title": "Git tiene integridad"
        }, 
        {
            "location": "/git/flujoEntornosDistribuidos/", 
            "text": "Flujos de trabajo distribuidos\n\n\nAl contrario de otros Sistemas Centralizados de Control de Versiones, (CVCSs, Centralized Version Control Systems), la naturaleza distribuida de Git permite mucha m\u00e1s flexibilidad en la manera de colaborar en proyectos. En los sistemas centralizados, cada desarrollador es un nodo de trabajo; trabajando todos ellos, en pie de igualdad, sobre un mismo repositorio central. En Git, en cambio, cada desarrollador es potencialmente tanto un nodo como un repositorio --es decir, cada desarrollador puede tanto contribuir a otros repositorios, como servir de repositorio p\u00fablico sobre el que otros desarrolladores pueden basar su trabajo y contribuir a \u00e9l--. Esto abre un enorme rango de posibles formas de trabajo en tu proyecto y/o en tu equipo. \n\n\nAqu\u00ed vamos a revisar algunos de los paradigmas m\u00e1s comunes dise\u00f1ados para sacar ventaja a esta gran flexibilidad. Vamos a repasar las fortalezas y posibles debilidades de cada paradigma. En tu trabajo, podr\u00e1s elegir solo uno concreto, o podr\u00e1s mezclar escogiendo funcionalidades concretas de cada uno.\n\n\nFlujo de trabajo centralizado\n\n\n\n\nEn los sistemas centralizados, tenemos una \u00fanica forma de trabajar. Un repositorio o punto central guarda el c\u00f3digo fuente; y todo el mundo sincroniza su trabajo con \u00e9l. Unos cuantos desarrolladores son nodos de trabajo -consumidores de dicho repositorio- y se sincronizan con dicho punto central.\n\n\nEsto significa que, si dos desarrolladores clonan desde el punto central, y ambos hacen cambios; tan solo el primero de ellos en enviar sus cambios de vuelta lo podr\u00e1 hacer limpiamente. El segundo desarrollador deber\u00e1 fusionar previamente su trabajo con el del primero, antes de enviarlo, para evitar el sobreescribir los cambios del primero. Este concepto es tambi\u00e9n v\u00e1lido en Git, tanto como en Subversion (o cualquier otro CVCS), y puede ser perfectamente utilizado en Git.\n\n\nSi tienes un equipo peque\u00f1o o te sientes confortable con un flujo de trabajo centralizado, puedes continuar usando esa forma de trabajo con Git. Solo necesitas disponer un repositorio \u00fanico, y dar acceso en envio (push) a todo tu equipo. Git se encargar\u00e1 de evitar el que se sobreescriban unos a otros. Si uno de los desarrolladores clona, hace cambios y luego intenta enviarlos; y otro desarrollador ha enviado otros cambios durante ese tiempo; el servidor rechazar\u00e1 los cambios del segundo desarrollador. El sistema le avisar\u00e1 de que est\u00e1 intentando enviar (push) cambios no directos (non-fast-forward changes), y de que no podr\u00e1 hacerlo hasta que recupere (fetch) y fusione (merge) los cambios preexistentes. Esta forma de trabajar es atractiva para mucha gente, por ser el paradigma con el que est\u00e1n familiarizados y se sienten confortable.\n\n\nFlujo de trabajo con Gestor de Integraciones\n\n\n\n\nAl permitir multiples repositorios remotos, en Git es posible tener un flujo de trabajo donde cada desarrollador tenga acceso de escritura a su propio repositorio p\u00fablico y acceso de lectura a los repositorios de todos los dem\u00e1s. Habitualmente, este escenario suele incluir un repositorio can\u00f3nico, representante \"oficial\" del proyecto. Para contribuir en este tipo de proyecto, crear\u00e1s tu propio cl\u00f3n p\u00fablico del mismo y enviar\u00e1s (push) tus cambios a este. Despu\u00e9s, enviar\u00e1s una petici\u00f3n a la persona gestora del proyecto principal, para que recupere y consolide (pull) en \u00e9l tus cambios. Ella podr\u00e1 a\u00f1adir tu repositorio como un remoto, chequear tus cambios localmente, fusionarlos (merge) con su rama y enviarlos (push) de vuelta a su repositorio. \n\n\n\n\nMecanismo del flujo de trabajo con gestor de integraciones\nEl proceso funciona de la siguiente manera:\n\n\n\n\n\n\nLa persona gestora del proyecto envia (push) a su repositorio p\u00fablico (repositorio principal).\n\n\n\n\n\n\nUna persona que desea contribuir, clona dicho repositorio y hace algunos cambios.\n\n\n\n\n\n\nLa persona colaboradora envia (push) a su propia copia p\u00fablica.\n\n\n\n\n\n\nEsta persona colaboradora envia a la gestora un correo electronico solicit\u00e1ndole recupere e integre los cambios.\n\n\n\n\n\n\nLa gestora a\u00f1ade como remoto el repositorio de la colaboradora y fusiona (merge) los cambios localmente.\n\n\n\n\n\n\nLa gestora envia (push) los cambios fusionados al repositorio principal.\n\n\n\n\n\n\n\n\n\n\nEsta es una forma de trabajo muy com\u00fan en sitios tales como GitHub, donde es sencillo bifurcar (fork) un proyecto y enviar tus cambios a tu copia, donde cualquiera puede verlos. La principal ventaja de esta forma de trabajar es que puedes continuar trabajando, y la persona gestora del repositorio principal podr\u00e1 recuperar (pull) tus cambios en cualquier momento. Las personas colaboradoras no tienen por qu\u00e9 esperar a que sus cambios sean incorporados al proyecto, -cada cual puede trabajar a su propio ritmo-.\n\n\nFlujo de trabajo con Dictador y Tenientes\n\n\n\n\nEs una variante del flujo de trabajo con multiples repositorios. Se utiliza generalmente en proyectos muy grandes, con cientos de colaboradores. Un ejemplo muy conocido es el del kernel de Linux. Unos gestores de integraci\u00f3n se encargan de partes concretas del repositorio; y se denominan tenientes. Todos los tenientes rinden cuentas a un gestor de integraci\u00f3n; conocido como el dictador benevolente. El repositorio del dictador benevolente es el repositorio de referencia, del que recuperan (pull) todos los colaboradores. \n\n\n\n\nMecanismo del flujo de trabajo con dictador y tenientes\nEl proceso funciona de la siguiente manera:\n\n\n\n\n\n\nLos desarrolladores habituales trabajan cada uno en su rama puntual y reorganizan (rebase) su trabajo sobre la rama master. La rama master es la del dictador benevolente.\n\n\n\n\n\n\nLos tenienentes fusionan (merge) las ramas puntuales de los desarrolladores sobre su propia rama master.\n\n\n\n\n\n\nEl dictadorEsta manera de trabajar no es muy habitual, pero es muy util en proyectos muy grandes o en organizaci\u00f3nes fuertemente jerarquizadas. Permite al lider o a la lider del proyecto (el/la dictador/a) delegar gran parte del trabajo; recolectando el fruto de multiples puntos de trabajo antes de integrarlo en el proyecto.\n\n\n\n\n\n\n\n\n\n\nEsta manera de trabajar no es muy habitual, pero es muy util en proyectos muy grandes o en organizaci\u00f3nes fuertemente jerarquizadas. Permite al lider o a la lider del proyecto (el/la dictador/a) delegar gran parte del trabajo; recolectando el fruto de multiples puntos de trabajo antes de integrarlo en el proyecto.\n\n\nHemos visto algunos de los flujos de trabajo mas comunes permitidos por un sistema distribuido como Git. Pero seguro que habr\u00e1s comenzado a vislumbrar multiples variaciones que puedan encajar con tu particular forma de trabajar.", 
            "title": "Entornos distribuidos"
        }, 
        {
            "location": "/git/flujoEntornosDistribuidos/#flujos-de-trabajo-distribuidos", 
            "text": "Al contrario de otros Sistemas Centralizados de Control de Versiones, (CVCSs, Centralized Version Control Systems), la naturaleza distribuida de Git permite mucha m\u00e1s flexibilidad en la manera de colaborar en proyectos. En los sistemas centralizados, cada desarrollador es un nodo de trabajo; trabajando todos ellos, en pie de igualdad, sobre un mismo repositorio central. En Git, en cambio, cada desarrollador es potencialmente tanto un nodo como un repositorio --es decir, cada desarrollador puede tanto contribuir a otros repositorios, como servir de repositorio p\u00fablico sobre el que otros desarrolladores pueden basar su trabajo y contribuir a \u00e9l--. Esto abre un enorme rango de posibles formas de trabajo en tu proyecto y/o en tu equipo.   Aqu\u00ed vamos a revisar algunos de los paradigmas m\u00e1s comunes dise\u00f1ados para sacar ventaja a esta gran flexibilidad. Vamos a repasar las fortalezas y posibles debilidades de cada paradigma. En tu trabajo, podr\u00e1s elegir solo uno concreto, o podr\u00e1s mezclar escogiendo funcionalidades concretas de cada uno.", 
            "title": "Flujos de trabajo distribuidos"
        }, 
        {
            "location": "/git/flujoEntornosDistribuidos/#flujo-de-trabajo-centralizado", 
            "text": "En los sistemas centralizados, tenemos una \u00fanica forma de trabajar. Un repositorio o punto central guarda el c\u00f3digo fuente; y todo el mundo sincroniza su trabajo con \u00e9l. Unos cuantos desarrolladores son nodos de trabajo -consumidores de dicho repositorio- y se sincronizan con dicho punto central.  Esto significa que, si dos desarrolladores clonan desde el punto central, y ambos hacen cambios; tan solo el primero de ellos en enviar sus cambios de vuelta lo podr\u00e1 hacer limpiamente. El segundo desarrollador deber\u00e1 fusionar previamente su trabajo con el del primero, antes de enviarlo, para evitar el sobreescribir los cambios del primero. Este concepto es tambi\u00e9n v\u00e1lido en Git, tanto como en Subversion (o cualquier otro CVCS), y puede ser perfectamente utilizado en Git.  Si tienes un equipo peque\u00f1o o te sientes confortable con un flujo de trabajo centralizado, puedes continuar usando esa forma de trabajo con Git. Solo necesitas disponer un repositorio \u00fanico, y dar acceso en envio (push) a todo tu equipo. Git se encargar\u00e1 de evitar el que se sobreescriban unos a otros. Si uno de los desarrolladores clona, hace cambios y luego intenta enviarlos; y otro desarrollador ha enviado otros cambios durante ese tiempo; el servidor rechazar\u00e1 los cambios del segundo desarrollador. El sistema le avisar\u00e1 de que est\u00e1 intentando enviar (push) cambios no directos (non-fast-forward changes), y de que no podr\u00e1 hacerlo hasta que recupere (fetch) y fusione (merge) los cambios preexistentes. Esta forma de trabajar es atractiva para mucha gente, por ser el paradigma con el que est\u00e1n familiarizados y se sienten confortable.", 
            "title": "Flujo de trabajo centralizado"
        }, 
        {
            "location": "/git/flujoEntornosDistribuidos/#flujo-de-trabajo-con-gestor-de-integraciones", 
            "text": "Al permitir multiples repositorios remotos, en Git es posible tener un flujo de trabajo donde cada desarrollador tenga acceso de escritura a su propio repositorio p\u00fablico y acceso de lectura a los repositorios de todos los dem\u00e1s. Habitualmente, este escenario suele incluir un repositorio can\u00f3nico, representante \"oficial\" del proyecto. Para contribuir en este tipo de proyecto, crear\u00e1s tu propio cl\u00f3n p\u00fablico del mismo y enviar\u00e1s (push) tus cambios a este. Despu\u00e9s, enviar\u00e1s una petici\u00f3n a la persona gestora del proyecto principal, para que recupere y consolide (pull) en \u00e9l tus cambios. Ella podr\u00e1 a\u00f1adir tu repositorio como un remoto, chequear tus cambios localmente, fusionarlos (merge) con su rama y enviarlos (push) de vuelta a su repositorio.    Mecanismo del flujo de trabajo con gestor de integraciones El proceso funciona de la siguiente manera:    La persona gestora del proyecto envia (push) a su repositorio p\u00fablico (repositorio principal).    Una persona que desea contribuir, clona dicho repositorio y hace algunos cambios.    La persona colaboradora envia (push) a su propia copia p\u00fablica.    Esta persona colaboradora envia a la gestora un correo electronico solicit\u00e1ndole recupere e integre los cambios.    La gestora a\u00f1ade como remoto el repositorio de la colaboradora y fusiona (merge) los cambios localmente.    La gestora envia (push) los cambios fusionados al repositorio principal.      Esta es una forma de trabajo muy com\u00fan en sitios tales como GitHub, donde es sencillo bifurcar (fork) un proyecto y enviar tus cambios a tu copia, donde cualquiera puede verlos. La principal ventaja de esta forma de trabajar es que puedes continuar trabajando, y la persona gestora del repositorio principal podr\u00e1 recuperar (pull) tus cambios en cualquier momento. Las personas colaboradoras no tienen por qu\u00e9 esperar a que sus cambios sean incorporados al proyecto, -cada cual puede trabajar a su propio ritmo-.", 
            "title": "Flujo de trabajo con Gestor de Integraciones"
        }, 
        {
            "location": "/git/flujoEntornosDistribuidos/#flujo-de-trabajo-con-dictador-y-tenientes", 
            "text": "Es una variante del flujo de trabajo con multiples repositorios. Se utiliza generalmente en proyectos muy grandes, con cientos de colaboradores. Un ejemplo muy conocido es el del kernel de Linux. Unos gestores de integraci\u00f3n se encargan de partes concretas del repositorio; y se denominan tenientes. Todos los tenientes rinden cuentas a un gestor de integraci\u00f3n; conocido como el dictador benevolente. El repositorio del dictador benevolente es el repositorio de referencia, del que recuperan (pull) todos los colaboradores.    Mecanismo del flujo de trabajo con dictador y tenientes El proceso funciona de la siguiente manera:    Los desarrolladores habituales trabajan cada uno en su rama puntual y reorganizan (rebase) su trabajo sobre la rama master. La rama master es la del dictador benevolente.    Los tenienentes fusionan (merge) las ramas puntuales de los desarrolladores sobre su propia rama master.    El dictadorEsta manera de trabajar no es muy habitual, pero es muy util en proyectos muy grandes o en organizaci\u00f3nes fuertemente jerarquizadas. Permite al lider o a la lider del proyecto (el/la dictador/a) delegar gran parte del trabajo; recolectando el fruto de multiples puntos de trabajo antes de integrarlo en el proyecto.      Esta manera de trabajar no es muy habitual, pero es muy util en proyectos muy grandes o en organizaci\u00f3nes fuertemente jerarquizadas. Permite al lider o a la lider del proyecto (el/la dictador/a) delegar gran parte del trabajo; recolectando el fruto de multiples puntos de trabajo antes de integrarlo en el proyecto.  Hemos visto algunos de los flujos de trabajo mas comunes permitidos por un sistema distribuido como Git. Pero seguro que habr\u00e1s comenzado a vislumbrar multiples variaciones que puedan encajar con tu particular forma de trabajar.", 
            "title": "Flujo de trabajo con Dictador y Tenientes"
        }, 
        {
            "location": "/git/instalacion/", 
            "text": "Antes de empezar a utilizar Git, tienes que instalarlo en tu computadora. Incluso si ya est\u00e1 instalado, este es posiblemente un buen momento para actualizarlo a su \u00faltima versi\u00f3n. Puedes instalarlo como un paquete, a partir de un archivo instalador, o bajando el c\u00f3digo fuente y compil\u00e1ndolo t\u00fa mismo.\n\n\nEl instalador de Git est\u00e1 diponible para sistemas Windows, Mac y Linux. \n\n\nInstalaci\u00f3n en Linux\n\n\nEl paquete \ngit\n se encuentra en la mayor\u00eda de los repositorios -sino en todos- de las distintas distribuciones de GNU/Linuc. Para instalarlo en distribuciones basadas en Debian, ejecutamos en la terminal: \n\n\nsudo apt install git\n\n\n\n\n\nInstalaci\u00f3n en Windows\n\n\nLa forma m\u00e1s oficial est\u00e1 disponible para ser descargada en el sitio web de Git. Solo tienes que visitar \nhttp://git-scm.com/download/win\n y la descarga empezar\u00e1 autom\u00e1ticamente. \n\n\n\n\nSobre Git para Windows\nEste es un proyecto conocido como Git para Windows (tambi\u00e9n llamado msysGit), el cual es diferente de Git. Para m\u00e1s informaci\u00f3n acerca de este proyecto visit\u00e1 \nhttps://git-for-windows.github.io/\n.\n\n\n\n\n\n\nInstalaci\u00f3n en Mac\n\n\nAl igual que Windows, el proyecto Git facilita un instalador espec\u00edfico para el sistema operativo de Cupertino. El siguiente enlace \nhttps://git-scm.com/download/mac\n proporciona la descarga del mismo.", 
            "title": "Instalaci\u00f3n de Git"
        }, 
        {
            "location": "/git/instalacion/#instalacion-en-linux", 
            "text": "El paquete  git  se encuentra en la mayor\u00eda de los repositorios -sino en todos- de las distintas distribuciones de GNU/Linuc. Para instalarlo en distribuciones basadas en Debian, ejecutamos en la terminal:   sudo apt install git", 
            "title": "Instalaci\u00f3n en Linux"
        }, 
        {
            "location": "/git/instalacion/#instalacion-en-windows", 
            "text": "La forma m\u00e1s oficial est\u00e1 disponible para ser descargada en el sitio web de Git. Solo tienes que visitar  http://git-scm.com/download/win  y la descarga empezar\u00e1 autom\u00e1ticamente.    Sobre Git para Windows Este es un proyecto conocido como Git para Windows (tambi\u00e9n llamado msysGit), el cual es diferente de Git. Para m\u00e1s informaci\u00f3n acerca de este proyecto visit\u00e1  https://git-for-windows.github.io/ .", 
            "title": "Instalaci\u00f3n en Windows"
        }, 
        {
            "location": "/git/instalacion/#instalacion-en-mac", 
            "text": "Al igual que Windows, el proyecto Git facilita un instalador espec\u00edfico para el sistema operativo de Cupertino. El siguiente enlace  https://git-scm.com/download/mac  proporciona la descarga del mismo.", 
            "title": "Instalaci\u00f3n en Mac"
        }, 
        {
            "location": "/git/configuracionInicial/", 
            "text": "Antes de comenzar a usar Git es necesario realizar algunas configuraciones previas relacionadas con informaci\u00f3n del usuario que ejecutar\u00e1 el sistema de control de versiones. \n\n\n\n\nConfiguraci\u00f3n del entorno\nLos pasos que se describen en esta sesi\u00f3n s\u00f3lo deben realizarse \nuna sola vez\n en tu computadora y se mantendr\u00e1n siempre, aunque es posible modificar la informaci\u00f3n en cualquier momento, volviendo a ejecutar los comandos correspondientes.\n\n\n\n\n\n\nTu Identidad\n\n\nLo primero que deber\u00e1s hacer cuando instales Git es establecer tu nombre de usuario y direcci\u00f3n de correo electr\u00f3nico. Esto es importante porque los \"commits\" de Git usan esta informaci\u00f3n, y es introducida de manera inmutable en los commits que env\u00edas. \n\n\nPara \nsetear\n tu nombre: \n\n\ngit config --global user.name \nTu nombre\n\n\n\n\n\n\nY hacer lo propio con tu direcci\u00f3n de correo electr\u00f3nico: \n\n\ngit config --global user.email tuemail@ejemplo.com\n\n\n\n\n\nTrabajando detr\u00e1s de un proxy\n\n\nPodemos configurar nuestra conexi\u00f3n remota, cuando nos ubicamos detr\u00e1s de un servidor proxy\n\n\ngit config --global http.proxy http://\n[\nusuario\n]\n:\n[\ncontrase\u00f1a\n]\n@\n[\nservidor\n]\n:\n[\npuerto\n]\n\n\n\n\n\n\nDonde: \n\n\n\n\n[usuario] Es el nombre de usuario en el servidor proxy\n\n\n[contrase\u00f1a] Es la contrase\u00f1a de usuario del servidor proxy\n\n\n[servidor] Es la direcci\u00f3n IP o nombre de dominio del servidor proxy\n\n\n[puerto] Es el puerto con el que est\u00e1 configurado el servidor proxy\n\n\n\n\nSi deseamos \"limpiar\" la configuraci\u00f3n anterior del proxy, ejecutamos: \n\n\ngit config --global --unset http.proxy\n\n\n\n\n\nFinalmente, para verificar la configuraci\u00f3n actual del proxy: \n\n\ngit config --global --get http.proxy\n\n\n\n\n\nUn ejemplo de aplicaci\u00f3n para un servidor proxy sin autenticaci\u00f3n: \n\n\ngit config --global http.proxy http://192.168.0.250:3128\n\n\n\n\n\nComprobando tu configuraci\u00f3n\n\n\nPod\u00e9s comprobar qu\u00e9 valor utilizar\u00e1 Git para una clave espec\u00edfica ejecutando \ngit config \nkey\n:\n\n\n$ git config user.name\n\n\n\n\n\nDonde \nkey\n es el valor que de la configuraci\u00f3n que deseas consultar. \n\n\nPero si quer\u00e9s comprobar toda tu configuraci\u00f3n, pod\u00e9s usar el siguiente comando:\n\n\ngit config --list\n\n\n\n\n\n\n\nAyuda sobre Git\nEs posible consultar desde la terminal ayuda sobre los comandos empleados por git. Para ello, ejecutamos: \n\n\ngit help \ncomando", 
            "title": "Configuraci\u00f3n inicial"
        }, 
        {
            "location": "/git/configuracionInicial/#tu-identidad", 
            "text": "Lo primero que deber\u00e1s hacer cuando instales Git es establecer tu nombre de usuario y direcci\u00f3n de correo electr\u00f3nico. Esto es importante porque los \"commits\" de Git usan esta informaci\u00f3n, y es introducida de manera inmutable en los commits que env\u00edas.   Para  setear  tu nombre:   git config --global user.name  Tu nombre   Y hacer lo propio con tu direcci\u00f3n de correo electr\u00f3nico:   git config --global user.email tuemail@ejemplo.com", 
            "title": "Tu Identidad"
        }, 
        {
            "location": "/git/configuracionInicial/#trabajando-detras-de-un-proxy", 
            "text": "Podemos configurar nuestra conexi\u00f3n remota, cuando nos ubicamos detr\u00e1s de un servidor proxy  git config --global http.proxy http:// [ usuario ] : [ contrase\u00f1a ] @ [ servidor ] : [ puerto ]   Donde:    [usuario] Es el nombre de usuario en el servidor proxy  [contrase\u00f1a] Es la contrase\u00f1a de usuario del servidor proxy  [servidor] Es la direcci\u00f3n IP o nombre de dominio del servidor proxy  [puerto] Es el puerto con el que est\u00e1 configurado el servidor proxy   Si deseamos \"limpiar\" la configuraci\u00f3n anterior del proxy, ejecutamos:   git config --global --unset http.proxy  Finalmente, para verificar la configuraci\u00f3n actual del proxy:   git config --global --get http.proxy  Un ejemplo de aplicaci\u00f3n para un servidor proxy sin autenticaci\u00f3n:   git config --global http.proxy http://192.168.0.250:3128", 
            "title": "Trabajando detr\u00e1s de un proxy"
        }, 
        {
            "location": "/git/configuracionInicial/#comprobando-tu-configuracion", 
            "text": "Pod\u00e9s comprobar qu\u00e9 valor utilizar\u00e1 Git para una clave espec\u00edfica ejecutando  git config  key :  $ git config user.name  Donde  key  es el valor que de la configuraci\u00f3n que deseas consultar.   Pero si quer\u00e9s comprobar toda tu configuraci\u00f3n, pod\u00e9s usar el siguiente comando:  git config --list   Ayuda sobre Git Es posible consultar desde la terminal ayuda sobre los comandos empleados por git. Para ello, ejecutamos:   git help  comando", 
            "title": "Comprobando tu configuraci\u00f3n"
        }, 
        {
            "location": "/git/losTresEstados/", 
            "text": "Git tiene tres estados principales en los que se pueden encontrar tus archivos:\n\n\n\n\nModificado (\nmodified\n), significa que has modificado el archivo pero todav\u00eda no lo has confirmado a tu base de datos.\n\n\nPreparado (\nstaged\n), significa que has marcado un archivo modificado en su versi\u00f3n actual para que vaya en tu pr\u00f3xima confirmaci\u00f3n.\n\n\nConfirmado (\ncommitted\n), significa que los datos est\u00e1n almacenados de manera segura en tu base de datos local.\n\n\n\n\nEsto nos lleva a las tres secciones principales de un proyecto de Git: \n\n\n\n\nDirectorio de trabajo, \u00e1rea de almacenamiento, y el directorio Git.\n\n\n\n\nEl directorio de trabajo (\nWorking directory\n) es una copia de una versi\u00f3n del proyecto. Estos archivos se sacan de la base de datos comprimida en el directorio de Git, y se colocan en disco para que los puedas usar o modificar.\n\n\nEl \u00e1rea de preparaci\u00f3n (\nStaging area\n) es un archivo, generalmente contenido en tu directorio de Git, que almacena informaci\u00f3n acerca de lo que va a ir en tu pr\u00f3xima confirmaci\u00f3n. A veces se le denomina \u00edndice (\u201cindex\u201d), pero se est\u00e1 convirtiendo en est\u00e1ndar el referirse a ella como el \u00e1rea de preparaci\u00f3n.\n\n\nEl directorio de Git (\nGit directory\n) es donde se almacenan los metadatos y la base de datos de objetos para tu proyecto. Es la parte m\u00e1s importante de Git, y es lo que se copia cuando clonas un repositorio desde otra computadora.\n\n\n\n\nResumiendo: \n\n\n\n\n\n\n\n\nSecciones\n\n\nEstado de los archivos\n\n\nDescripci\u00f3n\n\n\n\n\n\n\n\n\n\n\nDirectorio de trabajo\n\n\nModificado\n\n\nArchivos modificados\n\n\n\n\n\n\n\u00c1rea de preparaci\u00f3n\n\n\nPreparado\n\n\nArchivos modificados que est\u00e1n listos para formar parte del repositorio\n\n\n\n\n\n\nDirectorio Git\n\n\nConfirmado\n\n\nArchivos que forman parte del repositorio\n\n\n\n\n\n\n\n\nEl \nflujo de trabajo\n b\u00e1sico en Git es algo as\u00ed:\n\n\n\n\nModificas una serie de archivos en tu directorio de trabajo.\n\n\nPreparas los archivos, a\u00f1adi\u00e9ndolos a tu \u00e1rea de preparaci\u00f3n.\n\n\nConfirmas los cambios, lo que toma los archivos tal y como est\u00e1n en el \u00e1rea de preparaci\u00f3n y almacena esa copia instant\u00e1nea de manera permanente en tu directorio de Git.\n\n\n\n\nSi una versi\u00f3n concreta de un archivo est\u00e1 en el directorio de Git, se considera confirmada (\ncommitted\n). Si ha sufrido cambios desde que se obtuvo del repositorio, pero ha sido a\u00f1adida al \u00e1rea de preparaci\u00f3n, est\u00e1 preparada (\nstaged\n). Y si ha sufrido cambios desde que se obtuvo del repositorio, pero no se ha preparado, est\u00e1 modificada (\nmodified\n).", 
            "title": "Los tres estados"
        }, 
        {
            "location": "/git/repositorioLocal/", 
            "text": "Pr\u00e1cticamente todas las acciones que realiza Git se ejecutan de forma local, es decir, en la m\u00e1quina del cliente. \n\n\nPara comenzar a trabajar en un \nrepositorio local de Git\n tenemos, b\u00e1sicamente, dos caminos: \n\n\n\n\nInicializando un repositorio local a partir de una carpeta existente en nuestra computadora\n\n\nClonar un repositorio remoto existente \n\n\n\n\n1. Repositorio local desde una carpeta existente\n\n\nEste caso es v\u00e1lido sea que ya poseemos un proyecto de desarrollo en nuestra computadora contenido en una carpeta o deseamos crear una carpeta e incluir los archivos de nuestro proyecto para luego inicializar un proyecto Git. \n\n\nCreamos la carpeta donde alojaremos nuestro proyecto:\n\n\nmkdir miProyectoDeSoftware\n\n\n\n\n\nLuego nos introducimos en ella: \n\n\ncd\n miProyectoDeSoftware\n\n\n\n\n\nE inicializamos un repositorio git:\n\n\ngit init\n\n\n\n\n\n\n\nDirectorio oculto .git\nAl inicializar un repositorio se incluye un directorio oculto llamado \n.git\n el cual contiene todos los archivos necesarios para el correcto funcionamiento de Git. \n\n\n\n\n\n\nActo seguido \nagregamos los archivos de nuestro proyecto\n (sitio web, aplicaci\u00f3n, etc.) al directorio.\n\n\nPara comprobar que Git ha detectado los archivos nuevos que hemos incluido ejecutamos: \n\n\ngit status\n\n\n\n\n\nPreparamos los cambios realizados en los archivos (se ubicar\u00e1n entonces en el \nstaging area\n), ejecutando el comando:\n\n\ngit add .\n\n\n\n\n\n\n\nAgregando archivos al \u00e1rea de preparaci\u00f3n\nPodemos agregar nuestros archivos al \u00e1rea de preparaci\u00f3n o \nstaging area\n de varias maneras.  \n\n\n\n\nDe a un archivo: \ngit add nombreDelArchivo\n\n\nO todos los archivos de nuestro proyecto: \ngit add .\n\n\n\n\n\n\n\n\nPor \u00faltimo, confirmamos las modificaciones realizadas en los archivos para que \u00e9stos pasen a formar parte del repositorio (directorio Git o \nHEAD\n):\n\n\ngit commit -m \nMensaje que explica el cambio realizado\n\n\n\n\n\n\nA partir de ahora, el repositorio contiene una serie de archivos y la informaci\u00f3n guardada en la base de datos de Git de forma segura. \n\n\n2. Repositorio local clonando un repositorio remoto existente\n\n\nSi deseamos obtener una copia de un repositorio Git existente \u2014por ejemplo, un proyecto en el que te gustar\u00eda contribuir\u2014 el comando que necesitas es \ngit clone\n. Su sintaxis general es: \n\n\ngit clone \n[\nurl\n]\n\n\n\n\n\n\n\n\nProtocolos compatibles con Git\nGit permite usar distintos protocolos de transferencia: https://, git:// o el protocolo de transferencia SSH.\n\n\n\n\n\n\n2.1. Clonando un repositorio remoto existente [SSH]\n\n\ngit clone git+ssh://usuario@192.168.0.200:/home/usuario/miRepositorio.git\n\n\n\n\n\nDonde:\n\n\n\n\nusuario\n es el nombre de usuario en el servidor remoto.\n\n\n192.168.0.200\n el la direcci\u00f3n IP (o nombre de dominio) del servidor remoto. \n\n\n/home/usuario/miRepositorio.git\n es la ruta donde se ubica el repositorio en el servidor remoto.\n\n\n\n\n2.2. Clonando un repositorio remoto existente [HTTPS]\n\n\ngit clone https://dominio.com/proyecto.git\n\n\n\n\n\nEsto crea un directorio llamado \nproyecto\n, inicializa un directorio \ngit\n en su interior, descarga toda la informaci\u00f3n de ese repositorio y saca una copia de trabajo de la \u00faltima versi\u00f3n.\n\n\n\n\nClonando repositorios en otros directorios\nSi deseamos clonar un repositorio en una carpeta que contenga un nombre distinto al del repositorio original: \n\n\ngit clone https://dominio.com/proyecto.git miProyecto\n\n\nEse comando crear\u00e1 el directorio de destino llamado \nmiProyecto\n.\n\n\n\n\n\n\n2.3. \u00bfQue acciones podemos realizar en un repositorio clonado?\n\n\nUna vez clonado un repositorio remoto \npodremos realizar las mismas acciones que si hubi\u00e9semos inicializado nuestro propio repositorio local\n, a saber: modificar archivos, agregarlos al \u00e1rea de preparaci\u00f3n (comando \ngit add\n) y confirmar los cambios realizados (comando \ngit commit\n) entre otras acciones posibles.", 
            "title": "Inicializando repositorio local"
        }, 
        {
            "location": "/git/repositorioLocal/#1-repositorio-local-desde-una-carpeta-existente", 
            "text": "Este caso es v\u00e1lido sea que ya poseemos un proyecto de desarrollo en nuestra computadora contenido en una carpeta o deseamos crear una carpeta e incluir los archivos de nuestro proyecto para luego inicializar un proyecto Git.   Creamos la carpeta donde alojaremos nuestro proyecto:  mkdir miProyectoDeSoftware  Luego nos introducimos en ella:   cd  miProyectoDeSoftware  E inicializamos un repositorio git:  git init   Directorio oculto .git Al inicializar un repositorio se incluye un directorio oculto llamado  .git  el cual contiene todos los archivos necesarios para el correcto funcionamiento de Git.     Acto seguido  agregamos los archivos de nuestro proyecto  (sitio web, aplicaci\u00f3n, etc.) al directorio.  Para comprobar que Git ha detectado los archivos nuevos que hemos incluido ejecutamos:   git status  Preparamos los cambios realizados en los archivos (se ubicar\u00e1n entonces en el  staging area ), ejecutando el comando:  git add .   Agregando archivos al \u00e1rea de preparaci\u00f3n Podemos agregar nuestros archivos al \u00e1rea de preparaci\u00f3n o  staging area  de varias maneras.     De a un archivo:  git add nombreDelArchivo  O todos los archivos de nuestro proyecto:  git add .     Por \u00faltimo, confirmamos las modificaciones realizadas en los archivos para que \u00e9stos pasen a formar parte del repositorio (directorio Git o  HEAD ):  git commit -m  Mensaje que explica el cambio realizado   A partir de ahora, el repositorio contiene una serie de archivos y la informaci\u00f3n guardada en la base de datos de Git de forma segura.", 
            "title": "1. Repositorio local desde una carpeta existente"
        }, 
        {
            "location": "/git/repositorioLocal/#2-repositorio-local-clonando-un-repositorio-remoto-existente", 
            "text": "Si deseamos obtener una copia de un repositorio Git existente \u2014por ejemplo, un proyecto en el que te gustar\u00eda contribuir\u2014 el comando que necesitas es  git clone . Su sintaxis general es:   git clone  [ url ]    Protocolos compatibles con Git Git permite usar distintos protocolos de transferencia: https://, git:// o el protocolo de transferencia SSH.", 
            "title": "2. Repositorio local clonando un repositorio remoto existente"
        }, 
        {
            "location": "/git/repositorioLocal/#21-clonando-un-repositorio-remoto-existente-ssh", 
            "text": "git clone git+ssh://usuario@192.168.0.200:/home/usuario/miRepositorio.git  Donde:   usuario  es el nombre de usuario en el servidor remoto.  192.168.0.200  el la direcci\u00f3n IP (o nombre de dominio) del servidor remoto.   /home/usuario/miRepositorio.git  es la ruta donde se ubica el repositorio en el servidor remoto.", 
            "title": "2.1. Clonando un repositorio remoto existente [SSH]"
        }, 
        {
            "location": "/git/repositorioLocal/#22-clonando-un-repositorio-remoto-existente-https", 
            "text": "git clone https://dominio.com/proyecto.git  Esto crea un directorio llamado  proyecto , inicializa un directorio  git  en su interior, descarga toda la informaci\u00f3n de ese repositorio y saca una copia de trabajo de la \u00faltima versi\u00f3n.   Clonando repositorios en otros directorios Si deseamos clonar un repositorio en una carpeta que contenga un nombre distinto al del repositorio original:   git clone https://dominio.com/proyecto.git miProyecto  Ese comando crear\u00e1 el directorio de destino llamado  miProyecto .", 
            "title": "2.2. Clonando un repositorio remoto existente [HTTPS]"
        }, 
        {
            "location": "/git/repositorioLocal/#23-que-acciones-podemos-realizar-en-un-repositorio-clonado", 
            "text": "Una vez clonado un repositorio remoto  podremos realizar las mismas acciones que si hubi\u00e9semos inicializado nuestro propio repositorio local , a saber: modificar archivos, agregarlos al \u00e1rea de preparaci\u00f3n (comando  git add ) y confirmar los cambios realizados (comando  git commit ) entre otras acciones posibles.", 
            "title": "2.3. \u00bfQue acciones podemos realizar en un repositorio clonado?"
        }, 
        {
            "location": "/git/servidorGit/", 
            "text": "Existen varias opciones para obtener un repositorio Git remoto y ponerlo a funcionar para que puedas colaborar con otras personas o compartir tu trabajo. En l\u00edneas generales se tratar\u00e1 de un \nservidor propio\n o de un \nservidor hospedado por terceros\n.\n\n\nEn cualquier caso, es preciso determinar que soluci\u00f3n o combinaci\u00f3n de soluciones es apropiada para nosotros y la empresa.\n\n\n1. Configurando de usuarios y claves\n\n\nVamos a avanzar en los ajustes de los accesos SSH en el lado del servidor. En este ejemplo, usar\u00e1s el m\u00e9todo de las authorized_keys (claves autorizadas) para autentificar a tus usuarios. Se asume que tienes un servidor en marcha, con una distribuci\u00f3n est\u00e1ndar de Linux, tal como Ubuntu. Comienzas creando un usuario git y una carpeta .ssh para \u00e9l.\n\n\n$ sudo adduser git\n$ su git\n$ \ncd\n\n$ mkdir .ssh \n chmod \n700\n .ssh\n$ touch .ssh/authorized_keys \n chmod \n600\n .ssh/authorized_keys\n\n\n\n\n\nY a continuaci\u00f3n a\u00f1ades las claves p\u00fablicas de los desarrolladores al archivo authorized_keys del usuario git que has creado. Suponiendo que hayas recibido las claves por correo electr\u00f3nico y que las has guardado en archivos temporales. Y recordando que las claves p\u00fablicas son algo as\u00ed como:\n\n\n$ cat /tmp/id_rsa.juan.pub\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCB007n/ww+ouN4gSLKssMxXnBOvf9LGt4L\nojG6rs6hPB09j9R/T17/x4lhJA0F3FR1rP6kYBRsWj2aThGw6HXLm9/5zytK6Ztg3RPKK+4k\nYjh6541NYsnEAZuXz0jTTyAUfrtU3Z5E003C4oxOj6H0rfIF1kKI9MAQLMdpGW1GYEIgS9Ez\nSdfd8AcCIicTDWbqLAcU4UpkaX8KyGlLwsNuuGztobF8m72ALC/nLF6JLtPofwFBlgc+myiv\nO7TCUSBdLQlgMVOFq1I2uPWQOkOWQAHukEOmfjy2jctxSDBQ220ymjaNsHT4kgtZg2AYYgPq\ndAv8JggJICUvax2T9va5 gsg-keypair\n\n\n\n\n\nNo tienes m\u00e1s que a\u00f1adirlas al archivo authorized_keys dentro del directorio .ssh:\n\n\n$ cat /tmp/id_rsa.juan.pub \n ~/.ssh/authorized_keys\n$ cat /tmp/id_rsa.pedro.pub \n ~/.ssh/authorized_keys\n$ cat /tmp/id_rsa.jessica.pub \n ~/.ssh/authorized_key\n\n\n\n\n\n2. Git en un servidor propio\n\n\nMantener \ntu propio servidor\n te da control y te permite correr tu servidor dentro de tu propio cortafuegos, pero tal servidor generalmente requiere una importante cantidad de tu tiempo para configurar y mantener. \n\n\nEn l\u00edneas generales tendremos que crear un repositorio Git desnudo (\nbare\n) o tambi\u00e9n llamado vac\u00edo. Por convenci\u00f3n, los directorios de repositorios desnudos o vac\u00edos finalizan con la extensi\u00f3n \n.git\n.\n\n\n2.1. Partiendo de un repositorio Git existente\n\n\nPara configurar por primera vez un servidor de Git, hay que exportar un repositorio existente en un nuevo repositorio vac\u00edo, es decir, un repositorio que no contiene un directorio de trabajo. Esto es generalmente f\u00e1cil de hacer.\n\n\nEn primer lugar clonamos un repositorio Git existente: \n\n\ngit clone --bare miRepositorioGitExistente miNuevoRepositorio.git\n\n\n\n\n\nY luego permitimos que el repositorio sea compartido: \n\n\ngit config core.sharedRepository \ntrue\n\n\n\n\n\n\nSin embargo, ambas \u00f3rdenes se pueden ejecutar en una sola: \n\n\ngit clone --bare --shared miRepositorioGitExistente miNuevoRepositorio.git\n\n\n\n\n\n2.2. Partiendo desde de una carpeta vac\u00eda\n\n\nOtra de las maneras de crear un repositorio vac\u00edo es partiendo de una carpeta vac\u00eda sobre la cual inicializaremos un repositorio Git. \n\n\nPara ello, creamos el directorio que contendr\u00e1 el repositorio: \n\n\nmkdir miRepositorio.git\n\n\n\n\n\nE ingresamos en \u00e9l:\n\n\ncd\n miRepositorio.git\n\n\n\n\n\nE inicializamos un repositorio vac\u00edo y compartido:\n\n\ngit init --bare --shared\n\n\n\n\n\n3. Git en un servidor hospedado\n\n\nSi almacenas tus datos en un \nservidor hospedado\n, es f\u00e1cil de configurar y mantener; sin embargo, tienes que ser capaz de mantener tu c\u00f3digo en los servidores de alguien m\u00e1s, y algunas organizaciones no te lo permitir\u00e1n.\n\n\n\n\nExisten varios sitios que ofrecen un servidor Git en la nube como \nGitHub\n, \nGitLab\n, \nBitbucket\n y \nCoding\n, entre otros. \n\n\nEn l\u00edneas generales, estos sitios permiten crear de manera gratuita un n\u00famero ilimitado de repositorios p\u00fablicos y repositorios privados con cantidad ilimitada de colaboradores en su versi\u00f3n paga.\n\n\n3.1. C\u00f3mo crear un repositorio en GitHub\n\n\nProcederemos a crear un repositorio p\u00fablico en GitHub (gratuito). Accedemos a \nhttps://github.com/\n y hacemos clic sobre la leyenda \nSign up\n:\n\n\n\n\nRellenamos el formulario con los datos solicitados. Luego de hacer clic sobre el bot\u00f3n \nCreate an account\n tendremos que iniciar sesi\u00f3n en nuestra cuenta de correo electr\u00f3nico (la que suministramos al registrarnos) y hacer clic sobre el enlace que encontraremos en el mensaje de confirmaci\u00f3n de creaci\u00f3n de la cuenta. \n\n\n\n\nYa dentro de la cuenta, en el men\u00fa desplegable superior seleccionaremos la opci\u00f3n \nNew repository\n para crear un nuevo repositorio p\u00fablico (en la imagen pueden apreciarse algunos repositorios ya creados por el usuario):\n\n\n\n\nS\u00f3lo restar\u00e1 completar los datos solicitados para la creaci\u00f3n del repositorio y hacer clic sobre el bot\u00f3n \nCreate repository\n: \n\n\n\n\nFinalmente, se nos sugerir\u00e1 realizar algunas acciones para sincronizar nuestro repositorio local con el repositorio remoto, tema que discuteremos en profundidad \nen otra secci\u00f3n\n: \n\n\n\n\n\n\nPractic\u00e1 con Git y GitHub\nExisten muchos tutoriales en l\u00ednea que explican el funcinamiento de Git y GitHub. Uno particularmente \u00fatil y sencillo pod\u00e9s encontrarlo en: \nhttps://try.github.io\n\n\n\n\n\n\n4. Sincronizando repositorios\n\n\nPara poder sincronizar nuestro repositorio local con un repositorio remoto tendremos que realizar algunas acciones extra que ser\u00e1n explicadas en detalle en la secci\u00f3n \nTrabajando con remotos", 
            "title": "Git en el servidor"
        }, 
        {
            "location": "/git/servidorGit/#1-configurando-de-usuarios-y-claves", 
            "text": "Vamos a avanzar en los ajustes de los accesos SSH en el lado del servidor. En este ejemplo, usar\u00e1s el m\u00e9todo de las authorized_keys (claves autorizadas) para autentificar a tus usuarios. Se asume que tienes un servidor en marcha, con una distribuci\u00f3n est\u00e1ndar de Linux, tal como Ubuntu. Comienzas creando un usuario git y una carpeta .ssh para \u00e9l.  $ sudo adduser git\n$ su git\n$  cd \n$ mkdir .ssh   chmod  700  .ssh\n$ touch .ssh/authorized_keys   chmod  600  .ssh/authorized_keys  Y a continuaci\u00f3n a\u00f1ades las claves p\u00fablicas de los desarrolladores al archivo authorized_keys del usuario git que has creado. Suponiendo que hayas recibido las claves por correo electr\u00f3nico y que las has guardado en archivos temporales. Y recordando que las claves p\u00fablicas son algo as\u00ed como:  $ cat /tmp/id_rsa.juan.pub\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCB007n/ww+ouN4gSLKssMxXnBOvf9LGt4L\nojG6rs6hPB09j9R/T17/x4lhJA0F3FR1rP6kYBRsWj2aThGw6HXLm9/5zytK6Ztg3RPKK+4k\nYjh6541NYsnEAZuXz0jTTyAUfrtU3Z5E003C4oxOj6H0rfIF1kKI9MAQLMdpGW1GYEIgS9Ez\nSdfd8AcCIicTDWbqLAcU4UpkaX8KyGlLwsNuuGztobF8m72ALC/nLF6JLtPofwFBlgc+myiv\nO7TCUSBdLQlgMVOFq1I2uPWQOkOWQAHukEOmfjy2jctxSDBQ220ymjaNsHT4kgtZg2AYYgPq\ndAv8JggJICUvax2T9va5 gsg-keypair  No tienes m\u00e1s que a\u00f1adirlas al archivo authorized_keys dentro del directorio .ssh:  $ cat /tmp/id_rsa.juan.pub   ~/.ssh/authorized_keys\n$ cat /tmp/id_rsa.pedro.pub   ~/.ssh/authorized_keys\n$ cat /tmp/id_rsa.jessica.pub   ~/.ssh/authorized_key", 
            "title": "1. Configurando de usuarios y claves"
        }, 
        {
            "location": "/git/servidorGit/#2-git-en-un-servidor-propio", 
            "text": "Mantener  tu propio servidor  te da control y te permite correr tu servidor dentro de tu propio cortafuegos, pero tal servidor generalmente requiere una importante cantidad de tu tiempo para configurar y mantener.   En l\u00edneas generales tendremos que crear un repositorio Git desnudo ( bare ) o tambi\u00e9n llamado vac\u00edo. Por convenci\u00f3n, los directorios de repositorios desnudos o vac\u00edos finalizan con la extensi\u00f3n  .git .", 
            "title": "2. Git en un servidor propio"
        }, 
        {
            "location": "/git/servidorGit/#21-partiendo-de-un-repositorio-git-existente", 
            "text": "Para configurar por primera vez un servidor de Git, hay que exportar un repositorio existente en un nuevo repositorio vac\u00edo, es decir, un repositorio que no contiene un directorio de trabajo. Esto es generalmente f\u00e1cil de hacer.  En primer lugar clonamos un repositorio Git existente:   git clone --bare miRepositorioGitExistente miNuevoRepositorio.git  Y luego permitimos que el repositorio sea compartido:   git config core.sharedRepository  true   Sin embargo, ambas \u00f3rdenes se pueden ejecutar en una sola:   git clone --bare --shared miRepositorioGitExistente miNuevoRepositorio.git", 
            "title": "2.1. Partiendo de un repositorio Git existente"
        }, 
        {
            "location": "/git/servidorGit/#22-partiendo-desde-de-una-carpeta-vacia", 
            "text": "Otra de las maneras de crear un repositorio vac\u00edo es partiendo de una carpeta vac\u00eda sobre la cual inicializaremos un repositorio Git.   Para ello, creamos el directorio que contendr\u00e1 el repositorio:   mkdir miRepositorio.git  E ingresamos en \u00e9l:  cd  miRepositorio.git  E inicializamos un repositorio vac\u00edo y compartido:  git init --bare --shared", 
            "title": "2.2. Partiendo desde de una carpeta vac\u00eda"
        }, 
        {
            "location": "/git/servidorGit/#3-git-en-un-servidor-hospedado", 
            "text": "Si almacenas tus datos en un  servidor hospedado , es f\u00e1cil de configurar y mantener; sin embargo, tienes que ser capaz de mantener tu c\u00f3digo en los servidores de alguien m\u00e1s, y algunas organizaciones no te lo permitir\u00e1n.   Existen varios sitios que ofrecen un servidor Git en la nube como  GitHub ,  GitLab ,  Bitbucket  y  Coding , entre otros.   En l\u00edneas generales, estos sitios permiten crear de manera gratuita un n\u00famero ilimitado de repositorios p\u00fablicos y repositorios privados con cantidad ilimitada de colaboradores en su versi\u00f3n paga.", 
            "title": "3. Git en un servidor hospedado"
        }, 
        {
            "location": "/git/servidorGit/#31-como-crear-un-repositorio-en-github", 
            "text": "Procederemos a crear un repositorio p\u00fablico en GitHub (gratuito). Accedemos a  https://github.com/  y hacemos clic sobre la leyenda  Sign up :   Rellenamos el formulario con los datos solicitados. Luego de hacer clic sobre el bot\u00f3n  Create an account  tendremos que iniciar sesi\u00f3n en nuestra cuenta de correo electr\u00f3nico (la que suministramos al registrarnos) y hacer clic sobre el enlace que encontraremos en el mensaje de confirmaci\u00f3n de creaci\u00f3n de la cuenta.    Ya dentro de la cuenta, en el men\u00fa desplegable superior seleccionaremos la opci\u00f3n  New repository  para crear un nuevo repositorio p\u00fablico (en la imagen pueden apreciarse algunos repositorios ya creados por el usuario):   S\u00f3lo restar\u00e1 completar los datos solicitados para la creaci\u00f3n del repositorio y hacer clic sobre el bot\u00f3n  Create repository :    Finalmente, se nos sugerir\u00e1 realizar algunas acciones para sincronizar nuestro repositorio local con el repositorio remoto, tema que discuteremos en profundidad  en otra secci\u00f3n :     Practic\u00e1 con Git y GitHub Existen muchos tutoriales en l\u00ednea que explican el funcinamiento de Git y GitHub. Uno particularmente \u00fatil y sencillo pod\u00e9s encontrarlo en:  https://try.github.io", 
            "title": "3.1. C\u00f3mo crear un repositorio en GitHub"
        }, 
        {
            "location": "/git/servidorGit/#4-sincronizando-repositorios", 
            "text": "Para poder sincronizar nuestro repositorio local con un repositorio remoto tendremos que realizar algunas acciones extra que ser\u00e1n explicadas en detalle en la secci\u00f3n  Trabajando con remotos", 
            "title": "4. Sincronizando repositorios"
        }, 
        {
            "location": "/git/trabajandoConRemotos/", 
            "text": "Como se mencion\u00f3 con anterioridad, la mayor\u00eda de las acciones de Git se efect\u00faan de manera local, en la m\u00e1quina del cliente. Sin embargo, podemos \nsincronizar los archivos de nuestro repositorio local con un repositorio remoto\n. Para ello debemos agregar la direcci\u00f3n del servidor o ubicaci\u00f3n f\u00edsica (si se trata de un repositorio local) del repositorio con el cual deseamos sincronizar nuestro repositorio. \n\n\nPodemos encontrarnos frente a dos situaciones: \n\n\na. Hemos creado nuestro \nrepositorio local \"desde cero\"\n y deseamos vincularlo con un repositorio remoto. En ese caso, necesariamente tendremos que seguir los pasos descriptos en esta gu\u00eda. \n\n\nb. Nos encontramos trabajando localmente sobre un \nrepositorio que hemos clonado\n desde un repositorio remoto. En ese caso, nuestro repositorio local ya poseer\u00e1 un origen remoto (que ser\u00e1 la direcci\u00f3n del repositorio remoto que clonamos en nuestra computadora). No obstante, de manera opcional, podemos agregarle otros origenes remotos con los que deseemos sincronizar, siguiendo los pasos descriptos en esta gu\u00eda.\n\n\n1. Agregando un origen remoto\n\n\nSi quisieramos \nsincronizar nuestro repositorio local con un repositorio remoto\n, primero deber\u00edamos agregar el origen remoto, es decir, la direcci\u00f3n del servidor remoto con el que deseamos sincronizar nuestros archivos. Cabe aclarar que para poder realizar esta acci\u00f3n el administrador del repositorio remoto debe habernos otorgados los permisos correspondientes. \n\n\nLa sintaxis general para realizar esta acci\u00f3n es: \n\n\ngit remote add \n[\nnombreRepositorioRemoto\n]\n \n[\nurlRepositorioRemoto\n]\n\n\n\n\n\n\nDonde:\n\n\n\n\n[nombreRepositorioRemoto]\n Es el nombre del origen remoto (comunmente \norigin\n aunque puede ser cualquier otro)\n\n\n[urlRepositorioRemoto]\n Es la direcci\u00f3n URL o ruta hacia el repositorio remoto que deseamos vincular\n\n\n\n\n1.1. Agregando repositorio remoto [SSH]\n\n\ngit remote add origin usuario@192.168.0.200:/home/usuario/miRepositorio.git\n\n\n\n\n\nDonde:\n\n\n\n\norigin\n es el nombre que le asignamos al repositorio remoto\n\n\nusuario\n es el nombre de usuario en el servidor remoto.\n\n\n192.168.0.200\n es la direcci\u00f3n IP (o nombre de dominio) del servidor remoto. \n\n\n/home/usuario/miRepositorio.git\n es la ruta donde se ubica el repositorio en el servidor remoto.\n\n\n\n\n1.2. Agregando repositorio remoto [HTTPS]\n\n\ngit remote add origin https://github.com/usuario/repositorio.git\n\n\n\n\n\nDonde:\n\n\n\n\norigin\n es el nombre que le asignamos al repositorio remoto\n\n\nhttps://github.com\n el el nombre de dominio del servidor remoto.\n\n\nusuario\n es el nombre de usuario en el servidor remoto.\n\n\nrepositorio.git\n es el nombre repositorio en el servidor remoto.\n\n\n\n\n2. Visualizar or\u00edgenes remotos\n\n\nPara ver los remotos que tenemos configurados, debemos ejecutar:\n\n\ngit remote\n\n\n\n\n\nDicho comando \nmostrar\u00e1 los nombres de cada uno de los remotos que tenemos especificados\n. Si hemos clonado un repositorio, deber\u00edamos ver al menos \norigin\n (origen, en ingl\u00e9s); este es el nombre que por defecto Git le da al servidor del que has clonado.\n\n\nTambi\u00e9n podemos pasar la opci\u00f3n -v, la cual \nmuestra las URLs que Git ha asociado al nombre del remoto\n y que ser\u00e1n usadas al leer y escribir en ese remoto:\n\n\ngit remote -v\n\n\n\n\n\nSi tenemos m\u00e1s de un origen remoto, el comando los listar\u00e1 todos. \n\n\n\n\nRemote name already exists\nFrente a este posible error com\u00fan, podemos elegir entre las siguiente soluciones: \n\n\n\n\nUsando un nuevo nombre para el origen remoto\n\n\nRenombrando el origen remoto\n\n\nEliminando el origen remoto\n\n\n\n\n\n\n\n\n3. Modificando un origen remoto\n\n\nPodemos modificar tanto el nombre de un remoto (es decir, su alias) as\u00ed como la direcci\u00f3n URL del mismo. \n\n\n3.1. Modificando el nombre de un remoto\n\n\nSi queremos cambiar el nombre de un remoto (alias) tendremos que recurrir al siguiente comando: \n\n\ngit remote rename \n[\nnombreRepositorioRemotoViejo\n]\n \n[\nnombreRepositorioRemotoNuevo\n]\n\n\n\n\n\n\nPor ejemplo, si quisi\u00e9semos cambiar el nombre de un repositorio remoto llamado \"origin\" a \"juan\", lo haremos de la siguiente manera: \n\n\ngit remote rename origin juan\n\n\n\n\n\nEs importante destacar que al hacer esto tambi\u00e9n cambiamos el nombre de las ramas remotas. Por lo tanto, lo que antes estaba referenciado como origin/master ahora lo est\u00e1 como juan/master.\n\n\n\n\nEl nombre \norigin\nPor defecto, Git emplea el nombre \norigin\n para referirse al origen remoto cada vez que clonamos un repositorio. Esto constituye una conveci\u00f3n y, por lo tanto, podemos cambiarlo por otro nombre si as\u00ed lo deseamos.\n\n\n\n\n\n\n3.2. Asignando un nuevo nombre para un remoto\n\n\nExiste otra manera -tal vez menos elegante- de modificar el nombre de un remoto. Teniendo en cuenta que hemos agregado un origen remoto de la siguiente manera: \n\n\ngit remote add origin git@github.com:usuario/repositorio.git  \n\n\n\n\n\nPodemos modificar el nombre del remoto por otro: \n\n\ngit remote add \n[\nnuevoNombreRepositorioRemoto\n]\n git@github.com:usuario/repositorio.git  \n\n\n\n\n\n3.3. Modificando la URL de un remoto\n\n\nOtra opci\u00f3n posible es modificar la URL del repositorio remoto seg\u00fan: \n\n\ngit remote set-url \n[\nnombreRepositorioRemoto\n]\n \n[\nnuevaURL\n]\n\n\n\n\n\n\nPor ejemplo: \n\n\ngit remote set-url origin https://github.com/usuario/repositorio.git\n\n\n\n\n\n4. Eliminando un origen remoto\n\n\nSi por alguna raz\u00f3n queremos eliminar eliminar un remoto -ya sea que hemos cambiado de servidor o no queremos seguir utilizando un mirror, o quiz\u00e1s un colaborador a dejado de trabajar en el proyecto- podemos eliminar el origen remoto ateni\u00e9ndonos a la siguiente sintaxis del comando:\n\n\ngit remote rm \n[\nnombreRepositorioRemoto\n]\n \n\n\n\n\n\nPor ejemplo: \n\n\ngit remote rm miapp\n\n\n\n\n\n5. Recibiendo desde nuestros repositorios remotos\n\n\nPara recuperar datos de tus repositorios remotos podemos ejecutar:\n\n\n$ git fetch \n[\nnombreRepositorioRemoto\n]\n \n[\nrama\n]\n\n\n\n\n\n\nEste comando recupera todos los datos del proyecto remoto que no tengamos todav\u00eda.\n\n\nSi clonamos un repositorio, el comando a\u00f1ade autom\u00e1ticamente ese repositorio remoto con el nombre de \"origin\". Por tanto, el comando: \n\n\ngit fetch origin master\n\n\n\n\n\nRecupera toda la informaci\u00f3n enviada a ese servidor desde que lo clonamos (o desde la \u00faltima vez que ejecutamos \nfetch\n). \n\n\n\n\nUso del comando \nfetch\nEs importante tener en cuenta que el comando \nfetch\n s\u00f3lo recupera la informaci\u00f3n y la pone en nuestro repositorio local. \nNo la une autom\u00e1ticamente con nuestro trabajo ni modifica aquello en lo que estamos trabajando\n. \n\n\n\n\n\n\nEstaremos en condiciones de verificar manualmente las diferencias. Para \nfusionar los cambios descargados desde el repositorio remoto con nuestro repositorio local\n, deberemos ejecutar: \n\n\ngit merge origin/master\n\n\n\n\n\nExiste otra comando que combina, de una vez, las acciones de los comandos \nfetch\n y \nmerge\n: el comando \npull\n: \n\n\ngit pull \n[\nnombreRepositorioRemoto\n]\n \n[\nrama\n]\n\n\n\n\n\n\nAl ejecutar \ngit pull\n, por lo general se recupera la informaci\u00f3n del servidor remoto que clonamos, y autom\u00e1ticamente se intenta unir con el c\u00f3digo con el que estamos trabajando actualmente.\n\n\n\n\nError al intentar fusionar repositorios\nSi creamos un repositorio local y agregamos un origen (repositorio) externo, al intentar fusionar datos entre ambos obtendremos el siguiente error: \n\n\nfatal: refusing to merge unrelated histories\n \n\n\nEsto es as\u00ed porque de forma predeterminada, los comandos de fusi\u00f3n de git, como \nmerge\n y \npull\n se niegan a fusionar historias que no comparten un antecesor com\u00fan (es decir, se niegan a fusionar historias de dos proyectos que comenzaron sus vidas de forma independiente). Sin embargo, existe una opci\u00f3n para anular esta medida de seguridad: \n--allow-unrelated-histories\n. Entonces, si queremos ejecutar el comando \npull\n lo haremos de la siguiente manera:\n\n\ngit pull [nombreRemoto] [rama] --allow-unrelated-histories\n\n\n\n\n\n\n\n\nDiferencia entre fetch-merge y pull\n\n\n6. Enviando hacia nuestros repositorios remotos\n\n\nCuando tu proyecto se encuentra en un estado que deseamos compartir, tenemos que enviarlo a un repositorio remoto. El comando que nos permite hacer esto es sencillo: \n\n\ngit push \n[\nnombreRepositorioRemoto\n][\nrama\n]\n\n\n\n\n\n\nPor ejemplo, si queremos enviar nuestra rama (master) a nuestro servidor remoto (origin), ejecutar\u00edamos el siguiente comando:\n\n\n$ git push origin master\n\n\n\n\n\n\n\nUso del comando \npull\nEste comando funciona \u00fanicamente si hemos clonado desde un servidor remoto o agregado un origen remoto en el que tengamos permiso de escritura, y nadie ha enviado informaci\u00f3n mientras tanto. Si nosotros y otra persona clonamos un repositorio a la vez, y otro env\u00eda su informaci\u00f3n y luego enviamos la nuestra, nuestro env\u00edo ser\u00e1 rechazado. En primer lugar, tendremos que \"bajarnos\" (\npull\n) el trabajo de la otra persona e incorporarlo en el nuestro para que se nos permita hacer un env\u00edo (\npush\n).", 
            "title": "Trabajando con remotos"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#1-agregando-un-origen-remoto", 
            "text": "Si quisieramos  sincronizar nuestro repositorio local con un repositorio remoto , primero deber\u00edamos agregar el origen remoto, es decir, la direcci\u00f3n del servidor remoto con el que deseamos sincronizar nuestros archivos. Cabe aclarar que para poder realizar esta acci\u00f3n el administrador del repositorio remoto debe habernos otorgados los permisos correspondientes.   La sintaxis general para realizar esta acci\u00f3n es:   git remote add  [ nombreRepositorioRemoto ]   [ urlRepositorioRemoto ]   Donde:   [nombreRepositorioRemoto]  Es el nombre del origen remoto (comunmente  origin  aunque puede ser cualquier otro)  [urlRepositorioRemoto]  Es la direcci\u00f3n URL o ruta hacia el repositorio remoto que deseamos vincular", 
            "title": "1. Agregando un origen remoto"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#11-agregando-repositorio-remoto-ssh", 
            "text": "git remote add origin usuario@192.168.0.200:/home/usuario/miRepositorio.git  Donde:   origin  es el nombre que le asignamos al repositorio remoto  usuario  es el nombre de usuario en el servidor remoto.  192.168.0.200  es la direcci\u00f3n IP (o nombre de dominio) del servidor remoto.   /home/usuario/miRepositorio.git  es la ruta donde se ubica el repositorio en el servidor remoto.", 
            "title": "1.1. Agregando repositorio remoto [SSH]"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#12-agregando-repositorio-remoto-https", 
            "text": "git remote add origin https://github.com/usuario/repositorio.git  Donde:   origin  es el nombre que le asignamos al repositorio remoto  https://github.com  el el nombre de dominio del servidor remoto.  usuario  es el nombre de usuario en el servidor remoto.  repositorio.git  es el nombre repositorio en el servidor remoto.", 
            "title": "1.2. Agregando repositorio remoto [HTTPS]"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#2-visualizar-origenes-remotos", 
            "text": "Para ver los remotos que tenemos configurados, debemos ejecutar:  git remote  Dicho comando  mostrar\u00e1 los nombres de cada uno de los remotos que tenemos especificados . Si hemos clonado un repositorio, deber\u00edamos ver al menos  origin  (origen, en ingl\u00e9s); este es el nombre que por defecto Git le da al servidor del que has clonado.  Tambi\u00e9n podemos pasar la opci\u00f3n -v, la cual  muestra las URLs que Git ha asociado al nombre del remoto  y que ser\u00e1n usadas al leer y escribir en ese remoto:  git remote -v  Si tenemos m\u00e1s de un origen remoto, el comando los listar\u00e1 todos.    Remote name already exists Frente a este posible error com\u00fan, podemos elegir entre las siguiente soluciones:    Usando un nuevo nombre para el origen remoto  Renombrando el origen remoto  Eliminando el origen remoto", 
            "title": "2. Visualizar or\u00edgenes remotos"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#3-modificando-un-origen-remoto", 
            "text": "Podemos modificar tanto el nombre de un remoto (es decir, su alias) as\u00ed como la direcci\u00f3n URL del mismo.", 
            "title": "3. Modificando un origen remoto"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#31-modificando-el-nombre-de-un-remoto", 
            "text": "Si queremos cambiar el nombre de un remoto (alias) tendremos que recurrir al siguiente comando:   git remote rename  [ nombreRepositorioRemotoViejo ]   [ nombreRepositorioRemotoNuevo ]   Por ejemplo, si quisi\u00e9semos cambiar el nombre de un repositorio remoto llamado \"origin\" a \"juan\", lo haremos de la siguiente manera:   git remote rename origin juan  Es importante destacar que al hacer esto tambi\u00e9n cambiamos el nombre de las ramas remotas. Por lo tanto, lo que antes estaba referenciado como origin/master ahora lo est\u00e1 como juan/master.   El nombre  origin Por defecto, Git emplea el nombre  origin  para referirse al origen remoto cada vez que clonamos un repositorio. Esto constituye una conveci\u00f3n y, por lo tanto, podemos cambiarlo por otro nombre si as\u00ed lo deseamos.", 
            "title": "3.1. Modificando el nombre de un remoto"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#32-asignando-un-nuevo-nombre-para-un-remoto", 
            "text": "Existe otra manera -tal vez menos elegante- de modificar el nombre de un remoto. Teniendo en cuenta que hemos agregado un origen remoto de la siguiente manera:   git remote add origin git@github.com:usuario/repositorio.git    Podemos modificar el nombre del remoto por otro:   git remote add  [ nuevoNombreRepositorioRemoto ]  git@github.com:usuario/repositorio.git", 
            "title": "3.2. Asignando un nuevo nombre para un remoto"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#33-modificando-la-url-de-un-remoto", 
            "text": "Otra opci\u00f3n posible es modificar la URL del repositorio remoto seg\u00fan:   git remote set-url  [ nombreRepositorioRemoto ]   [ nuevaURL ]   Por ejemplo:   git remote set-url origin https://github.com/usuario/repositorio.git", 
            "title": "3.3. Modificando la URL de un remoto"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#4-eliminando-un-origen-remoto", 
            "text": "Si por alguna raz\u00f3n queremos eliminar eliminar un remoto -ya sea que hemos cambiado de servidor o no queremos seguir utilizando un mirror, o quiz\u00e1s un colaborador a dejado de trabajar en el proyecto- podemos eliminar el origen remoto ateni\u00e9ndonos a la siguiente sintaxis del comando:  git remote rm  [ nombreRepositorioRemoto ]    Por ejemplo:   git remote rm miapp", 
            "title": "4. Eliminando un origen remoto"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#5-recibiendo-desde-nuestros-repositorios-remotos", 
            "text": "Para recuperar datos de tus repositorios remotos podemos ejecutar:  $ git fetch  [ nombreRepositorioRemoto ]   [ rama ]   Este comando recupera todos los datos del proyecto remoto que no tengamos todav\u00eda.  Si clonamos un repositorio, el comando a\u00f1ade autom\u00e1ticamente ese repositorio remoto con el nombre de \"origin\". Por tanto, el comando:   git fetch origin master  Recupera toda la informaci\u00f3n enviada a ese servidor desde que lo clonamos (o desde la \u00faltima vez que ejecutamos  fetch ).    Uso del comando  fetch Es importante tener en cuenta que el comando  fetch  s\u00f3lo recupera la informaci\u00f3n y la pone en nuestro repositorio local.  No la une autom\u00e1ticamente con nuestro trabajo ni modifica aquello en lo que estamos trabajando .     Estaremos en condiciones de verificar manualmente las diferencias. Para  fusionar los cambios descargados desde el repositorio remoto con nuestro repositorio local , deberemos ejecutar:   git merge origin/master  Existe otra comando que combina, de una vez, las acciones de los comandos  fetch  y  merge : el comando  pull :   git pull  [ nombreRepositorioRemoto ]   [ rama ]   Al ejecutar  git pull , por lo general se recupera la informaci\u00f3n del servidor remoto que clonamos, y autom\u00e1ticamente se intenta unir con el c\u00f3digo con el que estamos trabajando actualmente.   Error al intentar fusionar repositorios Si creamos un repositorio local y agregamos un origen (repositorio) externo, al intentar fusionar datos entre ambos obtendremos el siguiente error:   fatal: refusing to merge unrelated histories    Esto es as\u00ed porque de forma predeterminada, los comandos de fusi\u00f3n de git, como  merge  y  pull  se niegan a fusionar historias que no comparten un antecesor com\u00fan (es decir, se niegan a fusionar historias de dos proyectos que comenzaron sus vidas de forma independiente). Sin embargo, existe una opci\u00f3n para anular esta medida de seguridad:  --allow-unrelated-histories . Entonces, si queremos ejecutar el comando  pull  lo haremos de la siguiente manera:  git pull [nombreRemoto] [rama] --allow-unrelated-histories     Diferencia entre fetch-merge y pull", 
            "title": "5. Recibiendo desde nuestros repositorios remotos"
        }, 
        {
            "location": "/git/trabajandoConRemotos/#6-enviando-hacia-nuestros-repositorios-remotos", 
            "text": "Cuando tu proyecto se encuentra en un estado que deseamos compartir, tenemos que enviarlo a un repositorio remoto. El comando que nos permite hacer esto es sencillo:   git push  [ nombreRepositorioRemoto ][ rama ]   Por ejemplo, si queremos enviar nuestra rama (master) a nuestro servidor remoto (origin), ejecutar\u00edamos el siguiente comando:  $ git push origin master   Uso del comando  pull Este comando funciona \u00fanicamente si hemos clonado desde un servidor remoto o agregado un origen remoto en el que tengamos permiso de escritura, y nadie ha enviado informaci\u00f3n mientras tanto. Si nosotros y otra persona clonamos un repositorio a la vez, y otro env\u00eda su informaci\u00f3n y luego enviamos la nuestra, nuestro env\u00edo ser\u00e1 rechazado. En primer lugar, tendremos que \"bajarnos\" ( pull ) el trabajo de la otra persona e incorporarlo en el nuestro para que se nos permita hacer un env\u00edo ( push ).", 
            "title": "6. Enviando hacia nuestros repositorios remotos"
        }, 
        {
            "location": "/git/ramas/", 
            "text": "Las ramas son caminos que puede tomar el desarrollo de un software, algo que ocurre naturalmente para resolver problemas o crear nuevas funcionalidades. En la pr\u00e1ctica permiten que nuestro proyecto pueda tener diversos estados y que los desarrolladores sean capaces de pasar de uno a otro de una manera \u00e1gil. Cuando inicializamos un proyecto con Git autom\u00e1ticamente nos encontramos en una rama a la que se denomina \"master\". \n\n\n\n\nLa rama master\nLa rama \u201cmaster\u201d en Git no es una rama especial. Es como cualquier otra rama. La \u00fanica raz\u00f3n por la cual aparece en casi todos los repositorios es porque es la que crea por defecto el comando git init y la gente no se molesta en cambiarle el nombre.\n\n\n\n\n\n\nCrear una rama nueva\n\n\n\u00bfQu\u00e9 sucede cuando creas una nueva rama? Simplemente se crea un nuevo apuntador para que lo podamos moverlo libremente. Por ejemplo, supongamos que queremos crear una rama nueva denominada \"testing\". Para ello, ejecutaremos el comando: \n\n\ngit branch testing\n\n\n\n\n\nEsto crear\u00e1 un nuevo apuntador apuntando a la misma confirmaci\u00f3n donde estemos actualmente.\n\n\n\n\nY, \u00bfc\u00f3mo sabe Git en qu\u00e9 rama estamos en este momento? Mediante un apuntador especial denominado HEAD. Este apuntador se ubica en la rama local en la que estemos en ese momento, en este caso la rama \nmaster\n; pues \nel comando \ngit branch\n solamente crea una nueva rama, y no salta a dicha rama\n.\n\n\n\n\nCambiar de Rama\n\n\nPara saltar de una rama a otra, tenemos que utilizar el comando \ngit checkout\n. Hagamos una prueba, saltando a la rama \ntesting\n reci\u00e9n creada:\n\n\ngit checkout testing\n\n\n\n\n\nEsto mueve el apuntador HEAD a la rama testing.\n\n\n\n\nObservamos algo interesante: la rama testing avanza, mientras que la rama master permanece en la confirmaci\u00f3n donde estaba cuando lanzaste el comando git checkout para saltar. \n\n\n\n\nVolvamos ahora a la rama master:\n\n\ngit checkout master\n\n\n\n\n\n\n\n\n\nSaltando entre ramas\nEs importante destacar que cuando saltas a una rama en Git, los archivos de tu directorio de trabajo cambian. Si saltas a una rama antigua, tu directorio de trabajo retroceder\u00e1 para verse como lo hac\u00eda la \u00faltima vez que confirmaste un cambio en dicha rama. Si Git no puede hacer el cambio limpiamente, no te dejar\u00e1 saltar.\n\n\n\n\n\n\nAhora el historial de nuestro proyecto diverge. Hemos creado una rama y saltado a ella, hemos trabajado sobre ella; hemos vuelto a la rama original, y hemos trabajado tambi\u00e9n sobre ella. Los cambios realizados en ambas sesiones de trabajo est\u00e1n aislados en ramas independientes: podemos saltar libremente de una a otra seg\u00fan estimemos oportuno.\n\n\n\n\nTip sobre la creaci\u00f3n de ramas\nPara crear una nueva rama y saltar a ella, en un solo paso, podemos utilizar el comando:\n\n\ngit checkout -b nuevaRama\n\n\n\n\n\n\nEliminar una rama\n\n\nPara borrar una rama utilizamos el sencillo comando: \n\n\ngit branch -d ramaABorrar\n\n\n\n\n\nFusionar ramas\n\n\nEs probable que luego de un tiempo de trabajar sobre una rama que hallamos creado quisi\u00e9ramos fusionarla con la rama principal. Para ello, debemos asegurarnos de estar posicionandos en la rama principal (comunmente llamada \nmaster\n) y ejecutar el comando: \n\n\ngit merge ramaAFusionar\n\n\n\n\n\nDe esta manera, Git fusionar\u00e1 los cambios hechos en la rama alternativa con la rama principal. \n\n\nEstudio de caso: uso de ramas\n\n\nVamos a presentar un ejemplo simple de ramificar y de fusionar, con un flujo de trabajo que se podr\u00eda presentar en la realidad. Imagina que sigues los siguientes pasos:\n\n\n\n\n\n\nTrabajamos en un sitio web.\n\n\n\n\n\n\nCreamos una rama para un nuevo tema sobre el que queremos trabajar.\n\n\n\n\n\n\nRealizamos algo de trabajo en esa rama.\n\n\n\n\n\n\nEn este momento, recibimos una llamada avis\u00e1ndonos de un problema cr\u00edtico que tenemos que resolver. Y seguimos los siguientes pasos:\n\n\n\n\n\n\nVolvemos a la rama de producci\u00f3n original.\n\n\n\n\n\n\nCreamos una nueva rama para el problema cr\u00edtico y lo resolvemos trabajando en ella.\n\n\n\n\n\n\nTras las pertinentes pruebas, fusionamos (merge) esa rama y la enviamos (push) a la rama de producci\u00f3n.\n\n\n\n\n\n\nVolvemos a la rama del tema en que andabas antes de la llamada y continuamos tu trabajo.", 
            "title": "Ramas"
        }, 
        {
            "location": "/git/ramas/#crear-una-rama-nueva", 
            "text": "\u00bfQu\u00e9 sucede cuando creas una nueva rama? Simplemente se crea un nuevo apuntador para que lo podamos moverlo libremente. Por ejemplo, supongamos que queremos crear una rama nueva denominada \"testing\". Para ello, ejecutaremos el comando:   git branch testing  Esto crear\u00e1 un nuevo apuntador apuntando a la misma confirmaci\u00f3n donde estemos actualmente.   Y, \u00bfc\u00f3mo sabe Git en qu\u00e9 rama estamos en este momento? Mediante un apuntador especial denominado HEAD. Este apuntador se ubica en la rama local en la que estemos en ese momento, en este caso la rama  master ; pues  el comando  git branch  solamente crea una nueva rama, y no salta a dicha rama .", 
            "title": "Crear una rama nueva"
        }, 
        {
            "location": "/git/ramas/#cambiar-de-rama", 
            "text": "Para saltar de una rama a otra, tenemos que utilizar el comando  git checkout . Hagamos una prueba, saltando a la rama  testing  reci\u00e9n creada:  git checkout testing  Esto mueve el apuntador HEAD a la rama testing.   Observamos algo interesante: la rama testing avanza, mientras que la rama master permanece en la confirmaci\u00f3n donde estaba cuando lanzaste el comando git checkout para saltar.    Volvamos ahora a la rama master:  git checkout master    Saltando entre ramas Es importante destacar que cuando saltas a una rama en Git, los archivos de tu directorio de trabajo cambian. Si saltas a una rama antigua, tu directorio de trabajo retroceder\u00e1 para verse como lo hac\u00eda la \u00faltima vez que confirmaste un cambio en dicha rama. Si Git no puede hacer el cambio limpiamente, no te dejar\u00e1 saltar.    Ahora el historial de nuestro proyecto diverge. Hemos creado una rama y saltado a ella, hemos trabajado sobre ella; hemos vuelto a la rama original, y hemos trabajado tambi\u00e9n sobre ella. Los cambios realizados en ambas sesiones de trabajo est\u00e1n aislados en ramas independientes: podemos saltar libremente de una a otra seg\u00fan estimemos oportuno.   Tip sobre la creaci\u00f3n de ramas Para crear una nueva rama y saltar a ella, en un solo paso, podemos utilizar el comando:  git checkout -b nuevaRama", 
            "title": "Cambiar de Rama"
        }, 
        {
            "location": "/git/ramas/#eliminar-una-rama", 
            "text": "Para borrar una rama utilizamos el sencillo comando:   git branch -d ramaABorrar", 
            "title": "Eliminar una rama"
        }, 
        {
            "location": "/git/ramas/#fusionar-ramas", 
            "text": "Es probable que luego de un tiempo de trabajar sobre una rama que hallamos creado quisi\u00e9ramos fusionarla con la rama principal. Para ello, debemos asegurarnos de estar posicionandos en la rama principal (comunmente llamada  master ) y ejecutar el comando:   git merge ramaAFusionar  De esta manera, Git fusionar\u00e1 los cambios hechos en la rama alternativa con la rama principal.", 
            "title": "Fusionar ramas"
        }, 
        {
            "location": "/git/ramas/#estudio-de-caso-uso-de-ramas", 
            "text": "Vamos a presentar un ejemplo simple de ramificar y de fusionar, con un flujo de trabajo que se podr\u00eda presentar en la realidad. Imagina que sigues los siguientes pasos:    Trabajamos en un sitio web.    Creamos una rama para un nuevo tema sobre el que queremos trabajar.    Realizamos algo de trabajo en esa rama.    En este momento, recibimos una llamada avis\u00e1ndonos de un problema cr\u00edtico que tenemos que resolver. Y seguimos los siguientes pasos:    Volvemos a la rama de producci\u00f3n original.    Creamos una nueva rama para el problema cr\u00edtico y lo resolvemos trabajando en ella.    Tras las pertinentes pruebas, fusionamos (merge) esa rama y la enviamos (push) a la rama de producci\u00f3n.    Volvemos a la rama del tema en que andabas antes de la llamada y continuamos tu trabajo.", 
            "title": "Estudio de caso: uso de ramas"
        }, 
        {
            "location": "/git/deshaciendoCambios/", 
            "text": "Deshaciendo cosas en Git\n\n\nEn cualquier momento puedes querer deshacer algo. En esta secci\u00f3n veremos algunas herramientas b\u00e1sicas para deshacer cambios.\n\n\nDeshacer el commit perdiendo las modificaciones\n\n\nSupongamos que queremos deshacer el \u00faltimo commit. En este caso, queremos desechar los cambios introducidos en ese commit. Para ello, ejecutamos el comando:\n\n\ngit reset --hard HEAD~1\n\n\n\n\n\nLa sintaxis \nHEAD~1\n del comando anterior la podr\u00edamos traducir como \u201cEl commit al que est\u00e1 apuntando la rama activa menos uno\u201d. Si hubi\u00e9semos ejecutado el comando:\n\n\ngit reset --hard HEAD~3\n\n\n\n\n\nen lugar de deshacer el \u00faltimo commit deshacer\u00edamos tres commits hacia atr\u00e1s.\n\n\nDeshacer el commit manteniendo las modificaciones\n\n\nExiste la posibilidad de eliminar el commit pero manteniendo las modificaciones que contiene ese commit en el \u00e1rea de trabajo. Para ello, ejecutar\u00edamos el siguiente comando:\n\n\ngit reset HEAD~1\n\n\n\n\n\nAs\u00ed que podemos seguir trabajando, corregir el bug o completar las modificaciones que hab\u00edamos dejado incompletas y hacer un nuevo commit con los cambios completos. \u00a1As\u00ed de f\u00e1cil!\n\n\nBase de conocimiento\n\n\n\n\nhttp://aprendegit.com/como-deshacer-el-ultimo-commit-en-git\n\n\nhttps://pajarokillo.wordpress.com/2015/02/23/deshaciendo-cambios-con-git/\n\n\nhttp://www.7sabores.com/blog/como-revertir-un-push-git\n\n\nhttps://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting\n\n\nhttps://styde.net/deshaciendo-cosas-en-git/\n\n\nhttps://es.stackoverflow.com/questions/3575/quitar-archivos-a%C3%B1adidos-antes-de-un-commit\n\n\nhttp://rogerdudler.github.io/git-guide/index.es.html\n\n\nhttps://gist.github.com/jelcaf/1404619\n\n\nhttps://es.stackoverflow.com/questions/1458/regresar-un-repositorio-a-un-commit-especifico\n\n\nhttps://loquemeinteresadelared.wordpress.com/2016/03/28/git-cookbook-que-es-el-estado-o-modo-detached-head/#more-877", 
            "title": "Deshaciendo cambios"
        }, 
        {
            "location": "/git/deshaciendoCambios/#deshaciendo-cosas-en-git", 
            "text": "En cualquier momento puedes querer deshacer algo. En esta secci\u00f3n veremos algunas herramientas b\u00e1sicas para deshacer cambios.", 
            "title": "Deshaciendo cosas en Git"
        }, 
        {
            "location": "/git/deshaciendoCambios/#deshacer-el-commit-perdiendo-las-modificaciones", 
            "text": "Supongamos que queremos deshacer el \u00faltimo commit. En este caso, queremos desechar los cambios introducidos en ese commit. Para ello, ejecutamos el comando:  git reset --hard HEAD~1  La sintaxis  HEAD~1  del comando anterior la podr\u00edamos traducir como \u201cEl commit al que est\u00e1 apuntando la rama activa menos uno\u201d. Si hubi\u00e9semos ejecutado el comando:  git reset --hard HEAD~3  en lugar de deshacer el \u00faltimo commit deshacer\u00edamos tres commits hacia atr\u00e1s.", 
            "title": "Deshacer el commit perdiendo las modificaciones"
        }, 
        {
            "location": "/git/deshaciendoCambios/#deshacer-el-commit-manteniendo-las-modificaciones", 
            "text": "Existe la posibilidad de eliminar el commit pero manteniendo las modificaciones que contiene ese commit en el \u00e1rea de trabajo. Para ello, ejecutar\u00edamos el siguiente comando:  git reset HEAD~1  As\u00ed que podemos seguir trabajando, corregir el bug o completar las modificaciones que hab\u00edamos dejado incompletas y hacer un nuevo commit con los cambios completos. \u00a1As\u00ed de f\u00e1cil!", 
            "title": "Deshacer el commit manteniendo las modificaciones"
        }, 
        {
            "location": "/git/deshaciendoCambios/#base-de-conocimiento", 
            "text": "http://aprendegit.com/como-deshacer-el-ultimo-commit-en-git  https://pajarokillo.wordpress.com/2015/02/23/deshaciendo-cambios-con-git/  http://www.7sabores.com/blog/como-revertir-un-push-git  https://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting  https://styde.net/deshaciendo-cosas-en-git/  https://es.stackoverflow.com/questions/3575/quitar-archivos-a%C3%B1adidos-antes-de-un-commit  http://rogerdudler.github.io/git-guide/index.es.html  https://gist.github.com/jelcaf/1404619  https://es.stackoverflow.com/questions/1458/regresar-un-repositorio-a-un-commit-especifico  https://loquemeinteresadelared.wordpress.com/2016/03/28/git-cookbook-que-es-el-estado-o-modo-detached-head/#more-877", 
            "title": "Base de conocimiento"
        }, 
        {
            "location": "/git/etiquetas/", 
            "text": "Etiquetado\n\n\nGit tiene la posibilidad de etiquetar puntos espec\u00edficos del historial como importantes. Esta funcionalidad se usa t\u00edpicamente para marcar versiones de lanzamiento (v1.0, por ejemplo). En esta secci\u00f3n, aprender\u00e1s c\u00f3mo listar las etiquetas disponibles, c\u00f3mo crear nuevas etiquetas y cu\u00e1les son los distintos tipos de etiquetas.\n\n\nCreando Etiquetas\n\n\nGit utiliza dos tipos principales de etiquetas: \nligeras\n y \nanotadas\n.\n\n\nUna \netiqueta ligera\n es muy parecido a una rama que no cambia - simplemente es un puntero a un commit espec\u00edfico.\n\n\nSin embargo, las \netiquetas anotadas\n se guardan en la base de datos de Git como objetos enteros. Tienen un checksum; contienen el nombre del etiquetador, correo electr\u00f3nico y fecha; tienen un mensaje asociado; y pueden ser firmadas y verificadas con GNU Privacy Guard (GPG). \n\n\nEtiquetas Anotadas\n\n\nCrear una etiqueta anotada en Git es sencillo, utilizando la opci\u00f3n \n-a\n cuando ejecutamos el comando \ntag\n:\n\n\ngit tag -a \n[\nnombreDeEtiqueta\n]\n -m \nMensaje asociado a la etiqueta\n\n\n\n\n\n\nPor ejemplo: \n\n\ngit tag -a v1.2 -m \nNueva versi\u00f3n multiusuario\n\n\n\n\n\n\nLa opci\u00f3n \n-m\n especifica el mensaje de la etiqueta, el cual es guardado junto con ella. Si no especific\u00e1s el mensaje de una etiqueta anotada, Git abrir\u00e1 el editor de texto para que lo escribas.\n\n\nEtiquetas Ligeras\n\n\nLa otra forma de etiquetar un \ncommit\n es mediante una etiqueta ligera. Una etiqueta ligera no es m\u00e1s que el \nchecksum\n de un \ncommit\n guardado en un archivo - no incluye m\u00e1s informaci\u00f3n. Para crear una etiqueta ligera ejecutamos:\n\n\ngit tag \n[\nnombreDeEtiqueta\n]\n\n\n\n\n\n\nPor ejemplo: \n\n\ngit tag v1.0.2\n\n\n\n\n\nEtiquetado Tard\u00edo\n\n\nTambi\u00e9n pod\u00e9s etiquetar \ncommits\n mucho tiempo despu\u00e9s de haberlos hecho. Para ello, tendremos que ejecutar el siguiente comando: \n\n\ngit tag -a \n[\nnombreDeEtiqueta\n]\n \n[\nnumeroHashAbreviado\n]\n\n\n\n\n\n\nDonde podremos obtener el \nhash\n abreviado de un \ncommit\n ejecutando: \n\n\ngit log --oneline\n\n\n\n\n\nDe esta manera, un ejemplo de etiquetado tard\u00edo ser\u00eda: \n\n\ngit tag -a v1.5 9fceb02\n\n\n\n\n\nVisualizando etiquetas\n\n\nGit dispone de comandos para visualizar las etiquetas creadas as\u00ed como la informaci\u00f3n asociada a alguna de ellas en espcial. \n\n\nListando etiquetas\n\n\nPara ver la lista de las etiquetas creadas, ejecutaremos el comando \ntag\n:\n\n\ngit tag\n\n\n\n\n\nTambi\u00e9n podemos listar todas las etiquetas que cumplan con un patr\u00f3n de b\u00fasqueda determinado, con la opcion \n-l\n: \n\n\ngit tag l- \n[\npatronDeBusqueda\n]\n\n\n\n\n\n\nPor ejemplo: \n\n\ngit tag l- v1.8\n\n\n\n\n\nListar\u00e1 todas las etiquetas que comiencen con dicho patr\u00f3n de b\u00fasqueda, como v1.8.1, v1.8.0.2, etc. \n\n\nMostrando informaci\u00f3n de una etiqueta espec\u00edfica\n\n\nPara ver la informaci\u00f3n de una etiqueta espec\u00edfica, sea anotada o ligera (la primera arrojar\u00e1 m\u00e1s informaci\u00f3n):\n\n\ngit show \n[\nnombreDeEtiqueta\n]\n\n\n\n\n\n\nPor ejemplo: \n\n\ngit show v1.4\n\n\n\n\n\nCompartiendo etiquetas\n\n\nPor defecto, el comando \ngit push\n no transfiere las etiquetas a los servidores remotos. Es necesario enviar las etiquetas de forma expl\u00edcita al servidor luego de que las hayas creado. Este proceso es similar al de compartir ramas remotas:\n\n\ngit push \n[\nnombreRepositorioRemoto\n]\n \n[\nnombreDeEtiqueta\n]\n \n[\nrama\n]\n\n\n\n\n\n\nPor ejemplo: \n\n\ngit push origin v1.4 master\n\n\n\n\n\nSi queremos enviar varias etiquetas a la vez, podemos usar la opci\u00f3n \n--tags\n del comando \ngit push\n. Esto enviar\u00e1 al servidor remoto todas las etiquetas que aun no existen en \u00e9l.\n\n\ngit push \n[\nnombreRepositorioRemoto\n]\n --tags \n[\nrama\n]\n\n\n\n\n\n\nPor ejemplo: \n\n\ngit push origin --tags master\n\n\n\n\n\nA partir de ahora, cuando alguien clone o traiga informaci\u00f3n de tu repositorio, tambi\u00e9n obtendr\u00e1 todas las etiquetas.", 
            "title": "Etiquetado"
        }, 
        {
            "location": "/git/etiquetas/#etiquetado", 
            "text": "Git tiene la posibilidad de etiquetar puntos espec\u00edficos del historial como importantes. Esta funcionalidad se usa t\u00edpicamente para marcar versiones de lanzamiento (v1.0, por ejemplo). En esta secci\u00f3n, aprender\u00e1s c\u00f3mo listar las etiquetas disponibles, c\u00f3mo crear nuevas etiquetas y cu\u00e1les son los distintos tipos de etiquetas.", 
            "title": "Etiquetado"
        }, 
        {
            "location": "/git/etiquetas/#creando-etiquetas", 
            "text": "Git utiliza dos tipos principales de etiquetas:  ligeras  y  anotadas .  Una  etiqueta ligera  es muy parecido a una rama que no cambia - simplemente es un puntero a un commit espec\u00edfico.  Sin embargo, las  etiquetas anotadas  se guardan en la base de datos de Git como objetos enteros. Tienen un checksum; contienen el nombre del etiquetador, correo electr\u00f3nico y fecha; tienen un mensaje asociado; y pueden ser firmadas y verificadas con GNU Privacy Guard (GPG).", 
            "title": "Creando Etiquetas"
        }, 
        {
            "location": "/git/etiquetas/#etiquetas-anotadas", 
            "text": "Crear una etiqueta anotada en Git es sencillo, utilizando la opci\u00f3n  -a  cuando ejecutamos el comando  tag :  git tag -a  [ nombreDeEtiqueta ]  -m  Mensaje asociado a la etiqueta   Por ejemplo:   git tag -a v1.2 -m  Nueva versi\u00f3n multiusuario   La opci\u00f3n  -m  especifica el mensaje de la etiqueta, el cual es guardado junto con ella. Si no especific\u00e1s el mensaje de una etiqueta anotada, Git abrir\u00e1 el editor de texto para que lo escribas.", 
            "title": "Etiquetas Anotadas"
        }, 
        {
            "location": "/git/etiquetas/#etiquetas-ligeras", 
            "text": "La otra forma de etiquetar un  commit  es mediante una etiqueta ligera. Una etiqueta ligera no es m\u00e1s que el  checksum  de un  commit  guardado en un archivo - no incluye m\u00e1s informaci\u00f3n. Para crear una etiqueta ligera ejecutamos:  git tag  [ nombreDeEtiqueta ]   Por ejemplo:   git tag v1.0.2", 
            "title": "Etiquetas Ligeras"
        }, 
        {
            "location": "/git/etiquetas/#etiquetado-tardio", 
            "text": "Tambi\u00e9n pod\u00e9s etiquetar  commits  mucho tiempo despu\u00e9s de haberlos hecho. Para ello, tendremos que ejecutar el siguiente comando:   git tag -a  [ nombreDeEtiqueta ]   [ numeroHashAbreviado ]   Donde podremos obtener el  hash  abreviado de un  commit  ejecutando:   git log --oneline  De esta manera, un ejemplo de etiquetado tard\u00edo ser\u00eda:   git tag -a v1.5 9fceb02", 
            "title": "Etiquetado Tard\u00edo"
        }, 
        {
            "location": "/git/etiquetas/#visualizando-etiquetas", 
            "text": "Git dispone de comandos para visualizar las etiquetas creadas as\u00ed como la informaci\u00f3n asociada a alguna de ellas en espcial.", 
            "title": "Visualizando etiquetas"
        }, 
        {
            "location": "/git/etiquetas/#listando-etiquetas", 
            "text": "Para ver la lista de las etiquetas creadas, ejecutaremos el comando  tag :  git tag  Tambi\u00e9n podemos listar todas las etiquetas que cumplan con un patr\u00f3n de b\u00fasqueda determinado, con la opcion  -l :   git tag l-  [ patronDeBusqueda ]   Por ejemplo:   git tag l- v1.8  Listar\u00e1 todas las etiquetas que comiencen con dicho patr\u00f3n de b\u00fasqueda, como v1.8.1, v1.8.0.2, etc.", 
            "title": "Listando etiquetas"
        }, 
        {
            "location": "/git/etiquetas/#mostrando-informacion-de-una-etiqueta-especifica", 
            "text": "Para ver la informaci\u00f3n de una etiqueta espec\u00edfica, sea anotada o ligera (la primera arrojar\u00e1 m\u00e1s informaci\u00f3n):  git show  [ nombreDeEtiqueta ]   Por ejemplo:   git show v1.4", 
            "title": "Mostrando informaci\u00f3n de una etiqueta espec\u00edfica"
        }, 
        {
            "location": "/git/etiquetas/#compartiendo-etiquetas", 
            "text": "Por defecto, el comando  git push  no transfiere las etiquetas a los servidores remotos. Es necesario enviar las etiquetas de forma expl\u00edcita al servidor luego de que las hayas creado. Este proceso es similar al de compartir ramas remotas:  git push  [ nombreRepositorioRemoto ]   [ nombreDeEtiqueta ]   [ rama ]   Por ejemplo:   git push origin v1.4 master  Si queremos enviar varias etiquetas a la vez, podemos usar la opci\u00f3n  --tags  del comando  git push . Esto enviar\u00e1 al servidor remoto todas las etiquetas que aun no existen en \u00e9l.  git push  [ nombreRepositorioRemoto ]  --tags  [ rama ]   Por ejemplo:   git push origin --tags master  A partir de ahora, cuando alguien clone o traiga informaci\u00f3n de tu repositorio, tambi\u00e9n obtendr\u00e1 todas las etiquetas.", 
            "title": "Compartiendo etiquetas"
        }, 
        {
            "location": "/git/otrosComandosGit/", 
            "text": "Mostrando diferencias\n\n\nEl comando \ndiff\n compara lo que tenemos en el directorio de trabajo con lo que est\u00e1 en el \u00e1rea de preparaci\u00f3n:\n\n\ngit diff\n\n\n\n\n\nPara ver las diferencias existentes entre dos ramas, ejecutamos: \n\n\ngit diff \n[\nrama1\n]\n \n[\nrama2\n]\n\n\n\n\n\n\nHistorial\n\n\nPodemos ver el historial de commits del proyecto usando el comando \nlog\n\n\nMuestra el historial con el formato que indicamos:\n\n\ngit log --pretty\n=\nformat:\n%h - %an, %ar : %s\n\n\n\n\n\n\nCambiamos la n por cualquier n\u00famero entero, por ejemplo: \ngit log -2\n nos mostrar\u00e1 los 2 commits m\u00e1s recientes:\n\n\ngit log -n\n\n\n\n\n\nMuestra los commits realizados despu\u00e9s de la fecha especificada:\n\n\ngit log --after\n=\n2016-04-07 00:00:00\n\n\n\n\n\n\nMuestra los commits realizados antes de la fecha especificada:\n\n\ngit log --before\n=\n2016-04-08 00:00:00\n\n\n\n\n\n\nLas banderas del comando \ngit log\n se pueden usar juntas seg\u00fan son convenga, por ejemplo:\n\n\ngit log --after\n=\n2016-04-07 12:00:00\n --before\n=\n2016-04-07 12:30:00\n\n\n\n\n\n\nEste comando nos muestra el historial en una sola l\u00ednea por commit:\n\n\ngit log --oneline\n\n\n\n\n\nRenombrar archivos\n\n\nPodemos renombrar archivos directamente desde Git con el comando\n\n\ngit mv file_from file_to\n\n\n\n\n\nEste \u00faltimo comando es equivalente a los siguientes pasos:\n\n\n\n\nRenombrar el archivo manualmente\n\n\ngit rm\n para eliminar el archivo con git.\n\n\ngit add\n para agregar el archivo con el nuevo nombre. \n\n\n\n\nIgnorando archivos\n\n\nA menudo tendr\u00e1s un tipo de archivos que no quieras que Git a\u00f1ada autom\u00e1ticamente o te muestre como no versionado. Suelen ser archivos generados autom\u00e1ticamente, como archivos de log, o archivos generados por tu compilador. Para estos casos puedes crear un archivo llamado .gitignore, en el que listas los patrones de nombres que deseas que sean ignorados. He aqu\u00ed un archivo .gitignore de ejemplo:\n\n\n*.\n[\noa\n]\n\n*~\n\n\n\n\n\nLa primera l\u00ednea le dice a Git que ignore cualquier archivo cuyo nombre termine en \n.o\n o \n.a\n \u2014archivos objeto que suelen ser producto de la compilaci\u00f3n de c\u00f3digo\u2014. La segunda l\u00ednea le dice a Git que ignore todos los archivos que terminan en tilde \n(~)\n, usada por muchos editores de texto, como Emacs, para marcar archivos temporales. Tambi\u00e9n puedes incluir directorios de log, temporales, documentaci\u00f3n generada autom\u00e1ticamente, etc. Configurar un archivo \n.gitignore\n antes de empezar a trabajar suele ser una buena idea, para as\u00ed no confirmar archivos que no quieres en tu repositorio Git.\n\n\nLas reglas para los patrones que pueden ser incluidos en el archivo \n.gitignore\n son:\n\n\n\n\nLas l\u00edneas en blanco, o que comienzan por #, son ignoradas.\n\n\nPuedes usar patrones glob est\u00e1ndar.\n\n\nPuedes indicar un directorio a\u00f1adiendo una barra hacia delante (/) al final.\n\n\nPuedes negar un patr\u00f3n a\u00f1adiendo una exclamaci\u00f3n (!) al principio.\n\n\n\n\nLos patrones glob son expresiones regulares simplificadas que pueden ser usadas por las shells. Un asterisco \n(*)\n reconoce cero o m\u00e1s caracteres; \n[abc]\n reconoce cualquier car\u00e1cter de los especificados entre corchetes (en este caso, a, b o c); una interrogaci\u00f3n \n(?)\n reconoce un \u00fanico car\u00e1cter; y caracteres entre corchetes separados por un gui\u00f3n \n([0-9])\n reconoce cualquier car\u00e1cter entre ellos (en este caso, de 0 a 9).\n\n\nHe aqu\u00ed otro ejemplo de archivo \n.gitignore\n:\n\n\n# a comment \u2013 this is ignored\n\n\n# no .a files\n\n*.a\n\n# but do track lib.a, even though you\nre ignoring .a files above\n\n!lib.a\n\n# only ignore the root TODO file, not subdir/TODO\n\n/TODO\n\n# ignore all files in the build/ directory\n\nbuild/\n\n# ignore doc/notes.txt, but not doc/server/arch.txt\n\ndoc/*.txt\n\n# ignore all .txt files in the doc/ directory\n\ndoc/**/*.txt", 
            "title": "Otros comandos"
        }, 
        {
            "location": "/git/otrosComandosGit/#mostrando-diferencias", 
            "text": "El comando  diff  compara lo que tenemos en el directorio de trabajo con lo que est\u00e1 en el \u00e1rea de preparaci\u00f3n:  git diff  Para ver las diferencias existentes entre dos ramas, ejecutamos:   git diff  [ rama1 ]   [ rama2 ]", 
            "title": "Mostrando diferencias"
        }, 
        {
            "location": "/git/otrosComandosGit/#historial", 
            "text": "Podemos ver el historial de commits del proyecto usando el comando  log  Muestra el historial con el formato que indicamos:  git log --pretty = format: %h - %an, %ar : %s   Cambiamos la n por cualquier n\u00famero entero, por ejemplo:  git log -2  nos mostrar\u00e1 los 2 commits m\u00e1s recientes:  git log -n  Muestra los commits realizados despu\u00e9s de la fecha especificada:  git log --after = 2016-04-07 00:00:00   Muestra los commits realizados antes de la fecha especificada:  git log --before = 2016-04-08 00:00:00   Las banderas del comando  git log  se pueden usar juntas seg\u00fan son convenga, por ejemplo:  git log --after = 2016-04-07 12:00:00  --before = 2016-04-07 12:30:00   Este comando nos muestra el historial en una sola l\u00ednea por commit:  git log --oneline", 
            "title": "Historial"
        }, 
        {
            "location": "/git/otrosComandosGit/#renombrar-archivos", 
            "text": "Podemos renombrar archivos directamente desde Git con el comando  git mv file_from file_to  Este \u00faltimo comando es equivalente a los siguientes pasos:   Renombrar el archivo manualmente  git rm  para eliminar el archivo con git.  git add  para agregar el archivo con el nuevo nombre.", 
            "title": "Renombrar archivos"
        }, 
        {
            "location": "/git/otrosComandosGit/#ignorando-archivos", 
            "text": "A menudo tendr\u00e1s un tipo de archivos que no quieras que Git a\u00f1ada autom\u00e1ticamente o te muestre como no versionado. Suelen ser archivos generados autom\u00e1ticamente, como archivos de log, o archivos generados por tu compilador. Para estos casos puedes crear un archivo llamado .gitignore, en el que listas los patrones de nombres que deseas que sean ignorados. He aqu\u00ed un archivo .gitignore de ejemplo:  *. [ oa ] \n*~  La primera l\u00ednea le dice a Git que ignore cualquier archivo cuyo nombre termine en  .o  o  .a  \u2014archivos objeto que suelen ser producto de la compilaci\u00f3n de c\u00f3digo\u2014. La segunda l\u00ednea le dice a Git que ignore todos los archivos que terminan en tilde  (~) , usada por muchos editores de texto, como Emacs, para marcar archivos temporales. Tambi\u00e9n puedes incluir directorios de log, temporales, documentaci\u00f3n generada autom\u00e1ticamente, etc. Configurar un archivo  .gitignore  antes de empezar a trabajar suele ser una buena idea, para as\u00ed no confirmar archivos que no quieres en tu repositorio Git.  Las reglas para los patrones que pueden ser incluidos en el archivo  .gitignore  son:   Las l\u00edneas en blanco, o que comienzan por #, son ignoradas.  Puedes usar patrones glob est\u00e1ndar.  Puedes indicar un directorio a\u00f1adiendo una barra hacia delante (/) al final.  Puedes negar un patr\u00f3n a\u00f1adiendo una exclamaci\u00f3n (!) al principio.   Los patrones glob son expresiones regulares simplificadas que pueden ser usadas por las shells. Un asterisco  (*)  reconoce cero o m\u00e1s caracteres;  [abc]  reconoce cualquier car\u00e1cter de los especificados entre corchetes (en este caso, a, b o c); una interrogaci\u00f3n  (?)  reconoce un \u00fanico car\u00e1cter; y caracteres entre corchetes separados por un gui\u00f3n  ([0-9])  reconoce cualquier car\u00e1cter entre ellos (en este caso, de 0 a 9).  He aqu\u00ed otro ejemplo de archivo  .gitignore :  # a comment \u2013 this is ignored  # no .a files \n*.a # but do track lib.a, even though you re ignoring .a files above \n!lib.a # only ignore the root TODO file, not subdir/TODO \n/TODO # ignore all files in the build/ directory \nbuild/ # ignore doc/notes.txt, but not doc/server/arch.txt \ndoc/*.txt # ignore all .txt files in the doc/ directory \ndoc/**/*.txt", 
            "title": "Ignorando archivos"
        }, 
        {
            "location": "/git/ejemploGit/", 
            "text": "Tomado de \"Starting with Git \n GitHub\", Nicol\u00e1s Tourn\u00e9. Diponible en \nhttps://es.slideshare.net/nicotourne/starting-with-git-git-hub-27464735", 
            "title": "Ejemplo de uso de git"
        }, 
        {
            "location": "/nagios/", 
            "text": "Seg\u00fan \nWikipedia\n\n\n\n\n\n\nNagios\n es un \nsistema de monitorizaci\u00f3n de redes\n ampliamente utilizado, de c\u00f3digo abierto, que vigila los equipos (hardware) y servicios (software) que se especifiquen, alertando cuando el comportamiento de los mismos no sea el deseado. \n\n\nEntre sus caracter\u00edsticas principales figuran: la \nmonitorizaci\u00f3n de servicios de red\n (SMTP, POP3, HTTP, SNMP, etc.), la \nmonitorizaci\u00f3n de recursos de hardware\n (carga del procesador, uso de los discos, memoria, estados de los puertos, etc.) independientemente del sistema operativo, posibilidad de \nmonitorizaci\u00f3n remota\n mediante t\u00faneles SSL cifrados o SSH y la posibilidad de \nprogramar plugins espec\u00edficos\n para nuevos sistemas. \n\n\nSe trata de un software que proporciona una gran versatilidad para \nconsultar pr\u00e1cticamente cualquier par\u00e1metro de inter\u00e9s de un sistema\n, \ngenerando alertas\n que pueden ser recibidas por los responsables correspondientes a trav\u00e9s del correo electr\u00f3nico y mensajes SMS entre otros medios, cuando los par\u00e1metros \nexcedan los m\u00e1rgenes definidos por el administrador de red.", 
            "title": "\u00bfQu\u00e9 es Nagios?"
        }, 
        {
            "location": "/nagios/instalacion/", 
            "text": "Para instalar el software, ejecutamos en una terminal: \n\n\nsudo apt-get install nagios3 nagios-nrpe-plugin\n\n\n\n\n\nDurante las instalaci\u00f3n se nos solicitar\u00e1 la contrase\u00f1a de administraci\u00f3n. Podemos omitir este paso ya que consiguraremos la contrase\u00f1a en el paso siguiente. \n\n\nModificando la contrase\u00f1a de administrador\n\n\nEl \nusuario administrador\n por defecto es \nnagiosadmin\n. Para \nmodificar la contrase\u00f1a\n de este usuario, ejecutamos:\n\n\nsudo htpasswd -c /etc/nagios3/htpasswd.users nagiosadmin\n\n\n\n\n\nIngresando a la administraci\u00f3n\n\n\nNagios posee una interfaz web que facilita la administraci\u00f3n del servidor. La misma puede ser accedida desde un navegador introduciendo la direcci\u00f3n: ''http://ip.de.tu.servidor/nagios''\n\n\nLos datos de acceso ser\u00e1n:\n\n\n\n\nusuario\n: nagiosadmin\n\n\ncontrase\u00f1a\n: (la contrase\u00f1a que definiste durante la instalaci\u00f3n)", 
            "title": "Instalaci\u00f3n"
        }, 
        {
            "location": "/nagios/instalacion/#modificando-la-contrasena-de-administrador", 
            "text": "El  usuario administrador  por defecto es  nagiosadmin . Para  modificar la contrase\u00f1a  de este usuario, ejecutamos:  sudo htpasswd -c /etc/nagios3/htpasswd.users nagiosadmin", 
            "title": "Modificando la contrase\u00f1a de administrador"
        }, 
        {
            "location": "/nagios/instalacion/#ingresando-a-la-administracion", 
            "text": "Nagios posee una interfaz web que facilita la administraci\u00f3n del servidor. La misma puede ser accedida desde un navegador introduciendo la direcci\u00f3n: ''http://ip.de.tu.servidor/nagios''  Los datos de acceso ser\u00e1n:   usuario : nagiosadmin  contrase\u00f1a : (la contrase\u00f1a que definiste durante la instalaci\u00f3n)", 
            "title": "Ingresando a la administraci\u00f3n"
        }, 
        {
            "location": "/nagios/configuracion/", 
            "text": "Una vez que hayamos instalado Nagios, disponemos de la carpeta \n/etc/nagios3\n que contiene los archivos de configuraci\u00f3n del programa.\n\n\nA fin de mantener el orden, \ncrearemos una carpeta en la que alojaremos nuestros archivos de configuraci\u00f3n personalizados\n. Tanto el nombre de la carpeta que crearemos, como su ubicaii\u00f3n son arbitrarios, pudi\u00e9ndose emplear otros en su lugar: \n\n\nsudo mkdir /etc/nagios3/objetos\n\n\n\n\n\nCreando nuestros archivos de configuraci\u00f3n\n\n\nDentro de la carpeta que creamos del paso anterior, \ncolocaremos nuestros archivos de configuraci\u00f3n\n los cu\u00e1les tendremos que crear, asign\u00e1ndoles un nombre arbitrario, pero con la extensi\u00f3n \n.cfg\n. Los archivos que crearemos ser\u00e1n: \nequipos.cfg\n, \ngrupos.cfg\n y \nservicios.cfg\n.\n\n\ncd\n /etc/nagios3/objetos/ \n sudo touch equipos.cfg grupos.cfg servicios.cfg iconos.cfg\n\n\n\n\n\nAgregando nuestra configuraci\u00f3n a Nagios\n\n\nTendremos que \"notificar\" a Nagios de los cambios que hemos introducido. Para ello, abriremos el archivo de configuraci\u00f3n principal de Nagios: \n\n\nsudo vim /etc/nagios3/nagios.cfg\n\n\n\n\n\nUna vez abierto el archivo, en alg\u00fan lugar del mismo, agregaremos la siguiente l\u00ednea que indica la ubicaci\u00f3n de nuestro archivo de configuraci\u00f3n: \n\n\n# Equipos que forman parte de la red\n\n\ncfg_file=/etc/nagios3/objetos/equipos\n.\ncfg\n\n\n# Grupos de equipos\n\ncfg_file=/etc/nagios3/objetos/grupos\n.\ncfg\n\n\n# Servicios que Nagios monitorear\u00e1\n\ncfg_file=/etc/nagios3/objetos/servicios\n.\ncfg\n\n\n# Iconos personalizados\n\ncfg_file=/etc/nagios3/objetos/iconos\n.\ncfg\n\n\n\n\n\n\nPara finalizar, guardaremos los cambios y cerraremos el editor.\n\n\nVerificando la configuraci\u00f3n y reiniciando Nagios\n\n\nCada vez que realicemos cambios en los archivos de configuraci\u00f3n del servidor tendremos que verificar que dichar configuraci\u00f3n sea la correcta. Para ellos ejecutaremos el siguiente comando:\n\n\nsudo nagios3 -v /etc/nagios3/nagios.cfg\n\n\n\n\n\n\n\nAdvertencias y errores\n\n\nEl comando emite dos tipos de mensajes: \nWarnings\n y \nErrors\n. Los primeros, constituyen adevertencias que no interrumpir\u00e1n el funcionamiento del servidor. Los errores, en cambio, har\u00e1n que el servidor deje de funcionar por lo que tendremos que solucionarlos para volver a activar el servicio.\n\n\n\n\nSi la configuraci\u00f3n est\u00e1 libre de errores entonces podremos reiniciar el servidor: \n\n\nsudo service nagios3 restart\n\n\n\n\n\nSi todo sali\u00f3 bien, podremos ingresar al panel web de administraci\u00f3n desde un navegador y ver plasmados los cambios realizados. \n\n\nPanel de administraci\u00f3n\n\n\nA continuaci\u00f3n se listan algunas opciones del panel de administraci\u00f3n web de Nagios que se configurar\u00e1n en el presente curso: \n\n\n\n\nDonde:\n\n\n\n\n\n\n\n\n#\n\n\nNombre\n\n\nDescripci\u00f3n\n\n\n\n\n\n\n\n\n\n\n1\n\n\nTactical Overview\n\n\nResumen del estado de la red\n\n\n\n\n\n\n2\n\n\nMap\n\n\nMapa de conexiones y dispositivos de la red\n\n\n\n\n\n\n3\n\n\nHosts\n\n\nDetalle de los equipos de la red\n\n\n\n\n\n\n4\n\n\nServices\n\n\nDetalle de los servicios monitoreados (por equipo)\n\n\n\n\n\n\n5\n\n\nHost Groups\n\n\nGrupos de equipos", 
            "title": "Configuraci\u00f3n inicial"
        }, 
        {
            "location": "/nagios/configuracion/#creando-nuestros-archivos-de-configuracion", 
            "text": "Dentro de la carpeta que creamos del paso anterior,  colocaremos nuestros archivos de configuraci\u00f3n  los cu\u00e1les tendremos que crear, asign\u00e1ndoles un nombre arbitrario, pero con la extensi\u00f3n  .cfg . Los archivos que crearemos ser\u00e1n:  equipos.cfg ,  grupos.cfg  y  servicios.cfg .  cd  /etc/nagios3/objetos/   sudo touch equipos.cfg grupos.cfg servicios.cfg iconos.cfg", 
            "title": "Creando nuestros archivos de configuraci\u00f3n"
        }, 
        {
            "location": "/nagios/configuracion/#agregando-nuestra-configuracion-a-nagios", 
            "text": "Tendremos que \"notificar\" a Nagios de los cambios que hemos introducido. Para ello, abriremos el archivo de configuraci\u00f3n principal de Nagios:   sudo vim /etc/nagios3/nagios.cfg  Una vez abierto el archivo, en alg\u00fan lugar del mismo, agregaremos la siguiente l\u00ednea que indica la ubicaci\u00f3n de nuestro archivo de configuraci\u00f3n:   # Equipos que forman parte de la red  cfg_file=/etc/nagios3/objetos/equipos . cfg \n\n# Grupos de equipos cfg_file=/etc/nagios3/objetos/grupos . cfg \n\n# Servicios que Nagios monitorear\u00e1 cfg_file=/etc/nagios3/objetos/servicios . cfg \n\n# Iconos personalizados cfg_file=/etc/nagios3/objetos/iconos . cfg   Para finalizar, guardaremos los cambios y cerraremos el editor.", 
            "title": "Agregando nuestra configuraci\u00f3n a Nagios"
        }, 
        {
            "location": "/nagios/configuracion/#verificando-la-configuracion-y-reiniciando-nagios", 
            "text": "Cada vez que realicemos cambios en los archivos de configuraci\u00f3n del servidor tendremos que verificar que dichar configuraci\u00f3n sea la correcta. Para ellos ejecutaremos el siguiente comando:  sudo nagios3 -v /etc/nagios3/nagios.cfg   Advertencias y errores  El comando emite dos tipos de mensajes:  Warnings  y  Errors . Los primeros, constituyen adevertencias que no interrumpir\u00e1n el funcionamiento del servidor. Los errores, en cambio, har\u00e1n que el servidor deje de funcionar por lo que tendremos que solucionarlos para volver a activar el servicio.   Si la configuraci\u00f3n est\u00e1 libre de errores entonces podremos reiniciar el servidor:   sudo service nagios3 restart  Si todo sali\u00f3 bien, podremos ingresar al panel web de administraci\u00f3n desde un navegador y ver plasmados los cambios realizados.", 
            "title": "Verificando la configuraci\u00f3n y reiniciando Nagios"
        }, 
        {
            "location": "/nagios/configuracion/#panel-de-administracion", 
            "text": "A continuaci\u00f3n se listan algunas opciones del panel de administraci\u00f3n web de Nagios que se configurar\u00e1n en el presente curso:    Donde:     #  Nombre  Descripci\u00f3n      1  Tactical Overview  Resumen del estado de la red    2  Map  Mapa de conexiones y dispositivos de la red    3  Hosts  Detalle de los equipos de la red    4  Services  Detalle de los servicios monitoreados (por equipo)    5  Host Groups  Grupos de equipos", 
            "title": "Panel de administraci\u00f3n"
        }, 
        {
            "location": "/nagios/equipos/", 
            "text": "Abrimos el archivo que nombramos como \nequipos.cfg\n:\n\n\nsudo nano /etc/nagios3/objetos/equipos.cfg\n\n\n\n\n\nA continuaci\u00f3n, tendremos que incluir en dicho archivo la configuraci\u00f3n los equipos que forman parte de nuestra red, uno debajo del otro. Por ejemplo:   \n\n\n# Ejemplo: Equipo n\u00famero 7 - Sala 1\n\n\ndefine\n host { \n\nuse\n             generic-host\n\nhost_name\n       sala1pc7\n\nalias\n           Equipo \n7\n de la sala \n1\n\n\naddress\n         \n192.168.0.123\n         \n\n}\n\n\n\n# Ejemplo: Equipo n\u00famero 8 - Sala 1\n\n\ndefine\n host { \n\nuse\n             generic-host\n\nhost_name\n       sala1pc8\n\nalias\n           Equipo \n8\n de la sala \n1\n\n\naddress\n         \n192.168.0.124\n         \n\n}\n\n\n\n# Ejemplo: Router - Sala principal\n\n\ndefine\n host { \n\nuse\n             generic-host\n\nhost_name\n       router1\n\nalias\n           Router de la sala principal\n\naddress\n         \n192.168.0.1\n         \n\n}\n\n\n\n\n\n\nDonde: \n\n\n\n\n\n\n\n\nDirectiva\n\n\nExplicaci\u00f3n\n\n\n\n\n\n\n\n\n\n\ndefine host  { }\n\n\nDirectiva empleada por Nagios para definir \ncada equipo\n que forma parte de la red.\n\n\n\n\n\n\nuse\n\n\nEstablece que plantilla se utilizar\u00e1 para definir las caracter\u00edsitcas del equipo. Dichas plantillas vienen predefinidas con Nagios (en la carpeta \n/etc/nagios3/conf.d\n) aunque tambi\u00e9n se pueden crear las propias. En el ejemplo, se utiliza la plantilla \ngeneric-host\n.\n\n\n\n\n\n\nhost_name\n\n\nNombre \u00fanico del equipo. Sin espacios ni caracteres reservados.\n\n\n\n\n\n\nalias\n\n\nDescripci\u00f3n larga del equipo (puede incluir espacios y caracteres reservados).\n\n\n\n\n\n\naddress\n\n\nDirecci\u00f3n IP del equipo.\n\n\n\n\n\n\n\n\nDe m\u00e1s est\u00e1 afirmar la conveniencia del uso de comentarios (#) para ganar claridad y orden a la hora de crear nuestro archivo de configuraci\u00f3n. \n\n\nPor \u00faltimo, tendremos que \nverificar la configuraci\u00f3n y reiniciar el servidor Nagios\n para guardar los cambios que hayamos introducido.\n\n\nDise\u00f1o de topolog\u00eda de red\n\n\nNagios permite configurar los \nhosts\n distingui\u00e9ndolos entre \npadres\n e \nhijos\n usando la directiva \nparents\n. Ve\u00e1moslo con un ejemplo \nextra\u00eddo de la documentaci\u00f3n de Nagios\n, donde la siguiente topolog\u00eda de red:\n\n\n\n\nSe corresponde con la siguiente configuraci\u00f3n de \nhosts\n (la configuraci\u00f3n de cada \nhost\n aparece simplificada con fines did\u00e1cticos )\n\n\n# Localhost (el servidor Nagios) no posee padre\n\n\ndefine\n host{\n    \nhost_name\n       Nagios   \n\n}\n\n\n\n# Y luego se definen el resto de los hosts\n\n\ndefine\n host{\n    \nhost_name\n       Switch1\n    \nparents\n         Nagios\n\n}\n\n\n\ndefine\n host{\n    \nhost_name\n       Web\n    \nparents\n         Switch1\n\n}\n\n\n\ndefine\n host{\n    \nhost_name\n       FTP\n    \nparents\n         Switch1\n\n}\n\n\n\ndefine\n host{\n    \nhost_name\n       Router1\n    \nparents\n         Switch1\n\n}\n\n\n\ndefine\n host{\n    \nhost_name\n       Switch2\n    \nparents\n         Router1\n\n}\n\n\n\ndefine\n host{\n    \nhost_name\n       Wkstn1\n    \nparents\n         Switch2\n\n}\n\n\n\ndefine\n host{\n    \nhost_name\n       HPLJ2605\n    \nparents\n         Switch2\n\n}\n\n\n\ndefine\n host{\n    \nhost_name\n       Router2\n    \nparents\n         Router1\n\n}\n\n\n\ndefine\n host{\n    \nhost_name\n       somewebsite.com\n    \nparents\n         Router2\n\n}", 
            "title": "Definiendo equipos"
        }, 
        {
            "location": "/nagios/equipos/#diseno-de-topologia-de-red", 
            "text": "Nagios permite configurar los  hosts  distingui\u00e9ndolos entre  padres  e  hijos  usando la directiva  parents . Ve\u00e1moslo con un ejemplo  extra\u00eddo de la documentaci\u00f3n de Nagios , donde la siguiente topolog\u00eda de red:   Se corresponde con la siguiente configuraci\u00f3n de  hosts  (la configuraci\u00f3n de cada  host  aparece simplificada con fines did\u00e1cticos )  # Localhost (el servidor Nagios) no posee padre  define  host{\n     host_name        Nagios    }  # Y luego se definen el resto de los hosts  define  host{\n     host_name        Switch1\n     parents          Nagios }  define  host{\n     host_name        Web\n     parents          Switch1 }  define  host{\n     host_name        FTP\n     parents          Switch1 }  define  host{\n     host_name        Router1\n     parents          Switch1 }  define  host{\n     host_name        Switch2\n     parents          Router1 }  define  host{\n     host_name        Wkstn1\n     parents          Switch2 }  define  host{\n     host_name        HPLJ2605\n     parents          Switch2 }  define  host{\n     host_name        Router2\n     parents          Router1 }  define  host{\n     host_name        somewebsite.com\n     parents          Router2 }", 
            "title": "Dise\u00f1o de topolog\u00eda de red"
        }, 
        {
            "location": "/nagios/grupos/", 
            "text": "Una vez que \nhayamos definido los equipos\n que forman parte de nuestra red, \nlos organizaremos en grupos\n para su mejor administraci\u00f3n. \n\n\nPara ello abrimos el arhivos llamado \ngrupos.cfg\n creado con anterioridad: \n\n\nsudo vim /etc/nagios3/objetos/grupos.cfg\n\n\n\n\n\nY agregamos dentro del archivo, la informaci\u00f3n sobre los grupos que deseamos crear:\n\n\n# Definici\u00f3n de grupos (de equipos, de routers, etc.)\n\n\n\ndefine\n hostgroup {\n\nhostgroup_name\n  sala1\n\nalias\n           Equipos de la sala \n1\n\n\nmembers\n         s1pc1,s1pc2,!s1pc3     # El car\u00e1cter ! (signo de admiraci\u00f3n) indica exclusi\u00f3n.  \n\n}\n\n\n\ndefine\n hostgroup {\n\nhostgroup_name\n  sala2\n\nalias\n           Equipos de la sala \n2\n\n\nmembers\n         s2pc1,s2pc2,s2pc3   \n\n}\n\n\n\n\n\n\nDonde: \n\n\n\n\n\n\n\n\nDirectiva\n\n\nExplicaci\u00f3n\n\n\n\n\n\n\n\n\n\n\ndefine hostgroup { }\n\n\nDirectiva empleada por Nagios para definir \nun grupo\n que querramos crear en la red.\n\n\n\n\n\n\nhostgroup_name\n\n\nNombre \u00fanico del grupo. Sin espacios ni caracteres reservados.\n\n\n\n\n\n\nalias\n\n\nDescripci\u00f3n larga del grupo (puede incluir espacios y caracteres reservados).\n\n\n\n\n\n\nmembers\n\n\nNombres de host (equipos) que formar\u00e1n parte del grupo, separados por comas (,).\n\n\n\n\n\n\n\n\nPor \u00faltimo, tendremos que \nverificar la configuraci\u00f3n y reiniciar el servidor Nagios\n para guardar los cambios que hayamos introducido.", 
            "title": "Definiendo grupos"
        }, 
        {
            "location": "/nagios/servicios/", 
            "text": "En este paso definiremos qu\u00e9 par\u00e1metros vamos a monitorear. Para ello, abriremos el archivo \nservicios.cfg\n creado con anterioridad: \n\n\nsudo vim /etc/nagios3/objetos/servicios.cfg\n\n\n\n\n\nEn el archivo, \ntendremos que agregar los servicios que deseemos monitorear\n en los equipos. \n\n\nMonitoreando servicios en GNU/Linux\n\n\nPor ejemplo, podr\u00edamos \nmonitorear en un servidor GNU/Linux\n, el estado del \nservidor web\n, \nftp\n y \nssh\n: \n\n\n#######################\n\n\n# Servicios gen\u00e9ricos #\n\n\n#######################\n\n\n\n### Ping ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Comprobando conectividad\n\ncheck_command\n           check_ping!200.0,20%!600.0,60%\n\nnormal_check_interval\n   \n5\n\n\nretry_check_interval\n    \n1\n\n\n}\n \n\n\n### Estado del servidor web ###\n\n\ndefine\n service{\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Estado del protocolo HTTP\n\ncheck_command\n           check_http\n\n}\n\n\n\n### Estado del servidor FTP ###\n\n\ndefine\n service{\n\nuse\n                     generic-service     \n\nhostgroup_name\n          sala1\n\nservice_description\n     Estado del protocolo FTP\n\ncheck_command\n           check_ftp\n\n}\n\n\n\n### Estado del servidor SSH ###\n\n\ndefine\n service{\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Estado del protcolo SSH\n\ncheck_command\n           check_ssh\n\n}\n\n\n\n\n\n\n\n\nSobre los servicios\n\n\nLos servicios que vamos a monitorear se pueden configurar para:\n\n\n\n\n\n\nun equipo en particular, mediante la directiva \nhost_name\n o\n\n\n\n\n\n\npara un grupo de equipos empleando la directiva \nhostgroup_name\n.\n\n\n\n\n\n\n\n\nPara finalizar, tendremos que \nverificar la configuraci\u00f3n y reiniciar el servidor Nagios\n para guardar los cambios que hayamos introducido.\n\n\nMonitoreando servicios en Windows\n\n\nSi ahora, por ejemplo, queremos monitorear un equipo con el \nsistema Microsoft Windows\n, debermos previamente \ninstalar y configurar el agente NSClient++\n en la m\u00e1quina Windows que deseamos monitorear:\n\n\n####################################\n\n\n# Servicios en equipos con Windows #\n\n\n####################################\n\n\n\n### Verificando funcionamiento del agente ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Estado del agente NSClient++\n\ncheck_command\n           check_nt!CLIENTVERSION\n\n}\n \n\n\n### Uptime del sistema ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Uptime\n\ncheck_command\n           check_nt!UPTIME\n\n}\n \n\n\n### Uso del CPU ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Carga del CPU\n\ncheck_command\n           check_nt!CPULOAD!-l \n5\n,80,90\n\n}\n \n\n\n### Uso de la memoria RAM ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Uso de memoria RAM\n\ncheck_command\n           check_nt!MEMUSE!-w \n80\n -c \n90\n\n\n}\n \n\n\n### Espacio disponible en disco C: ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Espacio en disco C:/\n\ncheck_command\n           check_nt!USEDDISKSPACE!-l C -w \n80\n -c \n90\n\n\n}\n \n\n\n### Espacio disponible en disco F: ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Espacio en disco F:/\n\ncheck_command\n           check_nt!USEDDISKSPACE!-l F -w \n90\n -c \n95\n\n\n}\n \n\n\n### Estado del Explorador de Windows ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Proceso: Explorador de Windows\n\ncheck_command\n           check_nt!PROCSTATE!-d SHOWALL -l explorer.exe\n\n}\n \n\n\n### Estado del antivirus AVG ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Proceso: Antivirus AVG\n\ncheck_command\n           check_nt!PROCSTATE!-d SHOWALL -l avgrsa.exe\n\n}\n \n\n\n### Estado del protocolo SNMP ###\n\n\ndefine\n service {\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Servicio: SNMP\n\ncheck_command\n           check_nt!SERVICESTATE!-d SHOWALL -l SNMP\n\n}\n \n\n\n### Estado del servicio de Windows Update ###\n\n\ndefine\n service{\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Servicio: Windows Update\n\ncheck_command\n           check_nt!SERVICESTATE!-d SHOWALL -l wuauserv\n\n}\n \n\n\n### Estado del servicio de activaci\u00f3n de Windows ###\n\n\ndefine\n service{\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Servicio: Activacion de Windows\n\ncheck_command\n           check_nt!SERVICESTATE!-d SHOWALL -l WatAdminSvc\n\n}\n \n\n\n### Estado del Firewall de Windows ###\n\n\ndefine\n service{\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Servicio: Firewall de Windows\n\ncheck_command\n           check_nt!SERVICESTATE!-d SHOWALL -l MpsSvc\n\n}\n \n\n\n\n\n\nPor \u00faltimo, tendremos que \nverificar la configuraci\u00f3n y reiniciar el servidor Nagios\n para guardar los cambios que hayamos introducido.\n\n\nAgregando monitoreo de estado de servicios\n\n\nSi quisi\u00e9semos agregar el monitoreo del estado de alg\u00fan servicio en Windows (es decir, saber si se est\u00e1 ejecutando o no) abrimos el di\u00e1logo \nEjecutar\n pulsando las teclas \nWindows\n + \nr\n y ejecutamos \nservices.msc\n\n\n\n\nLuego, seleccionamos el servicio a monitorear. Por ejemplo, el \nCliente DHCP\n. Hacemos clic derecho sobre el mismo y seleccionamos \nPropiedades\n del men\u00fa contextual\n\n\n\n\nTendremos que copiar el nombre del servicio \ntal cual\n, es decir, respetando las may\u00fasculas y min\u00fasculas. En este caso, \nDhcp\n\n\n\n\nPor \u00faltimo, tendremos que definir el monitoreo del mismo en el archivo \nservicios.cfg\n, donde s\u00f3lo tendremos que cambiar la \u00faltima palabra de la \u00faltima l\u00ednea: \n\n\n####################################\n\n\n# Servicios en equipos con Windows #\n\n\n####################################\n\n\n\n### Verificando funcionamiento del Cliente DHCP ###\n\n\ndefine\n service{\n\nuse\n                     generic-service\n\nhostgroup_name\n          sala1\n\nservice_description\n     Servicio: Cliente DHCP\n\ncheck_command\n           check_nt!SERVICESTATE!-d SHOWALL -l Dhcp\n\n}", 
            "title": "Definiendo servicios"
        }, 
        {
            "location": "/nagios/servicios/#monitoreando-servicios-en-gnulinux", 
            "text": "Por ejemplo, podr\u00edamos  monitorear en un servidor GNU/Linux , el estado del  servidor web ,  ftp  y  ssh :   #######################  # Servicios gen\u00e9ricos #  #######################  ### Ping ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Comprobando conectividad check_command            check_ping!200.0,20%!600.0,60% normal_check_interval     5  retry_check_interval      1  }   ### Estado del servidor web ###  define  service{ use                      generic-service hostgroup_name           sala1 service_description      Estado del protocolo HTTP check_command            check_http }  ### Estado del servidor FTP ###  define  service{ use                      generic-service      hostgroup_name           sala1 service_description      Estado del protocolo FTP check_command            check_ftp }  ### Estado del servidor SSH ###  define  service{ use                      generic-service hostgroup_name           sala1 service_description      Estado del protcolo SSH check_command            check_ssh }    Sobre los servicios  Los servicios que vamos a monitorear se pueden configurar para:    un equipo en particular, mediante la directiva  host_name  o    para un grupo de equipos empleando la directiva  hostgroup_name .     Para finalizar, tendremos que  verificar la configuraci\u00f3n y reiniciar el servidor Nagios  para guardar los cambios que hayamos introducido.", 
            "title": "Monitoreando servicios en GNU/Linux"
        }, 
        {
            "location": "/nagios/servicios/#monitoreando-servicios-en-windows", 
            "text": "Si ahora, por ejemplo, queremos monitorear un equipo con el  sistema Microsoft Windows , debermos previamente  instalar y configurar el agente NSClient++  en la m\u00e1quina Windows que deseamos monitorear:  ####################################  # Servicios en equipos con Windows #  ####################################  ### Verificando funcionamiento del agente ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Estado del agente NSClient++ check_command            check_nt!CLIENTVERSION }   ### Uptime del sistema ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Uptime check_command            check_nt!UPTIME }   ### Uso del CPU ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Carga del CPU check_command            check_nt!CPULOAD!-l  5 ,80,90 }   ### Uso de la memoria RAM ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Uso de memoria RAM check_command            check_nt!MEMUSE!-w  80  -c  90  }   ### Espacio disponible en disco C: ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Espacio en disco C:/ check_command            check_nt!USEDDISKSPACE!-l C -w  80  -c  90  }   ### Espacio disponible en disco F: ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Espacio en disco F:/ check_command            check_nt!USEDDISKSPACE!-l F -w  90  -c  95  }   ### Estado del Explorador de Windows ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Proceso: Explorador de Windows check_command            check_nt!PROCSTATE!-d SHOWALL -l explorer.exe }   ### Estado del antivirus AVG ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Proceso: Antivirus AVG check_command            check_nt!PROCSTATE!-d SHOWALL -l avgrsa.exe }   ### Estado del protocolo SNMP ###  define  service { use                      generic-service hostgroup_name           sala1 service_description      Servicio: SNMP check_command            check_nt!SERVICESTATE!-d SHOWALL -l SNMP }   ### Estado del servicio de Windows Update ###  define  service{ use                      generic-service hostgroup_name           sala1 service_description      Servicio: Windows Update check_command            check_nt!SERVICESTATE!-d SHOWALL -l wuauserv }   ### Estado del servicio de activaci\u00f3n de Windows ###  define  service{ use                      generic-service hostgroup_name           sala1 service_description      Servicio: Activacion de Windows check_command            check_nt!SERVICESTATE!-d SHOWALL -l WatAdminSvc }   ### Estado del Firewall de Windows ###  define  service{ use                      generic-service hostgroup_name           sala1 service_description      Servicio: Firewall de Windows check_command            check_nt!SERVICESTATE!-d SHOWALL -l MpsSvc }    Por \u00faltimo, tendremos que  verificar la configuraci\u00f3n y reiniciar el servidor Nagios  para guardar los cambios que hayamos introducido.", 
            "title": "Monitoreando servicios en Windows"
        }, 
        {
            "location": "/nagios/servicios/#agregando-monitoreo-de-estado-de-servicios", 
            "text": "Si quisi\u00e9semos agregar el monitoreo del estado de alg\u00fan servicio en Windows (es decir, saber si se est\u00e1 ejecutando o no) abrimos el di\u00e1logo  Ejecutar  pulsando las teclas  Windows  +  r  y ejecutamos  services.msc   Luego, seleccionamos el servicio a monitorear. Por ejemplo, el  Cliente DHCP . Hacemos clic derecho sobre el mismo y seleccionamos  Propiedades  del men\u00fa contextual   Tendremos que copiar el nombre del servicio  tal cual , es decir, respetando las may\u00fasculas y min\u00fasculas. En este caso,  Dhcp   Por \u00faltimo, tendremos que definir el monitoreo del mismo en el archivo  servicios.cfg , donde s\u00f3lo tendremos que cambiar la \u00faltima palabra de la \u00faltima l\u00ednea:   ####################################  # Servicios en equipos con Windows #  ####################################  ### Verificando funcionamiento del Cliente DHCP ###  define  service{ use                      generic-service hostgroup_name           sala1 service_description      Servicio: Cliente DHCP check_command            check_nt!SERVICESTATE!-d SHOWALL -l Dhcp }", 
            "title": "Agregando monitoreo de estado de servicios"
        }, 
        {
            "location": "/nagios/nsclient/", 
            "text": "Para poder \nmonitorear equipos que tengan instalado el sistema operativo Microsoft Windows\n, es preciso instalar en ellos un agente que se encargar\u00e1 de comunicarse con el servidor Nagios para enviar informaci\u00f3n sobre los mismos. Este agente es NSClient++.\n\n\nDescarga e instalaci\u00f3n de NSClient++\n\n\nPodemos descargar el agente de Nagios para Windows desde \nhttp://www.nsclient.org/download\n\n\nUna vez que hayamos descargado el programa, al hacer clic sobre el ejecutable veremos una pantalla similar a la se muestra a continuaci\u00f3n. Hacemos clic en \nNext\n para continuar:\n\n\n\n\nLuego elegimos la herramienta de monitoreo \nGeneric\n:\n\n\n\n\nA continuaci\u00f3n, seleccionamos el tipo de instalaci\u00f3n \nTypical\n:\n\n\n\n\nLlegados a este punto, ingresamos: \n\n\n\n\nLa direcci\u00f3n IP local (127.0.0.1)\n\n\nLa direcci\u00f3n IP del servidor Nagios, separada de la anterior con una coma [,]\n\n\nUna contrase\u00f1a a elecci\u00f3n (\u00a1no olvidar!)\n\n\n\n\nLuego marcamos todas las casillas de verificaci\u00f3n a excepci\u00f3n de \nEnable NSCA client\n y presionamos el bot\u00f3n \nNext\n:\n\n\n\n\nEn este paso, presionamos \nInstall\n:\n\n\n\n\nY comenzar\u00e1 la Instalaci\u00f3n...\n\n\n\n\nSegundos m\u00e1s tarde, la instalaci\u00f3n habr\u00e1 concluido. Clic en \nFinish\n para cerrar el instalador.\n\n\n\n\nHabilitando m\u00f3dulos de NSClient++\n\n\nLa interfaz web de \nNSClient++\n ofrece informaci\u00f3n \u00fatil para verificar el correcto funcionamiento del agente y carga de los m\u00f3dulos. \n\n\nPara ello, en Windows accedemos a la siguiente direcci\u00f3n: \nhttps://127.0.0.1:8443\n\n\n\n\nUna vez all\u00ed iniciamos sesi\u00f3n con la contrase\u00f1a que definimos al momento de la instalaci\u00f3n del cliente\n\n\n\n\nEn el men\u00fa, seleccionamos \"Modules\" y \nchequeamos\n aquellos que no lo est\u00e9n, exceptuando los relacionados con \nNSCA\n: \n\n\n\n\nPor \u00faltimo, guardaremos los cambios: \n\n\n\n\nPasos opcionales para NSClient++\n\n\nEn caso que el servicio presente problemas de funcionamiento podemos  realizar varias acciones, fundamentalmente relacionados con verificar que el servicio est\u00e9 \ncorriendo\n y que los m\u00f3dulos -que ser\u00e1n los encargados de monitorear los distintos servicios en Windows- se hayan cargado correctamente.\n\n\nCargando toda la configuraci\u00f3n de NSClient++\n\n\nAbrimos la terminal de Windows en \nmodo administrador\n y nos desplazamos a la carpeta de instalaci\u00f3n del agente de monitoreo: \n\n\ncd\n c:\n\\P\nrogram Files\n\\N\nSClient++\n\n\n\n\n\n\n\nAcceder a la carpeta NSClient++ desde la terminal\nPodemos desplazarnos con el mouse hasta la carpeta en cuesti\u00f3n y una vez all\u00ed, copiar y pegar la ruta completa hacia la misma desde la barra de direcciones. \n\n\n\n\n\n\nY para cargar la configuraci\u00f3n completa del cliente ejecutamos en la consola de Windows: \n\n\nnscp settings --generate --add-defaults --load-all\n\n\n\n\n\n\n\nSalida del comando\nEl comando, en caso de ser correcto, no produce ninguna salida. Tampoco debemos preocuparnos si leemos el mensaje \u201cFailed to register plugin\u201d. \n\n\n\n\n\n\nHabilitando los m\u00f3dulos manualmente\n\n\nCon un editor de texto plano serio (como Notepad++, Sublime Text, Visual Studio Code, Brackets, etc. \u00a1\nNotepaders\n, abstenerse!) abrimos el archivo \nnsclient.ini\n ubicado en la carpeta de instalaci\u00f3n del programa. En este ejemplo, usamos \nNotepad++\n:\n\n\nstart notepad++ nsclient.ini\n\n\n\n\n\n\n\nAbrir el editor en modo gr\u00e1fico\nSi no deseamos usar la termial, podemos abrir el editor de texto en \nmodo administrador\n y luego el archivo \nnsclient.ini\n ubicado, como se indic\u00f3 mas arriba, en la carpeta de instalaci\u00f3n del programa. \n\n\n\n\n\n\n\n\nLuego, habilitamos manualmente los m\u00f3dulos que figuran como deshabilitados (\ndisabled\n), a excepci\u00f3n de los relacionados con \nNSCA\n, de modo que el bloque quete de la siguiente manera: \n\n\n[\n/modules\n]\n\n\n\n;\n Undocumented key\n\nCheckExternalScripts\n \n=\n enabled\n\n\n;\n Undocumented key\n\nCheckNSCP\n \n=\n enabled\n\n\n;\n Undocumented key\n\nCheckEventLog\n \n=\n enabled\n\n\n;\n Undocumented key\n\nCheckDisk\n \n=\n enabled\n\n\n;\n Undocumented key\n\nCheckSystem\n \n=\n enabled\n\n\n;\n Undocumented key\n\nCheckHelpers\n \n=\n disabled\n\n\n;\n Undocumented key\n\nWEBServer\n \n=\n enabled\n\n\n;\n Undocumented key\n\nNSClientServer\n \n=\n enabled\n\n\n;\n Undocumented key\n\nNRPEServer\n \n=\n enabled\n\n\n\n\n\nVerificando que NSClient++ se est\u00e9 ejecutando\n\n\nEn Windows abrimos el di\u00e1logo \nEjecutar\n pulsando las teclas \nWindows\n + \nr\n y ejecutamos \nservices.msc\n\n\n\n\nHacemos clic derecho sobre el servicio \nNSClient++ Monitoring Agent\n y seleccionamos la opci\u00f3n \nPropiedades\n del men\u00fa contextual\n\n\n\n\nVerificamos que el servicio \nNSClient++\n este iniciado y seteado como autom\u00e1tico.\n\n\n\n\nElegimos la pesta\u00f1a \nIniciar sesi\u00f3n\n. All\u00ed tildaremos la opci\u00f3n \nPermitir que el servicio interact\u00fae con el escritorio\n. \n\n\n\n\nAdicionalmente, podemos detener o iniciar desde la terminal de comandos de Windows. Para ello, abrimos la terminal en \nmodo administrador\n y ejecutamos para detener el servicio: \n\n\nnet stop nscp\n\n\n\n\n\nY para iniciarlo: \n\n\nnet start nscp\n\n\n\n\n\nConfigurando NSClient++ en el servidor Nagios\n\n\nAntes de continuar, es conveniente crear una copia de seguridad del archivo que modificaremos: \n\n\nsudo cp /etc/nagios-plugins/config/nt.cfg /etc/nagios-plugins/config/nt.cfg.original\n\n\n\n\n\nActo seguido, abrimos el archivo \nnt.cfg\n:  \n\n\nsudo vim /etc/nagios-plugins/config/nt.cfg\n\n\n\n\n\nY procederemos a modificar el archivo de tal manera que s\u00f3lo deber\u00eda quedarnos las siguientes l\u00edneas: \n\n\ndefine\n command {\n\ncommand_name\n   check_nt\n\ncommand_line\n   \n/usr/lib/nagios/plugins/check_nt\n -H $HOSTADDRESS$ -p \n12489\n -s contrase\u00f1a -v $ARG1$ $ARG2$\n\n}\n\n\n\n\n\n\nDonde \ncontrase\u00f1a\n, es la clave elegida durante la instalaci\u00f3n del agente NSClient++.\n\n\nPor \u00faltimo, tendremos que \nverificar la configuraci\u00f3n y reiniciar el servidor Nagios\n para guardar los cambios que hayamos introducido.", 
            "title": "Agente Windows"
        }, 
        {
            "location": "/nagios/nsclient/#descarga-e-instalacion-de-nsclient", 
            "text": "Podemos descargar el agente de Nagios para Windows desde  http://www.nsclient.org/download  Una vez que hayamos descargado el programa, al hacer clic sobre el ejecutable veremos una pantalla similar a la se muestra a continuaci\u00f3n. Hacemos clic en  Next  para continuar:   Luego elegimos la herramienta de monitoreo  Generic :   A continuaci\u00f3n, seleccionamos el tipo de instalaci\u00f3n  Typical :   Llegados a este punto, ingresamos:    La direcci\u00f3n IP local (127.0.0.1)  La direcci\u00f3n IP del servidor Nagios, separada de la anterior con una coma [,]  Una contrase\u00f1a a elecci\u00f3n (\u00a1no olvidar!)   Luego marcamos todas las casillas de verificaci\u00f3n a excepci\u00f3n de  Enable NSCA client  y presionamos el bot\u00f3n  Next :   En este paso, presionamos  Install :   Y comenzar\u00e1 la Instalaci\u00f3n...   Segundos m\u00e1s tarde, la instalaci\u00f3n habr\u00e1 concluido. Clic en  Finish  para cerrar el instalador.", 
            "title": "Descarga e instalaci\u00f3n de NSClient++"
        }, 
        {
            "location": "/nagios/nsclient/#habilitando-modulos-de-nsclient", 
            "text": "La interfaz web de  NSClient++  ofrece informaci\u00f3n \u00fatil para verificar el correcto funcionamiento del agente y carga de los m\u00f3dulos.   Para ello, en Windows accedemos a la siguiente direcci\u00f3n:  https://127.0.0.1:8443   Una vez all\u00ed iniciamos sesi\u00f3n con la contrase\u00f1a que definimos al momento de la instalaci\u00f3n del cliente   En el men\u00fa, seleccionamos \"Modules\" y  chequeamos  aquellos que no lo est\u00e9n, exceptuando los relacionados con  NSCA :    Por \u00faltimo, guardaremos los cambios:", 
            "title": "Habilitando m\u00f3dulos de NSClient++"
        }, 
        {
            "location": "/nagios/nsclient/#pasos-opcionales-para-nsclient", 
            "text": "En caso que el servicio presente problemas de funcionamiento podemos  realizar varias acciones, fundamentalmente relacionados con verificar que el servicio est\u00e9  corriendo  y que los m\u00f3dulos -que ser\u00e1n los encargados de monitorear los distintos servicios en Windows- se hayan cargado correctamente.", 
            "title": "Pasos opcionales para NSClient++"
        }, 
        {
            "location": "/nagios/nsclient/#cargando-toda-la-configuracion-de-nsclient", 
            "text": "Abrimos la terminal de Windows en  modo administrador  y nos desplazamos a la carpeta de instalaci\u00f3n del agente de monitoreo:   cd  c: \\P rogram Files \\N SClient++   Acceder a la carpeta NSClient++ desde la terminal Podemos desplazarnos con el mouse hasta la carpeta en cuesti\u00f3n y una vez all\u00ed, copiar y pegar la ruta completa hacia la misma desde la barra de direcciones.     Y para cargar la configuraci\u00f3n completa del cliente ejecutamos en la consola de Windows:   nscp settings --generate --add-defaults --load-all   Salida del comando El comando, en caso de ser correcto, no produce ninguna salida. Tampoco debemos preocuparnos si leemos el mensaje \u201cFailed to register plugin\u201d.", 
            "title": "Cargando toda la configuraci\u00f3n de NSClient++"
        }, 
        {
            "location": "/nagios/nsclient/#habilitando-los-modulos-manualmente", 
            "text": "Con un editor de texto plano serio (como Notepad++, Sublime Text, Visual Studio Code, Brackets, etc. \u00a1 Notepaders , abstenerse!) abrimos el archivo  nsclient.ini  ubicado en la carpeta de instalaci\u00f3n del programa. En este ejemplo, usamos  Notepad++ :  start notepad++ nsclient.ini   Abrir el editor en modo gr\u00e1fico Si no deseamos usar la termial, podemos abrir el editor de texto en  modo administrador  y luego el archivo  nsclient.ini  ubicado, como se indic\u00f3 mas arriba, en la carpeta de instalaci\u00f3n del programa.      Luego, habilitamos manualmente los m\u00f3dulos que figuran como deshabilitados ( disabled ), a excepci\u00f3n de los relacionados con  NSCA , de modo que el bloque quete de la siguiente manera:   [ /modules ]  ;  Undocumented key CheckExternalScripts   =  enabled ;  Undocumented key CheckNSCP   =  enabled ;  Undocumented key CheckEventLog   =  enabled ;  Undocumented key CheckDisk   =  enabled ;  Undocumented key CheckSystem   =  enabled ;  Undocumented key CheckHelpers   =  disabled ;  Undocumented key WEBServer   =  enabled ;  Undocumented key NSClientServer   =  enabled ;  Undocumented key NRPEServer   =  enabled", 
            "title": "Habilitando los m\u00f3dulos manualmente"
        }, 
        {
            "location": "/nagios/nsclient/#verificando-que-nsclient-se-este-ejecutando", 
            "text": "En Windows abrimos el di\u00e1logo  Ejecutar  pulsando las teclas  Windows  +  r  y ejecutamos  services.msc   Hacemos clic derecho sobre el servicio  NSClient++ Monitoring Agent  y seleccionamos la opci\u00f3n  Propiedades  del men\u00fa contextual   Verificamos que el servicio  NSClient++  este iniciado y seteado como autom\u00e1tico.   Elegimos la pesta\u00f1a  Iniciar sesi\u00f3n . All\u00ed tildaremos la opci\u00f3n  Permitir que el servicio interact\u00fae con el escritorio .    Adicionalmente, podemos detener o iniciar desde la terminal de comandos de Windows. Para ello, abrimos la terminal en  modo administrador  y ejecutamos para detener el servicio:   net stop nscp  Y para iniciarlo:   net start nscp", 
            "title": "Verificando que NSClient++ se est\u00e9 ejecutando"
        }, 
        {
            "location": "/nagios/nsclient/#configurando-nsclient-en-el-servidor-nagios", 
            "text": "Antes de continuar, es conveniente crear una copia de seguridad del archivo que modificaremos:   sudo cp /etc/nagios-plugins/config/nt.cfg /etc/nagios-plugins/config/nt.cfg.original  Acto seguido, abrimos el archivo  nt.cfg :    sudo vim /etc/nagios-plugins/config/nt.cfg  Y procederemos a modificar el archivo de tal manera que s\u00f3lo deber\u00eda quedarnos las siguientes l\u00edneas:   define  command { command_name    check_nt command_line     /usr/lib/nagios/plugins/check_nt  -H $HOSTADDRESS$ -p  12489  -s contrase\u00f1a -v $ARG1$ $ARG2$ }   Donde  contrase\u00f1a , es la clave elegida durante la instalaci\u00f3n del agente NSClient++.  Por \u00faltimo, tendremos que  verificar la configuraci\u00f3n y reiniciar el servidor Nagios  para guardar los cambios que hayamos introducido.", 
            "title": "Configurando NSClient++ en el servidor Nagios"
        }, 
        {
            "location": "/nagios/iconos/", 
            "text": "Es posible \nmodificar las im\u00e1genes con que se mostrar\u00e1n los equipos en el mapa\n presentado por Nagios. Podemos visualizar el nombre de los \u00edconos que se mostraran en el mapa en: \n\n\nls -l /usr/share/nagios/htdocs/images/logos \n|\n less\n\n\n\n\n\nPara salir de la vista, presionar la letra \nq\n (quit).\n\n\nDescargando \u00edconos desde el servidor Nagios\n\n\nOtra opci\u00f3n interesante para \nvisualizar gr\u00e1ficamente los \u00edconos\n precargados de Nagios consiste en descargar la carpeta que los contiene desde el servidor. \n\n\nPara ello, instalaremos un \ncliente FTP\n como, por ejemplo, Filezilla. \n\n\nUna vez instalado el programa, hacemos clic sobre el \u00edcono \nGestor de sitios\n:\n\n\n\n\nSe desplegar\u00e1 un cuadro de di\u00e1logo en el cual hacemos clic en \nNuevo sitio\n:\n\n\n\n\nY all\u00ed completamos el formulario con los datos de nuestro servidor Nagios, seg\u00fan se muestra en la imagen y damos clic en \nAceptar\n para guardar los cambios. \n\n\n\n\nSi volvemos a hacer clic en el bot\u00f3n \nGestor de sitios\n veremos la conexi\u00f3n a nuestro servidor realizada con anterioridad. Hacemos clic en \nConectar\n:\n\n\n\n\nComo se trata de una conexi\u00f3n segura (SFTP) el programa nos preguntar\u00e1 si deseamos intercambiar claves de cifrado con el servidor. Hacemos clic en \nAceptar\n:\n\n\n\n\nDe esta manera, en la ventana izquierda del programa veremos nuestros archivos de Windows y en la ventana derecha, la carpeta \nhome\n de nuestro usuario en el servidor Nagios:\n\n\n\n\nA continuaci\u00f3n nos desplazamos hacia la carpeta \n/usr/share/nagios/htdocs/images/\n que contiene los \u00edconos preinstalados de Nagios que se mostrar\u00e1n en la vista de mapa:\n\n\n\n\nHaciendo clic derecho sobre la carpeta en cuesti\u00f3n podemos descargar los archivos de imagen de \u00edcono para visualizaros con mayor comodidad:\n\n\n\n\n\n\nDentro de la carpeta de \u00edconos, encontramos distintos tipos, donde la carpeta \nbase\n contiene los \u00edconos por defecto:\n\n\n\n\nPor ejemplo, el contenido de la carpeta \nlogos\n:\n\n\n\n\nPod\u00e9s encontrar paquetes de \u00edconos adicionales en las siguientes direcciones: \n\n\n\n\n\n\nF*Nagios Icon Pack\n\n\n\n\n\n\nDirectorio de \u00edconos en Nagios Exchange\n\n\n\n\n\n\nDefiniendo \u00edconos de la vista mapa\n\n\nNagios ofrece una vista de mapa, a la cual se accede desde la opci\u00f3n \nMap\n del men\u00fa lateral izquierdo, que permite una vista global del estado de los hosts de manera gr\u00e1fica. Los \u00edconos que representan cada \nhost\n pueden ser modificados convenientemente. \n\n\nPara personalizar los \u00edconos con los que se mostrar\u00e1n los \nhosts\n abrimos el archivo \niconos.cfg\n creado con anterioridad:\n\n\nsudo vim /etc/nagios3/objetos/iconos.cfg\n\n\n\n\n\nDentro del archivo incluimos c\u00f3digo similar al que sigue. Obviamente, deberemos adaptarlo a nuestras necesidades:\n\n\n# Definiendo \u00edconos para un equpo (individualmente)\n\n\ndefine\n hostextinfo {\n\nhost_name\n       router1\n\nicon_image\n      routerNuevo.png\n\nicon_image_alt\n  Router de la sala principal\n\nstatusmap_image\n routerNuevo.gd2\n\nvrml_image\n      routerNuevo.png\n\n}\n\n\n\n# Definiendo \u00edconos para todos los miembros de un grupo\n\n\ndefine\n hostextinfo {\n\nhostgroup_name\n  sala1\n\nicon_image\n      computer.png\n\nicon_image_alt\n  Equipos de la Sala \n1\n\n\nstatusmap_image\n computer.gd2\n\nvrml_image\n      computer.png\n\n}\n\n\n\n\n\n\nPor ejemplo, tomando un \u00edcono entre los ofrecidos por Nagios para un \nhost\n llamado \nwindowsServer\n: \n\n\n# Definiendo \u00edconos para un equpo (individualmente)\n\n\ndefine\n hostextinfo {\n\nhost_name\n       windowsServer\n\nicon_image\n      logos/windows_server.png\n\nicon_image_alt\n  Windows Server \n2012\n\n\nstatusmap_image\n logos/windows_server.gd2\n\nvrml_image\n      logos/windows_server.png\n\n}\n\n\n\n\n\n\n\n\nSobre los \u00edconos\n\n\nLos \n\u00edconos\n se pueden configurar para:\n\n\n\n\n\n\nun equipo en particular, mediante la directiva \nhost_name\n o\n\n\n\n\n\n\npara un grupo de equipos empleando la directiva \nhostgroup_name\n.\n\n\n\n\n\n\n\n\nPor \u00faltimo, tendremos que \nverificar la configuraci\u00f3n y reiniciar el servidor Nagios\n para guardar los cambios que hayamos introducido.\n\n\nCreando nuestro propios \u00edconos\n\n\nNagios aloja las im\u00e1genes (iconos) que se mostrar\u00e1n en el mapa en \n/usr/share/nagios/htdocs/images\n. \n\n\nDentro de esta carpeta debemos copiar nuestros iconos personalizados. \n\n\nAl crear nuestra imagen deberemos tener en cuenta el formato de la misma:\n\n\n\n\nMedida: 40x40 p\u00edxeles\n\n\nFormato: png (transparente)\n\n\n\n\nLuego tendremos que convertir la imagen al resto de los formatos, todos necesarios para una correcta visualizaci\u00f3n del mapa de Nagios, a saber: \n.gif\n y \n.gd2\n. Por ejemplo, suponiendo que nuestra imagen se llama \niconoPersonalizado\n, deber\u00edamos tener al final tres versiones de la misma:  \n\n\n\n\niconoPersonalizado.png\n\n\niconoPersonalizado.gd2\n\n\niconoPersonalizado.gif\n\n\n\n\nInstalando las herramientas\n\n\nPara poder realizar la conversi\u00f3n de formato de im\u00e1genes necesitaremos instalar las siguientes herramientas: \nimagemagick\n, \nlibgd-tools\n y \nnetpbm\n.\n\n\nsudo apt-get install libgd-tools netpbm imagemagick\n\n\n\n\n\nConvirtiendo .png a .gd2\n\n\nPara convertir una imagen \n.png\n a un icono \n.gd2\n ejecutamos el siguiente comando:\n\n\npngtogd2 iconoPersonalizado.png iconoPersonalizado.gd2 \n1\n \n1\n\n\n\n\n\n\nDonde \niconoPersonalizado.png\n es la imagen  \n.png\n que deseamos convertir e \niconoPersonalizado.gd2\n es el nombre de la imagen convertida en formato \n.gd2\n. El par\u00e1metro \n1 1\n indica que la conversi\u00f3n debe crearse en formato raw (crudo), y que el archivo debe crearse sin compresi\u00f3n.\n\n\nConvirtiendo .png a .gif\n\n\nPara realizar esta conversi\u00f3n, simplemente ejecutamos: \n\n\nconvert iconoPersonalizado.png iconoPersonalizado.gif\n\n\n\n\n\nRedimensionando nuestro icono\n\n\nEs probable que nuestro icono en formato \n.png\n no posea la medida requerida por Nagios (40x40 pixeles) ni sea transparente. En ese caso podemos salvar la cuesti\u00f3n ejecutando algunos comandos en la terminal.\n\n\nConvertimos la imagen al formato \nnetpbm\n (pnm - portable anymap format):\n\n\npngtopnm iconoPersonalizado.png \n iconoPersonalizado.pnm \n\n\n\n\n\nFinalmente, redimensionamos la imagen y tornamos el fondo transparente obteniendo un nuevo archivo \n.png\n: \n\n\npnmtopng -transparent \n=\nrgb:00/00/00 -phys \n40\n \n40\n \n1\n iconoPersonalizado.pnm \n iconoPersonalizado.png", 
            "title": "Definiendo \u00edconos"
        }, 
        {
            "location": "/nagios/iconos/#descargando-iconos-desde-el-servidor-nagios", 
            "text": "Otra opci\u00f3n interesante para  visualizar gr\u00e1ficamente los \u00edconos  precargados de Nagios consiste en descargar la carpeta que los contiene desde el servidor.   Para ello, instalaremos un  cliente FTP  como, por ejemplo, Filezilla.   Una vez instalado el programa, hacemos clic sobre el \u00edcono  Gestor de sitios :   Se desplegar\u00e1 un cuadro de di\u00e1logo en el cual hacemos clic en  Nuevo sitio :   Y all\u00ed completamos el formulario con los datos de nuestro servidor Nagios, seg\u00fan se muestra en la imagen y damos clic en  Aceptar  para guardar los cambios.    Si volvemos a hacer clic en el bot\u00f3n  Gestor de sitios  veremos la conexi\u00f3n a nuestro servidor realizada con anterioridad. Hacemos clic en  Conectar :   Como se trata de una conexi\u00f3n segura (SFTP) el programa nos preguntar\u00e1 si deseamos intercambiar claves de cifrado con el servidor. Hacemos clic en  Aceptar :   De esta manera, en la ventana izquierda del programa veremos nuestros archivos de Windows y en la ventana derecha, la carpeta  home  de nuestro usuario en el servidor Nagios:   A continuaci\u00f3n nos desplazamos hacia la carpeta  /usr/share/nagios/htdocs/images/  que contiene los \u00edconos preinstalados de Nagios que se mostrar\u00e1n en la vista de mapa:   Haciendo clic derecho sobre la carpeta en cuesti\u00f3n podemos descargar los archivos de imagen de \u00edcono para visualizaros con mayor comodidad:    Dentro de la carpeta de \u00edconos, encontramos distintos tipos, donde la carpeta  base  contiene los \u00edconos por defecto:   Por ejemplo, el contenido de la carpeta  logos :   Pod\u00e9s encontrar paquetes de \u00edconos adicionales en las siguientes direcciones:     F*Nagios Icon Pack    Directorio de \u00edconos en Nagios Exchange", 
            "title": "Descargando \u00edconos desde el servidor Nagios"
        }, 
        {
            "location": "/nagios/iconos/#definiendo-iconos-de-la-vista-mapa", 
            "text": "Nagios ofrece una vista de mapa, a la cual se accede desde la opci\u00f3n  Map  del men\u00fa lateral izquierdo, que permite una vista global del estado de los hosts de manera gr\u00e1fica. Los \u00edconos que representan cada  host  pueden ser modificados convenientemente.   Para personalizar los \u00edconos con los que se mostrar\u00e1n los  hosts  abrimos el archivo  iconos.cfg  creado con anterioridad:  sudo vim /etc/nagios3/objetos/iconos.cfg  Dentro del archivo incluimos c\u00f3digo similar al que sigue. Obviamente, deberemos adaptarlo a nuestras necesidades:  # Definiendo \u00edconos para un equpo (individualmente)  define  hostextinfo { host_name        router1 icon_image       routerNuevo.png icon_image_alt   Router de la sala principal statusmap_image  routerNuevo.gd2 vrml_image       routerNuevo.png }  # Definiendo \u00edconos para todos los miembros de un grupo  define  hostextinfo { hostgroup_name   sala1 icon_image       computer.png icon_image_alt   Equipos de la Sala  1  statusmap_image  computer.gd2 vrml_image       computer.png }   Por ejemplo, tomando un \u00edcono entre los ofrecidos por Nagios para un  host  llamado  windowsServer :   # Definiendo \u00edconos para un equpo (individualmente)  define  hostextinfo { host_name        windowsServer icon_image       logos/windows_server.png icon_image_alt   Windows Server  2012  statusmap_image  logos/windows_server.gd2 vrml_image       logos/windows_server.png }    Sobre los \u00edconos  Los  \u00edconos  se pueden configurar para:    un equipo en particular, mediante la directiva  host_name  o    para un grupo de equipos empleando la directiva  hostgroup_name .     Por \u00faltimo, tendremos que  verificar la configuraci\u00f3n y reiniciar el servidor Nagios  para guardar los cambios que hayamos introducido.", 
            "title": "Definiendo \u00edconos de la vista mapa"
        }, 
        {
            "location": "/nagios/iconos/#creando-nuestro-propios-iconos", 
            "text": "Nagios aloja las im\u00e1genes (iconos) que se mostrar\u00e1n en el mapa en  /usr/share/nagios/htdocs/images .   Dentro de esta carpeta debemos copiar nuestros iconos personalizados.   Al crear nuestra imagen deberemos tener en cuenta el formato de la misma:   Medida: 40x40 p\u00edxeles  Formato: png (transparente)   Luego tendremos que convertir la imagen al resto de los formatos, todos necesarios para una correcta visualizaci\u00f3n del mapa de Nagios, a saber:  .gif  y  .gd2 . Por ejemplo, suponiendo que nuestra imagen se llama  iconoPersonalizado , deber\u00edamos tener al final tres versiones de la misma:     iconoPersonalizado.png  iconoPersonalizado.gd2  iconoPersonalizado.gif", 
            "title": "Creando nuestro propios \u00edconos"
        }, 
        {
            "location": "/nagios/iconos/#instalando-las-herramientas", 
            "text": "Para poder realizar la conversi\u00f3n de formato de im\u00e1genes necesitaremos instalar las siguientes herramientas:  imagemagick ,  libgd-tools  y  netpbm .  sudo apt-get install libgd-tools netpbm imagemagick", 
            "title": "Instalando las herramientas"
        }, 
        {
            "location": "/nagios/iconos/#convirtiendo-png-a-gd2", 
            "text": "Para convertir una imagen  .png  a un icono  .gd2  ejecutamos el siguiente comando:  pngtogd2 iconoPersonalizado.png iconoPersonalizado.gd2  1   1   Donde  iconoPersonalizado.png  es la imagen   .png  que deseamos convertir e  iconoPersonalizado.gd2  es el nombre de la imagen convertida en formato  .gd2 . El par\u00e1metro  1 1  indica que la conversi\u00f3n debe crearse en formato raw (crudo), y que el archivo debe crearse sin compresi\u00f3n.", 
            "title": "Convirtiendo .png a .gd2"
        }, 
        {
            "location": "/nagios/iconos/#convirtiendo-png-a-gif", 
            "text": "Para realizar esta conversi\u00f3n, simplemente ejecutamos:   convert iconoPersonalizado.png iconoPersonalizado.gif", 
            "title": "Convirtiendo .png a .gif"
        }, 
        {
            "location": "/nagios/iconos/#redimensionando-nuestro-icono", 
            "text": "Es probable que nuestro icono en formato  .png  no posea la medida requerida por Nagios (40x40 pixeles) ni sea transparente. En ese caso podemos salvar la cuesti\u00f3n ejecutando algunos comandos en la terminal.  Convertimos la imagen al formato  netpbm  (pnm - portable anymap format):  pngtopnm iconoPersonalizado.png   iconoPersonalizado.pnm   Finalmente, redimensionamos la imagen y tornamos el fondo transparente obteniendo un nuevo archivo  .png :   pnmtopng -transparent  = rgb:00/00/00 -phys  40   40   1  iconoPersonalizado.pnm   iconoPersonalizado.png", 
            "title": "Redimensionando nuestro icono"
        }, 
        {
            "location": "/nagios/recursos/", 
            "text": "A continuaci\u00f3n se listan algunos recursos \u00fatiles para potenciar a\u00fan m\u00e1s, las funcionalidades de Nagios:\n\n\n\n\nNagios Core - Domentaci\u00f3n oficial\n\n\nTemas oficiales\n\n\n\n\nInterfaces web:\n\n\n\n\nNagVis\n\n\nPNP4Nagios\n\n\nCheckMK\n \n\n\nThruk", 
            "title": "Recursos adicionales"
        }, 
        {
            "location": "/nagios/recursos/#interfaces-web", 
            "text": "NagVis  PNP4Nagios  CheckMK    Thruk", 
            "title": "Interfaces web:"
        }, 
        {
            "location": "/proxy/", 
            "text": "Configurando las GNU/Linux con el proxy del colegio\n\n\nPara congifurar el servidor proxy del instituto en las m\u00e1quinas virtuales seguir lo siguientes pasos: \n\n\n1. Crear un nuevo archivo\n\n\nvim script.sh\n\n\n\n\n\n2. Incluir el contenido del script dentro del archivo\n\n\n#!/bin/bash\n\n\n\n# Configura el proxy en sistemas basados en Debian\n\n\n#\n\n\n# Si el el servidor proxy requiere inicio de sesi\u00f3n, sustituir: \n\n\n# \nhttp://yourproxyaddress:proxyport\n;\n\n\n# con\n\n\n# \nhttp://username:password@yourproxyaddress:proxyport\n;\n\n\n#\n\n\n# TW @la9una\n\n\n\n# Verifica que el usuario sea root\n\n\nif\n [ \n$EUID\n -ne \n0\n ]\n  \nthen\n echo \nPor favor, ejecuta el script como root\n\n  \nexit\n\nfi\n\n\n# Proxy en las variables de entorno\n\n\necho\n \nConfigurando el servidor Proxy en las variables de entorno\n\n\nsleep\n \n1\n\n\n\necho\n \n\n\nhttp_proxy=192.168.0.250:3128\n\n\nhttps_proxy=192.168.0.250:3128\n\n\nftp_proxy=192.168.0.250:3128\n\n\n \n \n/etc/environment\n\n\n\necho\n \n[OK]\n\n\n\n# Proxy para apt\n\n\necho\n \nConfigurando el servidor Proxy para el gestor de paquetes\n\n\nsleep\n \n1\n\n\n\necho\n \n\n\nAcquire::http::Proxy \nhttp://192.168.0.250:3128/\n;\n\n\nAcquire::https::Proxy \nhttp://192.168.0.250:3128/\n;\n\n\nAcquire::ftp::Proxy \nhttp://192.168.0.250:3128/\n;\n\n\n \n \n/etc/apt/apt.conf\n\n\n\necho\n \n[OK]\n\n\n\n# Proxy para Bash\n\n\necho\n \nConfigurando el servidor Proxy en Bash\n\n\nsleep\n \n1\n\n\n\necho\n \n\n\nexport http_proxy=http://192.168.0.250:3128/\n\n\nexport https_proxy=http://192.168.0.250:3128/\n\n\nexport ftp_proxy=http://192.168.0.250:3128/\n\n\n \n \n/etc/bash.bashrc\n\n\n\necho\n \n[OK]\n\n\n\nsleep\n \n1\n\n\necho\n \n=\n El proxy fue configurado con exitosamente en el equipo\n\n\necho\n \n=\n (Ojal\u00e1 funcione) :|\n\n\n\n\n\n\n3. Modificar los permisos del script\n\n\nchmod a+x script\n\n\n\n\n\n4. Ejecutar el script (como root)\n\n\nsh sript \n\n\n\n\n\nUna vez finalizada la ejecucci\u00f3n del script, deber\u00eda las m\u00e1quinas virtuales deber\u00edan quedar configuradas con el proxy escolar.", 
            "title": "Instrucciones"
        }, 
        {
            "location": "/proxy/#configurando-las-gnulinux-con-el-proxy-del-colegio", 
            "text": "Para congifurar el servidor proxy del instituto en las m\u00e1quinas virtuales seguir lo siguientes pasos:", 
            "title": "Configurando las GNU/Linux con el proxy del colegio"
        }, 
        {
            "location": "/proxy/#1-crear-un-nuevo-archivo", 
            "text": "vim script.sh", 
            "title": "1. Crear un nuevo archivo"
        }, 
        {
            "location": "/proxy/#2-incluir-el-contenido-del-script-dentro-del-archivo", 
            "text": "#!/bin/bash  # Configura el proxy en sistemas basados en Debian  #  # Si el el servidor proxy requiere inicio de sesi\u00f3n, sustituir:   #  http://yourproxyaddress:proxyport ;  # con  #  http://username:password@yourproxyaddress:proxyport ;  #  # TW @la9una  # Verifica que el usuario sea root  if  [  $EUID  -ne  0  ]\n   then  echo  Por favor, ejecuta el script como root \n   exit \nfi # Proxy en las variables de entorno  echo   Configurando el servidor Proxy en las variables de entorno  sleep   1  echo    http_proxy=192.168.0.250:3128  https_proxy=192.168.0.250:3128  ftp_proxy=192.168.0.250:3128      /etc/environment  echo   [OK]  # Proxy para apt  echo   Configurando el servidor Proxy para el gestor de paquetes  sleep   1  echo    Acquire::http::Proxy  http://192.168.0.250:3128/ ;  Acquire::https::Proxy  http://192.168.0.250:3128/ ;  Acquire::ftp::Proxy  http://192.168.0.250:3128/ ;      /etc/apt/apt.conf  echo   [OK]  # Proxy para Bash  echo   Configurando el servidor Proxy en Bash  sleep   1  echo    export http_proxy=http://192.168.0.250:3128/  export https_proxy=http://192.168.0.250:3128/  export ftp_proxy=http://192.168.0.250:3128/      /etc/bash.bashrc  echo   [OK]  sleep   1  echo   =  El proxy fue configurado con exitosamente en el equipo  echo   =  (Ojal\u00e1 funcione) :|", 
            "title": "2. Incluir el contenido del script dentro del archivo"
        }, 
        {
            "location": "/proxy/#3-modificar-los-permisos-del-script", 
            "text": "chmod a+x script", 
            "title": "3. Modificar los permisos del script"
        }, 
        {
            "location": "/proxy/#4-ejecutar-el-script-como-root", 
            "text": "sh sript   Una vez finalizada la ejecucci\u00f3n del script, deber\u00eda las m\u00e1quinas virtuales deber\u00edan quedar configuradas con el proxy escolar.", 
            "title": "4. Ejecutar el script (como root)"
        }
    ]
}